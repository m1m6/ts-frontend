{"version":3,"sources":["assets/imgs/signupLogin/icon-bubble.png","apollo/defaultState.js","apollo/resolvers/setCustomizerData.js","apollo/resolvers/index.js","apollo/resolvers/setUserData.js","apollo/resolvers/setOnboardingData.js","apollo/apolloClient.js","constants.js","layout/Layout.js","assets/logo.svg","rootGql.js","rootUseQuery.js","user/gql.js","translateStack/onboarding/useQueries.js","translateStack/onboarding/gql.js","translateStack/onboarding/useMutations.js","browserHistory.js","user/useMutations.js","signupLogin/auth.js","translateStack/customizer/gql.js","translateStack/customizer/useMutations.js","components/GoBack.js","assets/right-arrow-angle.svg","translateStack/customizer/useQueries.js","form/components/Button.js","translateStack/translation/utils.js","form/components/Input.js","user/useQueries.js","layout/CustomizerSidebar.js","layout/Sidebar.js","layout/Content.js","components/PageNotFound.js","components/PageLayout.js","assets/check.svg","form/components/Link.js","components/AuthPageLayout.js","form/components/InputField.js","signupLogin/login/gql.js","helper/graphqlErrors.js","signupLogin/constants.js","signupLogin/login/components/Login.js","signupLogin/login/useLogin.js","signupLogin/utils.js","components/ProtectedRoute.js","signupLogin/signup/gql.js","form/components/Checkbox.js","signupLogin/signup/components/Signup.js","signupLogin/signup/useMutations.js","signupLogin/resetPassword/components/ResetPassword.js","assets/js/languages.js","utils/generalUtils.js","translateStack/onboarding/components/Onboarding.js","translateStack/projects/gql.js","assets/close.svg","components/Popup.js","translateStack/projects/components/Projects.js","translateStack/projects/useMutations.js","translateStack/projects/useQueries.js","translateStack/projects/utils.js","translateStack/translation/gql.js","translateStack/translation/components/Translation.js","translateStack/translation/useQueries.js","translateStack/translation/useMutations.js","translateStack/customizer/components/EmptyCustomizer.js","translateStack/customizer/components/Customizer.js","routes.js","App.js","signupLogin/login/useUserDataMutations.js","index.js"],"names":["module","exports","__webpack_require__","p","defaultState","userData","__typename","id","fullName","email","role","isNew","onboarding","currentStep","customizer","isOpen","position","text","shouldOpenTheSelectOptions","customDirection","languages","branding","removedItems","openLanguagesComponent","resolvers","Mutation","setUserData","_","_ref","_ref2","query","cache","gql","_templateObject","previousState","apolloClient","readQuery","data","Object","objectSpread","writeData","setOnboardingData","setOnboardingData_templateObject","setCustomizerData","setCustomizerData_templateObject","InMemoryCache","freezeResults","middlewareLink","ApolloLink","operation","forward","tokenValue","localStorage","getItem","setContext","headers","Authorization","concat","wsLink","WebSocketLink","uri","process","options","reconnect","connectionParams","uploadLink","createUploadLink","httpLinkAuth","link","split","_getMainDefinition","getMainDefinition","kind","ApolloClient","from","connectToDevTools","assumeImmutableResults","Layout","AntLayout","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","logo_ref2","react_default","a","createElement","stroke","strokeWidth","fill","fillRule","fontFamily","fontSize","fontWeight","line-spacing","transform","x","y","SvgLogo","svgRef","props","width","height","viewBox","ref","ForwardRef","forwardRef","ME_QUERY","rootGql_templateObject","LANGUAGES_LIST_QUERY","_templateObject2","_templateObject3","useMeQuery","useQuery","fetchPolicy","useLanugagesListQuery","ONBOARDING_QUERY_CLIENT","gql_templateObject","ONBOARDING_MUTATION","gql_templateObject2","UPDATE_USER_MUTATION","gql_templateObject3","USER_LANGUAGES_QUERY","_templateObject4","useOnboardingQueryClient","setOnboardingMutation","onboarding_gql_templateObject","useOnboardingMutationClient","useMutation","browserHistory","createBrowserHistory","listen","e","console","log","useUpdateUserMutation","refetchQueries","auth","logIn","token","setAccessToken","logOut","removeAccessToken","setItem","getAccessToken","removeItem","CUSTOMIZER_QUERY","customizer_gql_templateObject","CUSTOMIZER_MUTATION","customizer_gql_templateObject2","CUSTOMIZER_MUTATION_SERVER","customizer_gql_templateObject3","UPDATE_TARGET_LANGUAGES_MUTATION","gql_templateObject4","useCustomizerMutationClient","useCustomizerMutation","useUpdateTargetLanguagesMutation","GoBack","onClickCB","routerHistory","style","color","cursor","marginBottom","onClick","goBack","right_arrow_angle_extends","right_arrow_angle_objectWithoutProperties","right_arrow_angle_objectWithoutPropertiesLoose","right_arrow_angle_ref2","d","right_arrow_angle_ref3","right_arrow_angle_ref4","right_arrow_angle_ref5","right_arrow_angle_ref6","right_arrow_angle_ref7","right_arrow_angle_ref8","right_arrow_angle_ref9","right_arrow_angle_ref10","right_arrow_angle_ref11","right_arrow_angle_ref12","right_arrow_angle_ref13","right_arrow_angle_ref14","right_arrow_angle_ref15","_ref16","right_arrow_angle_ref17","SvgRightArrowAngle","enableBackground","xmlSpace","right_arrow_angle_ForwardRef","useCustomizerQueryClient","Button","children","rest","objectWithoutProperties","size","mapLanguages","languagesList","textAppearance","shouldShowLocalName","undefined","map","lang","Language","label","marginRight","src","flag","borderRadius","marginLeft","abbreviation","toUpperCase","localName","language","value","getPageWordsCount","pageString","count","forEach","string","wordcount","original","getTranslationsPercentageByLanguage","strings","languageId","percentage","langTranslationsCount","translations","_ref3","toFixed","Input","className","type","useUserLanguagesQuery","MainComponent","setWhichInnerSidebar","_useCustomizerMutatio","updateCustomizerClient","slicedToArray","Fragment","react_router_dom","to","title","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","variables","stop","_x","_callee2","_context2","_x2","_ref4","_callee3","_context3","_x3","_ref5","_callee4","_context4","_x4","sharedBtnStyles","bottom","PositionComponent","_ref8","objectDestructuringEmpty","_useMeQuery","meLoading","loading","_useCustomizerMutatio3","updateCustomizer","_useCustomizerMutatio5","_useState","useState","_useState2","btnActive","setBtnActive","_useState3","_useState4","userPosition","setUserPosition","_useState5","_useState6","customPosition","setCustomPosition","_useState7","_useState8","setCustomDirection","me","customDivId","customDivDirection","slice","toLowerCase","es_radio","Group","onChange","_ref9","_callee5","_context5","_x5","components_Input","placeholder","letterSpacing","marginTop","react_select_browser_esm","styles","option","base","backgroundColor","&:active","&:hover","menu","provided","state","selectProps","borderBottom","menuColor","padding","container","_ref7","_ref7$selectProps","control","border","boxShadow","borderColor","indicatorSeparator","display","multiValue","paddingLeft","paddingTop","paddingBottom","singleValue","_ref10","_callee6","_context6","_x6","components_Button","classNames","active","_ref11","_callee7","results","_context7","message","error","abrupt","sent","success","_x7","TextComponent","_ref12","_useMeQuery2","_useCustomizerMutatio7","_useCustomizerMutatio9","_useState9","_useState10","userText","setUserText","_useState11","_useState12","_ref13","_callee8","_context8","_x8","_ref14","_callee9","_context9","_x9","LanguagesComponent","_ref15","_useState13","_useState14","selectedLanguages","setSelectedLanguages","_useState15","_useState16","isInitialValues","setIsInitialValues","_useState17","_useState18","_useLanugagesListQuer","langData","langLoading","_useCustomizerQueryCl","customizerLocalData","customizerLocalLoading","lodaing","_useCustomizerMutatio11","_useMeQuery3","meData","_useUserLanguagesQuer","userLanguagesData","userLanguagesLoading","_useCustomizerMutatio13","_useUpdateTargetLangu","updateTargetLanguages","userLanguages","sourceLanguage","systemLanguages","filter","l","mappedLangs","selectedTargetLangs","isActive","changeHandler","_ref17","_callee10","action","mappedValues","_context10","v","JSON","parse","stringify","push","removedValue","includes","_x10","_x11","_ref6","_ref6$selectProps","minHeight","isLoading","isMulti","isClearable","_ref18","_callee11","selectedLanguagesIds","_context11","warn","_x12","AppearanceComponent","_ref19","_useMeQuery4","_useCustomizerMutatio15","_useCustomizerMutatio17","_useState19","_useState20","_useState21","_useState22","userBranding","setUserBranding","appearance","_ref20","_callee12","_context12","_x13","_ref21","_callee13","_context13","_x14","CustomizerSidebar","_ref22","_useCustomizerMutatio19","_useState23","_useState24","whichInnerSidebar","components_GoBack","_ref23","_callee14","_context14","_x15","CustomizerSidebar_MainComponent","CustomizerSidebar_PositionComponent","CustomizerSidebar_LanguagesComponent","CustomizerSidebar_AppearanceComponent","CustomizerSidebar_TextComponent","whichComponentToRender","Sider","Step","Steps","HeaderLogo","window","location","pathname","OnboardingSteps","updateOnboardingClient","steps","progressDot","current","direction","Sidebar","isOpenCustomizer","onboardingData","_useUpdateUserMutatio","updateUser","_useOnboardingMutatio","activeMenu","setActiveMenu","progress","setProgress","useEffect","index_modern","onLoaderFinished","_data$me","skippedOnboarding","pages","Sidebar_HeaderLogo","Sidebar_OnboardingSteps","layout_CustomizerSidebar","activeLink","dist","verticalAlign","preventDefault","reload","Content","PageNotFound","es_result","status","subTitle","extra","PageLayout","history","Component","setLoading","check_extends","check_objectWithoutProperties","check_objectWithoutPropertiesLoose","check_ref2","check_ref3","check_ref4","check_ref5","check_ref6","check_ref7","check_ref8","check_ref9","check_ref10","check_ref11","check_ref12","check_ref13","check_ref14","check_ref15","check_ref16","check_ref17","SvgCheck","check_ForwardRef","Link","blackLink","classnames","black","AuthPageLayout","headerLink","useLayoutEffect","defineProperty","centerLogo","lineHeight","class","components_Link","right","top","float","opacity","InputField","iconType","_useField","useField","_useField2","field","meta","touched","input","prefix","Icon_default","required","LOGIN_USER_MUTATION","login_gql_templateObject","setUserDataMutation","login_gql_templateObject2","showAllGraphQLErrors","errors","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","f","ROLES","initialValues","password","loginSchema","Yup","shape","Login","_useLogin","login","formik_esm","validationSchema","onSubmit","values","setSubmitting","result","user","t0","graphQLErrors","isSubmitting","dirty","es_row","components_InputField","name","htmlType","disabled","ProtectedRoute","component","userRole","roles","setIsAuth","hasAccess","react_router","render","matchProps","signupMutation","signup_gql_templateObject","Checkbox","termsAndConditions","signupSchema","oneOf","Signup","_useSignup","signup","ROUTE_PATHS","app","components_Checkbox","resetPasswordSchema","ResetPassword","getLanguagesList","copyToClipboard","wrapperId","element","document","getElementById","r","createRange","selectNode","getSelection","removeAllRanges","addRange","execCommand","SyntaxHighlighter","registerLanguage","jsx","OnboardinButton","_ref$disabled","CustomStyle","_ref2$selectProps","defaultStyles","SourceLanguageStep","onboardingMutation","setSourceLanguages","storedSourceLanguageId","currentLang","setCurrent","sourceLanguageExists","loadingMessage","Onboarding_OnboardinButton","TargetLanguagesStep","getUserLangaugesList","currentSelected","setCurrentSelected","isDisabled","Step2","pageUrl","setPageUrl","test","Step3","isValidating","setIsValidating","hasError","setHasError","apiKey","prism_light","dark","translationLanguages","Onboarding","_useOnboardingQueryCl","_useOnboardingMutatio3","pushState","href","addEventListener","event","_React$createElement","Onboarding_SourceLanguageStep","Onboarding_TargetLanguagesStep","Onboarding_Step2","Onboarding_Step3","userPagesQuery","projects_gql_templateObject","ADD_SINGLE_PAGE","projects_gql_templateObject2","close_extends","close_objectWithoutProperties","close_objectWithoutPropertiesLoose","close_ref2","strokeLinecap","strokeLinejoin","close_ref3","SvgClose","close_ForwardRef","Popup","closePopup","columns","dataIndex","placeHolderRow","url","translated","lastEdit","SetupPopup","setShowPopup","setIsSubmitting","_useAddSinglePageMuta","useAddSinglePage","addSinglePage","Projects","showPopup","_useUserPagesQuery","userLoading","dataSource","userPages","rows","page","row","alignItems","background","format","Date","updatedAt","getTime","pageId","mapRows","hasFinishedSetup","_getProjectWordsAndSt","wordsCount","stringCount","getProjectWordsAndStringsCount","percentageTranslations","translationsCount","getProjectTranslationsPercentage","substring","isNaN","table","pagination","onRow","components_Popup","Projects_SetupPopup","getPageQuery","translation_gql_templateObject","PUBLISH_TRANSLATIONS_MUTATION","translation_gql_templateObject2","EditableContext","React","createContext","EditableRow","index","_Form$useForm","Form","useForm","form","es_form","Provider","EditableCell","editable","record","handleSave","restProps","focus","setFocus","childNode","useContext","tbodyWrapper","getElementsByClassName","borderLeft","TextArea","cols","onFocus","onBlur","selectedLanguageId","_getStringTranslation","selectedLanguage","translatedStringValue","updatedAtValue","translatedString","getStringTranslation","stringId","TableWrapper","setRowsData","setUserSelectedLang","setDataUpdated","setSelectedLanguageId","setRows","finalColumns","mappedLanguages","Option","index_4322c0ed_browser_esm","textAlign","shouldCellUpdate","defaultValue","_ref$selectProps","isSearchable","components","col","onCell","mappedRows","newData","toConsumableArray","findIndex","item","splice","isUpdated","body","cell","Translation","match","params","parseInt","_useGetPageQuery","useGetPageQuery","_usePublishStringsMut","publishTranslations","rowsData","dataUpdated","pageData","getPage","percentageTranslated","margin","updatedRows","addTranslations","Translation_TableWrapper","EmptyCustomizer","isOptionDisabled","menuPlacement","menuIsOpen","Customizer","updateCustomizerData","_updateCustomizerData","components_EmptyCustomizer","_data$customizer","localPosition","localCustomDirection","localLanguages","localText","localLanguagesObjects","userLangIds","uniqueLocalLanguages","isLeft","isRight","home","notFound","translation","logout","resetPassword","Routes","components_ProtectedRoute","path","exact","components_PageLayout","components_AuthPageLayout","App","useRef","setUserRole","customizerData","customizerLoading","_useUserData","_setUserDataAsync","_isNew","setUserDataAsync","layout_Layout","layout_Sidebar","layout_Content","routes","ReactDOM","react_apollo_esm","client","react_common_esm","src_App"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kRCAzBC,EAAA,CACXC,SAAU,CACNC,WAAY,WACZC,GAAI,GACJC,SAAU,GACVC,MAAO,GACPC,KAAM,GACNC,OAAO,GAEXC,WAAY,CACRN,WAAY,aACZO,YAAa,GAEjBC,WAAY,CACRR,WAAY,aACZS,QAAQ,EACRC,SAAU,KACVC,KAAM,KACNC,4BAA4B,EAC5BC,gBAAiB,KACjBC,UAAW,KACXC,SAAU,KACVC,aAAc,GACdC,wBAAwB,07BCpBjB,ICCAC,EAAA,CACXC,SAAU,CACNC,YCHO,SAACC,EAADC,EAAAC,GAAwD,IAAlDrB,EAAkDoB,EAAlDpB,SAAUD,EAAwCqB,EAAxCrB,GAAIE,EAAoCmB,EAApCnB,MAAOC,EAA6BkB,EAA7BlB,KAAMC,EAAuBiB,EAAvBjB,MACtCmB,GAD6DD,EAAZE,MACzCC,IAAHC,MAWLC,EAAgBC,EAAaC,UAAU,CAAEN,UACzCO,EAAO,CACThC,SAASiC,OAAAC,EAAA,EAAAD,CAAA,GACFJ,EAAc7B,SADb,CAEJG,WACAD,KACAE,QACAC,OACAC,WASR,OALAwB,EAAaK,UAAU,CACnBV,QACAO,SAGG,MDzBHI,kBEJO,SAACd,EAADC,EAAAC,GAAmC,IAA7BhB,EAA6Be,EAA7Bf,YACXiB,GADwCD,EAAZE,MACpBC,IAAHU,MAOLR,EAAgBC,EAAaC,UAAU,CAAEN,UACzCO,EAAO,CACTzB,WAAW0B,OAAAC,EAAA,EAAAD,CAAA,GACJJ,EAActB,WADX,CAENC,iBASR,OALAsB,EAAaK,UAAU,CACnBV,QACAO,SAGG,MFhBHM,kBDLO,SACXhB,EADWC,EAAAC,GAcV,IAXGd,EAWHa,EAXGb,OACAC,EAUHY,EAVGZ,SACAC,EASHW,EATGX,KACAC,EAQHU,EARGV,2BACAC,EAOHS,EAPGT,gBACAC,EAMHQ,EANGR,UACAC,EAKHO,EALGP,SACAC,EAIHM,EAJGN,aACAC,EAGHK,EAHGL,uBAIEO,GADLD,EADCE,MAEYC,IAAHY,MAeLV,EAAgBC,EAAaC,UAAU,CAAEN,UACzCO,EAAO,CACTvB,WAAWwB,OAAAC,EAAA,EAAAD,CAAA,GACJJ,EAAcpB,WADX,CAENC,SACAC,WACAC,OACAC,6BACAC,kBACAC,YACAC,WACAC,eACAC,4BASR,OALAY,EAAaK,UAAU,CACnBV,QACAO,SAGG,QI1CLN,EAAQ,IAAIc,IAAc,CAAEC,eAAe,IACjDf,EAAMS,UAAU,CAAEH,KAAMjC,IAExB,IAAM2C,EAAiB,IAAIC,aAAW,SAACC,EAAWC,GAC9C,IAAMC,EAAaC,aAAaC,QCdR,gBDoBxB,OALAJ,EAAUK,WAAW,CACjBC,QAAS,CACLC,cAAeL,EAAU,UAAAM,OAAaN,GAAe,MAGtDD,EAAQD,KAGbS,EAAS,IAAIC,IAAc,CAC7BC,IAAKC,uCACLC,QAAS,CACLC,WAAW,EACXC,iBAAkB,CACdR,cAAa,UAAAC,OAAYL,aAAaC,QC5BtB,qBDgCtBY,EAAaC,2BAAiB,CAAEN,IAAKC,2CAErCM,EAAepB,EAAeU,OAAOQ,GAErCG,EAAOC,gBAET,SAAAzC,GAAe,IAAZE,EAAYF,EAAZE,MAAYwC,EACiBC,YAAkBzC,GAAtC0C,EADGF,EACHE,KAAMvB,EADHqB,EACGrB,UACd,MAAgB,wBAATuB,GAAgD,iBAAdvB,GAE7CS,EACAS,EACA/D,GAIS+B,EAAe,IAAIsC,IAAa,CACzCL,KAAMpB,aAAW0B,KAAK,CAACN,IACvBrC,QACA4C,mBAAmB,EACnBnD,YACAoD,wBAAwB,6DElDbC,EAFAC,sCCHf,SAAAC,IAAmR,OAA9PA,EAAAzC,OAAA0C,QAAA,SAAAC,GAAgD,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0B/C,OAAAiD,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,IAAkBS,MAAAC,KAAAR,WAEnR,SAAAS,EAAAP,EAAAQ,GAAqD,SAAAR,EAAA,SAA+B,IAA8DC,EAAAJ,EAA9DD,EAEpF,SAAAI,EAAAQ,GAA0D,SAAAR,EAAA,SAA+B,IAAuDC,EAAAJ,EAAvDD,EAAA,GAAiBa,EAAAxD,OAAAyD,KAAAV,GAAkD,IAAAH,EAAA,EAAYA,EAAAY,EAAAV,OAAuBF,IAAOI,EAAAQ,EAAAZ,GAAqBW,EAAAG,QAAAV,IAAA,IAA0CL,EAAAK,GAAAD,EAAAC,IAA6B,OAAAL,EAF9MgB,CAAAZ,EAAAQ,GAA0E,GAAAvD,OAAA4D,sBAAA,CAAoC,IAAAC,EAAA7D,OAAA4D,sBAAAb,GAA6D,IAAAH,EAAA,EAAYA,EAAAiB,EAAAf,OAA6BF,IAAOI,EAAAa,EAAAjB,GAA2BW,EAAAG,QAAAV,IAAA,GAA0ChD,OAAAiD,UAAAa,qBAAAX,KAAAJ,EAAAC,KAAwEL,EAAAK,GAAAD,EAAAC,IAA+B,OAAAL,EAM3d,IAAIoB,EAAqBC,EAAAC,EAAKC,cAAA,KAC9BjG,GAAA,SACAkG,OAAA,OACAC,YAAA,EACAC,KAAA,OACAC,SAAA,UACAC,WAAA,2BACAC,SAAA,GACAC,WAAA,OACAC,eAAA,IACgBV,EAAAC,EAAKC,cAAA,KACrBjG,GAAA,gBACA0G,UAAA,oCACAN,KAAA,WACgBL,EAAAC,EAAKC,cAAA,QACrBjG,GAAA,kBACgB+F,EAAAC,EAAKC,cAAA,SACrBU,EAAA,GACAC,EAAA,IACC,qBAEDC,EAAAxF,IACA,IAAAyF,EAAAzF,EAAAyF,OACAC,EAAA1B,EAAAhE,EAAA,YAEA,OAAsB0E,EAAAC,EAAKC,cAAA,MAAAzB,EAAA,CAC3BwC,MAAA,QACAC,OAAA,OACAC,QAAA,aACAC,IAAAL,GACGC,GAAUjB,IAGbsB,EAA8BrB,EAAAC,EAAKqB,WAAA,CAAAN,EAAAI,IAAyCpB,EAAAC,EAAKC,cAAAY,EAAArC,EAAA,CACjFsC,OAAAK,GACCJ,QACcpH,EAAAC,kkCC1CR,IAAM0H,EAAW7F,IAAH8F,KAuCRC,GAZkB/F,IAAHgG,KAYQhG,IAAHiG,MCtCpBC,GAAa,kBACtBC,YAASN,EAAU,CACfO,YAAa,uBAGRC,GAAwB,kBACjCF,YAASJ,EAAsB,CAC3BK,YAAa,ysCCRd,IAAME,GAA0BtG,IAAHuG,MAQvBC,GAAsBxG,IAAHyG,MAUnBC,GAAuB1G,IAAH2G,MAUpBC,GAAuB5G,IAAH6G,MC3BpBC,GAA2B,kBAAMX,YAASG,2PCDhD,IAAMS,GAAwB/G,IAAHgH,MCCrBC,GAA8B,kBAAMC,YAAYH,cCDhDI,GAAiBC,eAE9BD,GAAeE,OAAO,SAAAC,GAClBC,QAAQC,IAAI,kBAAmBF,KCD5B,IACMG,GAAwB,kBAAMP,YAAYR,GAAsB,CACzEgB,eAAgB,CAAC,cCJRC,GAAO,CACnBC,MAAO,SAAAC,GACNF,GAAKG,eAAeD,IAGrBE,OAAQ,WACPJ,GAAKK,qBAINF,eAAgB,SAAAD,GAAK,OAAIzG,aAAa6G,QXVX,eWUiCJ,IAC5DK,eAAgB,kBAAM9G,aAAaC,QXXR,iBWY3B2G,kBAAmB,kBAAM5G,aAAa+G,WXZX,m5EYArB,IAAMC,GAAmBpI,IAAHqI,MAgBhBC,GAAsBtI,IAAHuI,MAoCnBC,GAA6BxI,IAAHyI,MA2B1BC,GAAmC1I,IAAH2I,MC1EhCC,GAA8B,kBACvC1B,YAAYoB,GAAqB,CAC7BZ,eAAgB,CAAC,sBAEZmB,GAAwB,kBACjC3B,YAAYsB,GAA4B,KAI/BM,GAAmC,kBAC5C5B,YAAYwB,GAAkC,CAC1ChB,eAAgB,CAAC,oBCSVqB,GAzBA,SAAAnJ,GAAyC,IAAtCoJ,EAAsCpJ,EAAtCoJ,UAAWC,EAA2BrJ,EAA3BqJ,cAAeC,EAAYtJ,EAAZsJ,MACxC,OACI5E,EAAAC,EAAAC,cAAA,KACI0E,MAAK5I,OAAAC,EAAA,EAAAD,CAAA,CACDuE,WAAY,YACZE,WAAY,OACZD,SAAU,OACVqE,MAAO,UACPC,OAAQ,UACRC,aAAc,QACXH,GAEPI,QAAS,WACDN,EACAA,IAEAC,EAAcM,WAd1B,cCJR,SAASC,KAA0Q,OAA7PA,GAAQlJ,OAAA0C,QAAA,SAAAC,GAAuC,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0B/C,OAAAiD,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,IAAkCS,MAAAC,KAAAR,WAEnS,SAASsG,GAAwBpG,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAA8DC,EAAAJ,EAA9DD,EAEpF,SAAsCI,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAAuDC,EAAAJ,EAAvDD,EAAA,GAAiBa,EAAAxD,OAAAyD,KAAAV,GAAkD,IAAAH,EAAA,EAAYA,EAAAY,EAAAV,OAAuBF,IAAOI,EAAAQ,EAAAZ,GAAqBW,EAAAG,QAAAV,IAAA,IAA0CL,EAAAK,GAAAD,EAAAC,IAA6B,OAAAL,EAFhMyG,CAA6BrG,EAAAQ,GAA+B,GAAAvD,OAAA4D,sBAAA,CAAoC,IAAAC,EAAA7D,OAAA4D,sBAAAb,GAA6D,IAAAH,EAAA,EAAYA,EAAAiB,EAAAf,OAA6BF,IAAOI,EAAAa,EAAAjB,GAA2BW,EAAAG,QAAAV,IAAA,GAA0ChD,OAAAiD,UAAAa,qBAAAX,KAAAJ,EAAAC,KAAwEL,EAAAK,GAAAD,EAAAC,IAA+B,OAAAL,EAM3d,IAAI0G,GAAqBrF,EAAAC,EAAKC,cAAA,SAAuCF,EAAAC,EAAKC,cAAA,KAC1EjG,GAAA,SACgB+F,EAAAC,EAAKC,cAAA,SAAuCF,EAAAC,EAAKC,cAAA,QACjEoF,EAAA,qTAGIC,GAAqBvF,EAAAC,EAAKC,cAAA,UAE1BsF,GAAqBxF,EAAAC,EAAKC,cAAA,UAE1BuF,GAAqBzF,EAAAC,EAAKC,cAAA,UAE1BwF,GAAqB1F,EAAAC,EAAKC,cAAA,UAE1ByF,GAAqB3F,EAAAC,EAAKC,cAAA,UAE1B0F,GAAqB5F,EAAAC,EAAKC,cAAA,UAE1B2F,GAAqB7F,EAAAC,EAAKC,cAAA,UAE1B4F,GAAsB9F,EAAAC,EAAKC,cAAA,UAE3B6F,GAAsB/F,EAAAC,EAAKC,cAAA,UAE3B8F,GAAsBhG,EAAAC,EAAKC,cAAA,UAE3B+F,GAAsBjG,EAAAC,EAAKC,cAAA,UAE3BgG,GAAsBlG,EAAAC,EAAKC,cAAA,UAE3BiG,GAAsBnG,EAAAC,EAAKC,cAAA,UAE/BkG,GAA0BpG,EAAAC,EAAKC,cAAA,UAE3BmG,GAAsBrG,EAAAC,EAAKC,cAAA,UAE/BoG,GAAAhL,IACA,IAAAyF,EAAAzF,EAAAyF,OACAC,EAAcmE,GAAwB7J,EAAA,YAEtC,OAAsB0E,EAAAC,EAAKC,cAAA,MAAsBgF,GAAQ,CACzDjL,GAAA,SACA2G,EAAA,MACAC,EAAA,MACAI,MAAA,YACAC,OAAA,YACAC,QAAA,sBACAyD,MAAA,CACA2B,iBAAA,2BAEAC,SAAA,WACApF,IAAAL,GACGC,GAAUqE,GAAOE,GAAOC,GAAOC,GAAOC,GAAOC,GAAOC,GAAOC,GAAOC,GAAQC,GAAQC,GAAQC,GAAQC,GAAQC,GAAMC,GAAUC,KAGzHI,GAA0BzG,EAAAC,EAAKqB,WAAA,CAAAN,EAAAI,IAAyCpB,EAAAC,EAAKC,cAAAoG,GAAmCpB,GAAQ,CAC5HnE,OAAAK,GACCJ,SACcpH,EAAAC,8BC/DF6M,GAA2B,kBAAM7E,YAASiC,cCKxC6C,GANA,SAAArL,GAAA,IAAGsL,EAAHtL,EAAGsL,SAAaC,EAAhB7K,OAAA8K,GAAA,EAAA9K,CAAAV,EAAA,qBACd0E,EAAAC,EAAAC,cAAA,SAAAlE,OAAA0C,OAAA,CAAQqI,KAAK,SAAYF,GACvBD,yBCeUI,GAAe,SAACC,EAAeC,GAAgD,IAAhCC,EAAgCtI,UAAAC,OAAA,QAAAsI,IAAAvI,UAAA,IAAAA,UAAA,GACxF,OAAOoI,EAAcI,IAAI,SAACC,GACtB,IAAMC,EAAWD,EAAKC,SAAWD,EAAKC,SAAWD,EACjD,MAAO,CACHE,MACIxH,EAAAC,EAAAC,cAAA,OACI0E,MAAO,CACHpE,SAAU,OACVqE,MAAO,UACP4C,YAAa,SAGG,cAAnBP,GACGlH,EAAAC,EAAAC,cAAA,OACIwH,IAAKH,EAASI,KACd/C,MAAO,CAAE3D,MAAO,OAAQC,OAAQ,OAAQ0G,aAAc,UAI9D5H,EAAAC,EAAAC,cAAA,QAAM0E,MAAO,CAAEiD,WAAY,SACtBX,GAAqC,cAAnBA,EACbK,EAASO,aAAaC,cACtBb,GAAqC,cAAnBA,EAClB,GACAC,EACAI,EAASS,UACTT,EAASU,WAI3BC,MAAOX,EAAStN,OAKfkO,GAAoB,SAACC,GAC9B,IAAIC,EAAQ,EAQZ,OANID,GAAcA,EAAWtJ,QACzBsJ,EAAWE,QAAQ,SAACC,GAChBF,GAASG,KAAUD,EAAOE,YAI3BJ,GAGEK,GAAsC,SAACC,EAASC,GACzD,IAAIC,EAAa,EACbC,EAAwB,EAe5B,OAbIH,GAAWA,EAAQ7J,SACnB6J,EAAQL,QAAQ,SAAA/M,GAAsB,IAAnBwN,EAAmBxN,EAAnBwN,aACXA,GAAgBA,EAAajK,QAC7BiK,EAAaT,QAAQ,SAAAU,GAAoB,IAAjBJ,EAAiBI,EAAjBJ,WAChBA,IAAeA,GACfE,QAKhBD,GAAeC,EAAwBH,EAAQ7J,OAAU,KAAKmK,QAAQ,IAGnEJ,YC3EIK,GAND,SAAA5N,GAAA,IAAGsL,EAAHtL,EAAGsL,SAAaC,EAAhB7K,OAAA8K,GAAA,EAAA9K,CAAAV,EAAA,qBACb0E,EAAAC,EAAAC,cAAA,QAAAlE,OAAA0C,OAAA,CAAOyK,UAAU,WAAWpC,KAAK,QAAQqC,KAAK,QAAWvC,GACvDD,ICDUyC,GAAwB,kBAAMxH,YAASS,KCiB9CgH,GAAgB,SAAAhO,GAA8B,IAA3BiO,EAA2BjO,EAA3BiO,qBAA2BC,EACflF,KAA1BmF,EADyCzN,OAAA0N,EAAA,EAAA1N,CAAAwN,EAAA,MAGhD,OACIxJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0J,SAAA,KACI3J,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,yBAAf,iCACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,wBACXnJ,EAAAC,EAAAC,cAAC0J,GAAA,EAAD,CACIC,GAAG,IACHC,MAAM,WACN9E,QAAO,eAAAzJ,EAAAS,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAC,EAAOlH,GAAP,OAAAgH,EAAA/J,EAAAkK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACLf,EAAqB,GADhBa,EAAAE,KAAA,EAECb,EAAuB,CACzBc,UAAW,CAAE3P,4BAA4B,KAHxC,wBAAAwP,EAAAI,SAAAN,MAAF,gBAAAO,GAAA,OAAAlP,EAAA6D,MAAAC,KAAAR,YAAA,IAHX,WAWImB,EAAAC,EAAAC,cAACuG,GAAD,CAAY0C,UAAU,kBAG9BnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,wBACXnJ,EAAAC,EAAAC,cAAC0J,GAAA,EAAD,CACIC,GAAG,IACHC,MAAM,WACN9E,QAAO,eAAAgE,EAAAhN,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAS,EAAO1H,GAAP,OAAAgH,EAAA/J,EAAAkK,KAAA,SAAAQ,GAAA,cAAAA,EAAAN,KAAAM,EAAAL,MAAA,cACLf,EAAqB,GADhBoB,EAAAL,KAAA,EAECb,EAAuB,CACzBc,UAAW,CAAE3P,4BAA4B,KAHxC,wBAAA+P,EAAAH,SAAAE,MAAF,gBAAAE,GAAA,OAAA5B,EAAA5J,MAAAC,KAAAR,YAAA,IAHX,YAWImB,EAAAC,EAAAC,cAACuG,GAAD,CAAY0C,UAAU,kBAG9BnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,wBACXnJ,EAAAC,EAAAC,cAAC0J,GAAA,EAAD,CACIC,GAAG,IACHC,MAAM,WACN9E,QAAO,eAAA6F,EAAA7O,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAa,EAAO9H,GAAP,OAAAgH,EAAA/J,EAAAkK,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,cACLf,EAAqB,GADhBwB,EAAAT,KAAA,EAECb,EAAuB,CACzBc,UAAW,CAAE3P,4BAA4B,KAHxC,wBAAAmQ,EAAAP,SAAAM,MAAF,gBAAAE,GAAA,OAAAH,EAAAzL,MAAAC,KAAAR,YAAA,IAHX,aAWImB,EAAAC,EAAAC,cAACuG,GAAD,CAAY0C,UAAU,kBAG9BnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,wBACXnJ,EAAAC,EAAAC,cAAC0J,GAAA,EAAD,CACIC,GAAG,IACHC,MAAM,WACN9E,QAAO,eAAAiG,EAAAjP,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAiB,EAAOlI,GAAP,OAAAgH,EAAA/J,EAAAkK,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cACLf,EAAqB,GADhB4B,EAAAb,KAAA,EAECb,EAAuB,CACzBc,UAAW,CAAE3P,4BAA4B,KAHxC,wBAAAuQ,EAAAX,SAAAU,MAAF,gBAAAE,GAAA,OAAAH,EAAA7L,MAAAC,KAAAR,YAAA,IAHX,OAWImB,EAAAC,EAAAC,cAACuG,GAAD,CAAY0C,UAAU,oBAOpCkC,GAAkB,CACpBxD,WAAY,OACZyD,OAAQ,OACR5Q,SAAU,WACVuG,MAAO,SAwGLsK,GAAoB,SAAAC,GAASxP,OAAAyP,GAAA,EAAAzP,CAAAwP,GAAA,IAAAE,EACM9J,KAA7B7F,EADsB2P,EACtB3P,KAAe4P,EADOD,EAChBE,QADgBC,EAEHtH,KAApBuH,EAFuB9P,OAAA0N,EAAA,EAAA1N,CAAA6P,EAAA,MAAAE,EAGGzH,KAA1BmF,EAHuBzN,OAAA0N,EAAA,EAAA1N,CAAA+P,EAAA,MAAAC,EAIIC,oBAAS,GAJbC,EAAAlQ,OAAA0N,EAAA,EAAA1N,CAAAgQ,EAAA,GAIvBG,EAJuBD,EAAA,GAIZE,EAJYF,EAAA,GAAAG,EAKUJ,mBAAS,MALnBK,EAAAtQ,OAAA0N,EAAA,EAAA1N,CAAAqQ,EAAA,GAKvBE,EALuBD,EAAA,GAKTE,EALSF,EAAA,GAAAG,EAMcR,mBAAS,MANvBS,EAAA1Q,OAAA0N,EAAA,EAAA1N,CAAAyQ,EAAA,GAMvBE,EANuBD,EAAA,GAMPE,EANOF,EAAA,GAAAG,EAOgBZ,mBAAS,MAPzBa,EAAA9Q,OAAA0N,EAAA,EAAA1N,CAAA6Q,EAAA,GAOvBhS,EAPuBiS,EAAA,GAONC,EAPMD,EAAA,GAS9B,GAAInB,EAAW,OAAO3L,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0J,SAAA,MAEtB,IAAInP,EAAauB,GAAQA,EAAKiR,GAAKjR,EAAKiR,GAAGxS,WAAa,GAmBxD,OAjBIA,GAA+B,OAAjB+R,GACdC,EAAgBhS,EAAWE,UAAY,QAGvCF,GAAiC,OAAnBmS,GACdC,EAAkBpS,EAAWyS,aAAe,IAG5CzS,GAAgD,OAAlCA,EAAW0S,oBAAmD,OAApBrS,GACxDkS,EAAmB,CACfvF,MAAK,GAAArK,OAAK3C,EAAW0S,mBAAmB,IAAnC/P,OAAwC3C,EAAW0S,mBACnDC,MAAM,GACNC,eACLlF,MAAO1N,EAAW0S,qBAKtBlN,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0J,SAAA,KACI3J,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,yBAAf,YACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,6BAAf,6CAIAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,yBACXnJ,EAAAC,EAAAC,cAACmN,GAAA,EAAMC,MAAP,CACIpF,MAAOqE,EACPgB,SAAQ,eAAAC,EAAAxR,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAwD,EAAOzK,GAAP,OAAAgH,EAAA/J,EAAAkK,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,cACNkC,EAAgBxJ,EAAErE,OAAOuJ,OAEF,WAAnBlF,EAAErE,OAAOuJ,OACTkE,GAAa,GAJXsB,EAAApD,KAAA,EAMAb,EAAuB,CACzBc,UAAW,CACP7P,SAAUsI,EAAErE,OAAOuJ,SARrB,wBAAAwF,EAAAlD,SAAAiD,MAAF,gBAAAE,GAAA,OAAAH,EAAApO,MAAAC,KAAAR,YAAA,IAaRmB,EAAAC,EAAAC,cAACmN,GAAA,EAAM1G,OAAP,CAAcuB,MAAM,QAApB,QACAlI,EAAAC,EAAAC,cAACmN,GAAA,EAAM1G,OAAP,CAAcuB,MAAM,SAApB,SACAlI,EAAAC,EAAAC,cAACmN,GAAA,EAAM1G,OAAP,CAAcuB,MAAM,UAApB,WAEc,WAAjBqE,GACGvM,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,yBACXnJ,EAAAC,EAAAC,cAAC0N,GAAD,CACIC,YAAY,YACZ3F,MAAOyE,EACPY,SAAU,SAACvK,GACP4J,EAAkB5J,EAAErE,OAAOuJ,OACJ,KAAnBlF,EAAErE,OAAOuJ,OACTkE,GAAa,MAKzBpM,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,QAAf,mFAKAnJ,EAAAC,EAAAC,cAAA,OACI0E,MAAO,CACHrE,WAAY,YACZC,SAAU,OACVC,WAAY,OACZqN,cAAe,QACfjJ,MAAO,UACPkJ,UAAW,SAPnB,wBAYA/N,EAAAC,EAAAC,cAAC8N,GAAA,EAAD,CACIxQ,QAAS,CACL,CAAEgK,MAAO,OAAQU,MAAO,QACxB,CAAEV,MAAO,KAAMU,MAAO,OAE1B+F,OAtJjB,CACHC,OAAQ,SAACC,EAAMpS,GACX,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAmS,EADP,CAEIC,gBAAiB,UACjBvJ,MAAO,UACPrE,SAAU,OACVsN,cAAe,SACfrN,WAAY,OACZ4N,WAAY,CAAED,gBAAiB,6BAC/BE,UAAW,CAAEF,gBAAiB,gCAGtCG,KAAM,SAACC,EAAUC,GAAX,OAAAzS,OAAAC,EAAA,EAAAD,CAAA,GACCwS,EADD,CAEFvN,MAAOwN,EAAMC,YAAYzN,MACzB0N,aAAc,kBACd9J,MAAO4J,EAAMC,YAAYE,UACzBC,QAAS,MAEbC,UAAW,SAACX,EAADY,GAAA,IAAAC,EAAAD,EAASL,YAAezN,EAAxB+N,EAAwB/N,MAAxB,OAAA+N,EAA+B9N,OAA/BlF,OAAAC,EAAA,EAAAD,CAAA,GACJmS,EADI,CAEPlN,MAAOA,EACP8M,UAAW,OACX7M,OAAQ,UAEZ+N,QAAS,SAACd,EAAMM,GAAP,OAAAzS,OAAAC,EAAA,EAAAD,CAAA,GACFmS,EADE,CAELe,OAAQ,sCACRtH,aAAc,MACduH,UAAW,OACXb,UAAW,CAAEc,YAAa,cAE9BC,mBAAoB,SAAClB,EAAMM,GAAP,OAAAzS,OAAAC,EAAA,EAAAD,CAAA,GACbmS,EADa,CAEhBmB,QAAS,UAEbC,WAAY,SAACpB,EAAMM,GAAP,OAAAzS,OAAAC,EAAA,EAAAD,CAAA,GACLmS,EADK,CAERjN,OAAQ,OACR0G,aAAc,MACdsH,OAAQ,sCACRd,gBAAiB,4BACjBoB,YAAa,OACbC,WAAY,OACZC,cAAe,SAEnBC,YAAa,SAACxB,EAAMM,GAAP,OAAAzS,OAAAC,EAAA,EAAAD,CAAA,GACNmS,EADM,CAET5N,WAAY,YACZC,SAAU,OACVC,WAAY,OACZqN,cAAe,QACfjJ,MAAO,cAkGSqD,MAAOrN,EACP0S,SAAQ,eAAAqC,EAAA5T,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAA4F,EAAO7M,GAAP,OAAAgH,EAAA/J,EAAAkK,KAAA,SAAA2F,GAAA,cAAAA,EAAAzF,KAAAyF,EAAAxF,MAAA,cACNyC,EAAmB/J,GACnBoJ,GAAa,GAFP0D,EAAAxF,KAAA,EAGAb,EAAuB,CACzBc,UAAW,CACP1P,gBAAiBmI,EAAEwE,SALrB,wBAAAsI,EAAAtF,SAAAqF,MAAF,gBAAAE,GAAA,OAAAH,EAAAxQ,MAAAC,KAAAR,YAAA,GASRoC,MAAM,QACNC,OAAO,UAKlBiL,GACGnM,EAAAC,EAAAC,cAAC8P,GAAD,CACIpJ,SAAS,OACTuC,UAAW8G,IAAW,wBAAyB,CAAEC,OAAQ/D,IACzDnH,QAAO,eAAAmL,EAAAnU,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAmG,EAAOpN,GAAP,IAAAqN,EAAA,OAAArG,EAAA/J,EAAAkK,KAAA,SAAAmG,GAAA,cAAAA,EAAAjG,KAAAiG,EAAAhG,MAAA,UAEgB,WAAjBiC,GAA8BI,EAF7B,CAAA2D,EAAAhG,KAAA,eAGDiG,KAAQC,MAAM,8BAHbF,EAAAG,OAAA,wBAOLrE,GAAa,GAPRkE,EAAAhG,KAAA,EASiBwB,EAAiB,CACnCvB,UAAUvO,OAAAC,EAAA,EAAAD,CAAA,GACHD,EAAKiR,GAAGxS,WADN,CAELE,SAAU6R,EACVU,YAAaN,EACbO,mBAAoBrS,EACdA,EAAgBqN,MAChB,OAhBT,QASCmI,EATDC,EAAAI,MAoBO3U,MAAQsU,EAAQtU,KAAK+P,kBAC7ByE,KAAQI,QAAQ,uBAGpBvE,GAAa,GAxBR,wBAAAkE,EAAA9F,SAAA4F,MAAF,gBAAAQ,GAAA,OAAAT,EAAA/Q,MAAAC,KAAAR,YAAA,GA0BP+F,MAAK5I,OAAAC,EAAA,EAAAD,CAAA,GAAOqP,SAQ9BwF,GAAgB,SAAAC,GAAS9U,OAAAyP,GAAA,EAAAzP,CAAA8U,GAAA,IAAAC,EACUnP,KAA7B7F,EADkBgV,EAClBhV,KAAe4P,EADGoF,EACZnF,QADYoF,EAECzM,KAApBuH,EAFmB9P,OAAA0N,EAAA,EAAA1N,CAAAgV,EAAA,MAAAC,EAGO3M,KAA1BmF,EAHmBzN,OAAA0N,EAAA,EAAA1N,CAAAiV,EAAA,MAAAC,EAKMjF,mBAAS,MALfkF,EAAAnV,OAAA0N,EAAA,EAAA1N,CAAAkV,EAAA,GAKnBE,EALmBD,EAAA,GAKTE,EALSF,EAAA,GAAAG,EAMQrF,oBAAS,GANjBsF,EAAAvV,OAAA0N,EAAA,EAAA1N,CAAAsV,EAAA,GAMnBnF,EANmBoF,EAAA,GAMRnF,EANQmF,EAAA,GAQ1B,GAAI5F,EAAW,OAAO3L,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0J,SAAA,mBAEtB,IAAInP,EAAauB,GAAQA,EAAKiR,GAAKjR,EAAKiR,GAAGxS,WAAa,GAMxD,OAJIA,GAA2B,OAAb4W,GACdC,EAAY7W,EAAWG,MAAQ,QAI/BqF,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0J,SAAA,KACI3J,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,yBAAf,QACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,6BAAf,6CAIAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,yBACXnJ,EAAAC,EAAAC,cAACmN,GAAA,EAAMC,MAAP,CACIpF,MAAOkJ,EACP7D,SAAQ,eAAAiE,EAAAxV,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAwH,EAAOzO,GAAP,OAAAgH,EAAA/J,EAAAkK,KAAA,SAAAuH,GAAA,cAAAA,EAAArH,KAAAqH,EAAApH,MAAA,cACN+G,EAAYrO,EAAErE,OAAOuJ,OACrBkE,GAAa,GAFPsF,EAAApH,KAAA,EAGAb,EAAuB,CACzBc,UAAW,CACP5P,KAAMqI,EAAErE,OAAOuJ,SALjB,wBAAAwJ,EAAAlH,SAAAiH,MAAF,gBAAAE,GAAA,OAAAH,EAAApS,MAAAC,KAAAR,YAAA,IAURmB,EAAAC,EAAAC,cAACmN,GAAA,EAAM1G,OAAP,CAAcuB,MAAM,QAApB,QACAlI,EAAAC,EAAAC,cAACmN,GAAA,EAAM1G,OAAP,CAAcuB,MAAM,aAApB,aACAlI,EAAAC,EAAAC,cAACmN,GAAA,EAAM1G,OAAP,CAAcuB,MAAM,aAApB,aACAlI,EAAAC,EAAAC,cAACmN,GAAA,EAAM1G,OAAP,CAAcuB,MAAM,aAApB,cAEHiE,GACGnM,EAAAC,EAAAC,cAAC8P,GAAD,CACIpJ,SAAS,OACTuC,UAAW8G,IAAW,yBACtBjL,QAAO,eAAA4M,EAAA5V,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAA4H,EAAO7O,GAAP,IAAAqN,EAAA,OAAArG,EAAA/J,EAAAkK,KAAA,SAAA2H,GAAA,cAAAA,EAAAzH,KAAAyH,EAAAxH,MAAA,cACL8B,GAAa,GADR0F,EAAAxH,KAAA,EAGiBwB,EAAiB,CACnCvB,UAAUvO,OAAAC,EAAA,EAAAD,CAAA,GACHD,EAAKiR,GAAGxS,WADN,CAELG,KAAMyW,MANT,QAGCf,EAHDyB,EAAApB,MAUO3U,MAAQsU,EAAQtU,KAAK+P,kBAC7ByE,KAAQI,QAAQ,uBAXf,wBAAAmB,EAAAtH,SAAAqH,MAAF,gBAAAE,GAAA,OAAAH,EAAAxS,MAAAC,KAAAR,YAAA,GAeP+F,MAAK5I,OAAAC,EAAA,EAAAD,CAAA,GAAOqP,SAQ9B2G,GAAqB,SAAAC,GAASjW,OAAAyP,GAAA,EAAAzP,CAAAiW,GAAA,IAAAC,EACkBjG,mBAAS,MAD5BkG,EAAAnW,OAAA0N,EAAA,EAAA1N,CAAAkW,EAAA,GACxBE,EADwBD,EAAA,GACLE,EADKF,EAAA,GAAAG,EAEerG,oBAAS,GAFxBsG,EAAAvW,OAAA0N,EAAA,EAAA1N,CAAAsW,EAAA,GAExBE,EAFwBD,EAAA,GAEPE,EAFOF,EAAA,GAAAG,EAIGzG,oBAAS,GAJZ0G,EAAA3W,OAAA0N,EAAA,EAAA1N,CAAA0W,EAAA,GAIxBvG,EAJwBwG,EAAA,GAIbvG,EAJauG,EAAA,GAAAC,EAKkB7Q,KAAnC8Q,EALiBD,EAKvB7W,KAAyB+W,EALFF,EAKPhH,QALOmH,EAS3BrM,KAFMsM,EAPqBD,EAO3BhX,KACSkX,EARkBF,EAQ3BG,QAR2BC,EAWE7O,KAA1BmF,EAXwBzN,OAAA0N,EAAA,EAAA1N,CAAAmX,EAAA,MAAAC,EAacxR,KAA/ByR,EAbiBD,EAavBrX,KAAuB4P,EAbAyH,EAaTxH,QAbS0H,EAcoCjK,KAArDkK,EAdiBD,EAcvBvX,KAAkCyX,EAdXF,EAcE1H,QAdF6H,EAeJlP,KAfImP,GAAA1X,OAAA0N,EAAA,EAAA1N,CAAAyX,EAAA,MAgBCjP,MAAzBmP,EAhBwB3X,OAAA0N,EAAA,EAAA1N,CAAA0X,EAAA,MAkB/B,GAAI/H,GAAamH,GAAeG,GAA0BO,EACtD,OAAOxT,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0J,SAAA,mBAEX,IAAIiK,EACAL,GAAqBA,EAAkBK,cAAgBL,EAAkBK,cAAgB,GACzFC,EAAiBR,EAAOrG,GAAG6G,eAE3BC,EAAkBjB,EAAS5L,cAAc8M,OAAO,SAACC,GAAD,OAAOA,EAAE/Z,IAAM4Z,IAE/DI,EAAcjN,GAAa8M,GAG/B,IAFiBT,GAAUA,EAAOrG,GAAKqG,EAAOrG,GAAGxS,WAAa,KAEtB,OAAtB4X,GAA8BI,EAAiB,CAC7D,IAAI0B,EAAsBlN,GAAa4M,EAAcG,OAAO,SAAA3N,GAAA,OAAAA,EAAG+N,YAC/D9B,EAAqB6B,GAGzB,IAAME,EAAa,eAAAC,EAAArY,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAG,SAAAqK,EAAOpM,EAAOqM,GAAd,IAAAC,EAAAxZ,EAAA,OAAAgP,EAAA/J,EAAAkK,KAAA,SAAAsK,GAAA,cAAAA,EAAApK,KAAAoK,EAAAnK,MAAA,cAClB+H,EAAqBnK,GACrBkE,GAAa,GACbqG,GAAmB,GAEf+B,EAAetM,EAAQA,EAAMb,IAAI,SAACqN,GAAD,OAAOA,EAAExM,QAAS,GACnDlN,EAAe2Z,KAAKC,MAAMD,KAAKE,UAAU7B,EAAoBxY,WAAWQ,eAEtD,iBAAlBuZ,EAAOA,QACPvZ,EAAa8Z,KAAKP,EAAOQ,aAAa7M,OAG1ClN,EAAeA,EAAa+Y,OAAO,SAACnV,GAAD,OAAQ4V,EAAaQ,SAASpW,KAZ/C6V,EAAAnK,KAAA,EAaZb,EAAuB,CACzBc,UAAW,CACPzP,UAAW0Z,EACXxZ,aAAcA,KAhBJ,wBAAAyZ,EAAAjK,SAAA8J,MAAH,gBAAAW,EAAAC,GAAA,OAAAb,EAAAjV,MAAAC,KAAAR,YAAA,GAqBnB,OACImB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0J,SAAA,KACI3J,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,yBAAf,aACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,6BAAf,uCAEAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,yBACXnJ,EAAAC,EAAAC,cAAC8N,GAAA,EAAD,CACIC,OA1XT,CACHC,OAAQ,SAACC,EAAMpS,GACX,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKmS,IAEhBI,KAAM,SAACC,EAAUC,GAAX,OAAAzS,OAAAC,EAAA,EAAAD,CAAA,GACCwS,EADD,CAEFvN,MAAOwN,EAAMC,YAAYzN,MACzB0N,aAAc,kBACd9J,MAAO4J,EAAMC,YAAYE,UACzBC,QAAS,MAEbC,UAAW,SAACX,EAADgH,GAAA,IAAAC,EAAAD,EAASzG,YAAezN,EAAxBmU,EAAwBnU,MAAxB,OAAAmU,EAA+BlU,OAA/BlF,OAAAC,EAAA,EAAAD,CAAA,GACJmS,EADI,CAEPlN,MAAOA,EACP8M,UAAW,OACXsH,UAAW,OACXnU,OAAQ,UAEZ+N,QAAS,SAACd,EAAMM,GAAP,OAAAzS,OAAAC,EAAA,EAAAD,CAAA,GACFmS,EADE,CAELkH,UAAW,OACXnG,OAAQ,sCACRtH,aAAc,SAElByH,mBAAoB,SAAClB,EAAMM,GAAP,OAAAzS,OAAAC,EAAA,EAAAD,CAAA,GACbmS,EADa,CAEhBmB,QAAS,UAEbC,WAAY,SAACpB,EAAMM,GAAP,OAAAzS,OAAAC,EAAA,EAAAD,CAAA,GACLmS,EADK,CAERjN,OAAQ,OACR0G,aAAc,MACdsH,OAAQ,sCACRd,gBAAiB,4BACjBoB,YAAa,OACbC,WAAY,OACZC,cAAe,UAuVPlS,QAASyW,EACTqB,UAAWrB,GAAqC,GAAtBA,EAAYnV,OACtCyW,SAAS,EACTrN,MAAOkK,EACP7E,SAAU6G,EACVnT,MAAM,QACN4M,YAAY,mBACZ2H,aAAa,IAEhBrJ,GACGnM,EAAAC,EAAAC,cAAC8P,GAAD,CACIpJ,SAAS,OACTuC,UAAW8G,IAAW,yBACtBjL,QAAO,eAAAyQ,EAAAzZ,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAyL,EAAO1S,GAAP,IAAA2S,EAAAtF,EAAA,OAAArG,EAAA/J,EAAAkK,KAAA,SAAAyL,GAAA,cAAAA,EAAAvL,KAAAuL,EAAAtL,MAAA,cACL8B,GAAa,GACTuJ,EAAuBvD,EACrBA,EAAkB/K,IAAI,SAAC2M,GAAD,OAAOA,EAAE9L,QAC/B,GAJD0N,EAAAtL,KAAA,EAMiBqJ,EAAsB,CACxCpJ,UAAW,CACPoL,0BARH,QAMCtF,EANDuF,EAAAlF,MAYO3U,MAAQsU,EAAQtU,KAAK4X,sBAC7BpD,KAAQI,QAAQ,uBAEhBJ,KAAQsF,KACJ,wEAhBH,wBAAAD,EAAApL,SAAAkL,MAAF,gBAAAI,GAAA,OAAAL,EAAArW,MAAAC,KAAAR,YAAA,GAqBP+F,MAAK5I,OAAAC,EAAA,EAAAD,CAAA,GAAOqP,SAQ9B0K,GAAsB,SAAAC,GAASha,OAAAyP,GAAA,EAAAzP,CAAAga,GAAA,IAAAC,EACIrU,KAA7B7F,EADwBka,EACxBla,KAAe4P,EADSsK,EAClBrK,QADkBsK,EAEL3R,KAApBuH,EAFyB9P,OAAA0N,EAAA,EAAA1N,CAAAka,EAAA,MAAAC,EAGC7R,KAA1BmF,EAHyBzN,OAAA0N,EAAA,EAAA1N,CAAAma,EAAA,MAAAC,EAKEnK,oBAAS,GALXoK,EAAAra,OAAA0N,EAAA,EAAA1N,CAAAoa,EAAA,GAKzBjK,EALyBkK,EAAA,GAKdjK,EALciK,EAAA,GAAAC,EAOQrK,mBAAS,MAPjBsK,EAAAva,OAAA0N,EAAA,EAAA1N,CAAAsa,EAAA,GAOzBE,EAPyBD,EAAA,GAOXE,EAPWF,EAAA,GAShC,GAAI5K,EAAW,OAAO3L,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0J,SAAA,MAEtB,IAAInP,EAAauB,GAAQA,EAAKiR,GAAKjR,EAAKiR,GAAGxS,WAAa,GAMxD,OAJIA,GAA+B,OAAjBgc,GACdC,EAAgBjc,EAAWkc,YAAc,iBAIzC1W,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0J,SAAA,KACI3J,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,yBAAf,YACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,6BAAf,6CAIAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,yBACXnJ,EAAAC,EAAAC,cAACmN,GAAA,EAAMC,MAAP,CACIpF,MAAOsO,EACPjJ,SAAQ,eAAAoJ,EAAA3a,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAA2M,EAAO5T,GAAP,OAAAgH,EAAA/J,EAAAkK,KAAA,SAAA0M,GAAA,cAAAA,EAAAxM,KAAAwM,EAAAvM,MAAA,cACNmM,EAAgBzT,EAAErE,OAAOuJ,OACzBkE,GAAa,GAFPyK,EAAAvM,KAAA,EAGAb,EAAuB,CACzBc,UAAW,CACPxP,SAAUiI,EAAErE,OAAOuJ,SALrB,wBAAA2O,EAAArM,SAAAoM,MAAF,gBAAAE,GAAA,OAAAH,EAAAvX,MAAAC,KAAAR,YAAA,IAURmB,EAAAC,EAAAC,cAACmN,GAAA,EAAM1G,OAAP,CAAcuB,MAAM,iBAApB,iBACAlI,EAAAC,EAAAC,cAACmN,GAAA,EAAM1G,OAAP,CAAcuB,MAAM,oBAApB,qBAEHiE,GACGnM,EAAAC,EAAAC,cAAC8P,GAAD,CACIpJ,SAAS,OACTuC,UAAW8G,IAAW,yBACtBjL,QAAO,eAAA+R,EAAA/a,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAA+M,EAAOhU,GAAP,IAAAqN,EAAA,OAAArG,EAAA/J,EAAAkK,KAAA,SAAA8M,GAAA,cAAAA,EAAA5M,KAAA4M,EAAA3M,MAAA,cACL8B,GAAa,GADR6K,EAAA3M,KAAA,EAEiBwB,EAAiB,CACnCvB,UAAUvO,OAAAC,EAAA,EAAAD,CAAA,GACHD,EAAKiR,GAAGxS,WADN,CAELkc,WAAYF,MALf,QAECnG,EAFD4G,EAAAvG,MASO3U,MAAQsU,EAAQtU,KAAK+P,kBAC7ByE,KAAQI,QAAQ,uBAVf,wBAAAsG,EAAAzM,SAAAwM,MAAF,gBAAAE,GAAA,OAAAH,EAAA3X,MAAAC,KAAAR,YAAA,GAaP+F,MAAK5I,OAAAC,EAAA,EAAAD,CAAA,GAAOqP,SAwDrB8L,GA9BW,SAAAC,GAAgC,IAA7Bnc,EAA6Bmc,EAA7Bnc,uBAA6Boc,EACrB/S,KAA1BmF,EAD+CzN,OAAA0N,EAAA,EAAA1N,CAAAqb,EAAA,MAAAC,EAGJrL,mBAAShR,EAAyB,EAAI,GAHlCsc,EAAAvb,OAAA0N,EAAA,EAAA1N,CAAAsb,EAAA,GAG/CE,EAH+CD,EAAA,GAG5BhO,EAH4BgO,EAAA,GAKtD,OACIvX,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,8BACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,WACXnJ,EAAAC,EAAAC,cAACuX,GAAD,CACI/S,UAAS,eAAAgT,EAAA1b,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAA0N,EAAO3U,GAAP,OAAAgH,EAAA/J,EAAAkK,KAAA,SAAAyN,GAAA,cAAAA,EAAAvN,KAAAuN,EAAAtN,MAAA,cACmB,IAAtBkN,EACA3U,GAAeiS,KAAK,KAEpBvL,EAAqB,GAJlBqO,EAAAtN,KAAA,EAODb,EAAuB,CACzBc,UAAW,CAAEtP,wBAAwB,KARlC,wBAAA2c,EAAApN,SAAAmN,MAAF,gBAAAE,GAAA,OAAAH,EAAAtY,MAAAC,KAAAR,YAAA,GAWT8F,cAAe9B,MAGvB7C,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,mBAzCI,SAACqO,EAAmBjO,GAC/C,OAAQiO,GACJ,KAAK,EACD,OAAOxX,EAAAC,EAAAC,cAAC4X,GAAD,CAAevO,qBAAsBA,IAEhD,KAAK,EACD,OAAOvJ,EAAAC,EAAAC,cAAC6X,GAAD,MAEX,KAAK,EACD,OAAO/X,EAAAC,EAAAC,cAAC8X,GAAD,MAEX,KAAK,EACD,OAAOhY,EAAAC,EAAAC,cAAC+X,GAAD,MACX,KAAK,EACD,OAAOjY,EAAAC,EAAAC,cAACgY,GAAD,OA4BFC,CAAuBX,EAAmBjO,MC/lBnD6O,GAAU7Z,IAAV6Z,MACAC,GAASC,IAATD,KAEFE,GAAa,WACf,OACIvY,EAAAC,EAAAC,cAAA,OACIiJ,UAAU,sBACVnE,QAAS,WACAwT,OAAOC,SAASC,SAAS1D,SAAS,gBACnCnS,GAAeiS,KAAK,OAI5B9U,EAAAC,EAAAC,cAACmB,EAAD,CAAM8H,UAAU,oBAAoB9I,KAAK,WAK/CsY,GAAkB,SAAArd,GAA6C,IAA1Cf,EAA0Ce,EAA1Cf,YAAaqe,EAA6Btd,EAA7Bsd,uBACpC,OACI5Y,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,sBACV5O,EAAc,GACXyF,EAAAC,EAAAC,cAACuX,GAAD,CACI/S,UAAS,eAAAnJ,EAAAS,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAC,EAAOlH,GAAP,OAAAgH,EAAA/J,EAAAkK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACDsO,EAAuB,CACzBrO,UAAW,CAAEhQ,YAAaA,EAAc,KAFrC,wBAAA6P,EAAAI,SAAAN,MAAF,gBAAAO,GAAA,OAAAlP,EAAA6D,MAAAC,KAAAR,YAAA,KAOjBmB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,oBAAf,0BACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,oBACXnJ,EAAAC,EAAAC,cAAC2Y,EAAA,EAAD,CAAOC,aAAW,EAACC,QAASxe,EAAc,EAAGye,UAAU,YACnDhZ,EAAAC,EAAAC,cAACmY,GAAD,CACIvO,MAAM,kBACN9E,QAAO,eAAAgE,EAAAhN,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAS,EAAO1H,GAAP,OAAAgH,EAAA/J,EAAAkK,KAAA,SAAAQ,GAAA,cAAAA,EAAAN,KAAAM,EAAAL,MAAA,cAAAK,EAAAL,KAAA,EACCsO,EAAuB,CACzBrO,UAAW,CAAEhQ,YAAa,KAFzB,wBAAAoQ,EAAAH,SAAAE,MAAF,gBAAAE,GAAA,OAAA5B,EAAA5J,MAAAC,KAAAR,YAAA,GAKP+F,MAAO,CACHE,OAAQ,aAGhB9E,EAAAC,EAAAC,cAACmY,GAAD,CACIvO,MAAM,qBACN9E,QAAO,eAAA6F,EAAA7O,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAa,EAAO9H,GAAP,OAAAgH,EAAA/J,EAAAkK,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,cAAAS,EAAAT,KAAA,EACCsO,EAAuB,CACzBrO,UAAW,CAAEhQ,YAAa,KAFzB,wBAAAwQ,EAAAP,SAAAM,MAAF,gBAAAE,GAAA,OAAAH,EAAAzL,MAAAC,KAAAR,YAAA,GAKP+F,MAAO,CACHE,OAAQ,aAGhB9E,EAAAC,EAAAC,cAACmY,GAAD,CACIvO,MAAM,cACN9E,QAAO,eAAAiG,EAAAjP,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAiB,EAAOlI,GAAP,OAAAgH,EAAA/J,EAAAkK,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EACCsO,EAAuB,CACzBrO,UAAW,CAAEhQ,YAAa,KAFzB,wBAAA4Q,EAAAX,SAAAU,MAAF,gBAAAE,GAAA,OAAAH,EAAA7L,MAAAC,KAAAR,YAAA,GAKP+F,MAAO,CACHE,OAAQ,aAGhB9E,EAAAC,EAAAC,cAACmY,GAAD,CACIvO,MAAM,eACN9E,QAAO,eAAAmQ,EAAAnZ,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAwD,EAAOzK,GAAP,OAAAgH,EAAA/J,EAAAkK,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,cAAAoD,EAAApD,KAAA,EACCsO,EAAuB,CACzBrO,UAAW,CAAEhQ,YAAa,KAFzB,wBAAAmT,EAAAlD,SAAAiD,MAAF,gBAAAE,GAAA,OAAAwH,EAAA/V,MAAAC,KAAAR,YAAA,GAKP+F,MAAO,CACHE,OAAQ,iBA+JrBmU,GAtJC,SAAAlK,GAAkD,IAA/CmK,EAA+CnK,EAA/CmK,iBAAkBje,EAA6B8T,EAA7B9T,uBAA6ByQ,EAC7B9J,KAAzB7F,EADsD2P,EACtD3P,KAAM6P,EADgDF,EAChDE,QACAuN,GAFgDzN,EACvC8E,MACUhO,KAAzBzG,MAFsDqd,EAGzCjW,KAAdkW,EAHuDrd,OAAA0N,EAAA,EAAA1N,CAAAod,EAAA,MAAAE,EAI7B3W,KAA1BiW,EAJuD5c,OAAA0N,EAAA,EAAA1N,CAAAsd,EAAA,MAAA9P,EAK7BlF,KAA1BmF,EALuDzN,OAAA0N,EAAA,EAAA1N,CAAAwN,EAAA,MAAAwC,EAM5BC,mBAAS,YANmBC,EAAAlQ,OAAA0N,EAAA,EAAA1N,CAAAgQ,EAAA,GAMzDuN,EANyDrN,EAAA,GAM7CsN,EAN6CtN,EAAA,GAAAG,EAO9BJ,mBAAS,IAPqBK,EAAAtQ,OAAA0N,EAAA,EAAA1N,CAAAqQ,EAAA,GAOvDoN,EAPuDnN,EAAA,GAO7CoN,EAP6CpN,EAAA,GAkB9D,GATAqN,oBAAU,WAIN,OAHI/N,GACA8N,EAAY,KAET,WACHA,EAAY,KAEjB,IAEC9N,EACA,OACI5L,EAAAC,EAAAC,cAAC0Z,EAAA,EAAD,CACI/U,MAAM,UACN4U,SAAUA,EACVI,iBAAkB,kBAAMH,EAAY,MAvBc,IAAAI,EA8B1D/d,EADAiR,GAAM3S,EA7BoDyf,EA6BpDzf,MAAO0f,EA7B6CD,EA6B7CC,kBAGbxf,GAhC0Duf,EA6B1BE,MAIhCb,GAAkBA,EAAe7e,WAAa6e,EAAe7e,WAAWC,YAAc,GAE1F,OACIyF,EAAAC,EAAAC,cAACkY,GAAD,CACInX,MACK5G,IACI0f,GACDlX,GAAe4V,SAASC,SAAS1D,SAAS,eAC9CkE,EACM,IACA,IAEV/P,UAAU,mBAEVnJ,EAAAC,EAAAC,cAAC+Z,GAAD,MACC5f,IACA0f,GACDlX,GAAe4V,SAASC,SAAS1D,SAAS,cACtChV,EAAAC,EAAAC,cAACga,GAAD,CACI3f,YAAaA,EACbqe,uBAAwBA,IAE5BM,EACAlZ,EAAAC,EAAAC,cAACia,GAAD,CAAmBlf,uBAAwBA,IAE3C+E,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,gBACXnJ,EAAAC,EAAAC,cAAA,OACIiJ,UAAW8G,IAAW,YAAa,CAC/BsJ,WAA2B,aAAfA,KAGhBvZ,EAAAC,EAAAC,cAAC0J,GAAA,EAAD,CACIC,GAAG,IACHC,MAAM,WACN9E,QAAS,SAAChC,GAAD,OAAOwW,EAAc,aAC9BrQ,UAAW8G,IAAW,CAClBmK,WAA2B,aAAfb,KALpB,aAWHlf,GACG2F,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,aACXnJ,EAAAC,EAAAC,cAAC0J,GAAA,EAAD,CACIE,MAAM,QACN9E,QAAO,eAAAwG,EAAAxP,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAA4F,EAAO7M,GAAP,OAAAgH,EAAA/J,EAAAkK,KAAA,SAAA2F,GAAA,cAAAA,EAAAzF,KAAAyF,EAAAxF,MAAA,cAAAwF,EAAAxF,KAAA,EACCsO,EAAuB,CAAErO,UAAW,CAAEhQ,YAAa,KADpD,cAAAuV,EAAAxF,KAAA,EAEC+O,EAAW,CAAE9O,UAAW,CAAEwP,mBAAmB,KAF9C,OAGLlX,GAAeiS,KAAK,eAHf,wBAAAhF,EAAAtF,SAAAqF,MAAF,gBAAAE,GAAA,OAAAvE,EAAApM,MAAAC,KAAAR,YAAA,IAFX,QASImB,EAAAC,EAAAC,cAACma,EAAA,MAAD,CACIzV,MAAO,CACH3D,MAAO,OACPC,OAAQ,OACRf,OAAQ,UACRma,cAAe,cAOnCta,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,aACXnJ,EAAAC,EAAAC,cAAC0J,GAAA,EAAD,CACIC,GAAG,IACHC,MAAM,aACN9E,QAAO,eAAAwI,EAAAxR,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAmG,EAAOpN,GAAP,OAAAgH,EAAA/J,EAAAkK,KAAA,SAAAmG,GAAA,cAAAA,EAAAjG,KAAAiG,EAAAhG,MAAA,cACLkP,EAAc,YACdxW,EAAEuX,iBAFGjK,EAAAhG,KAAA,EAGCb,EAAuB,CAAEc,UAAW,CAAE9P,QAAQ,KAH/C,OAILoI,GAAeiS,KAAK,eAJf,wBAAAxE,EAAA9F,SAAA4F,MAAF,gBAAAQ,GAAA,OAAApD,EAAApO,MAAAC,KAAAR,YAAA,IAHX,eAcJmB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,gBACXnJ,EAAAC,EAAAC,cAAA,OACIiJ,UAAW8G,IAAW,YAAa,CAC/BsJ,WAA2B,aAAfA,KAGhBvZ,EAAAC,EAAAC,cAAC0J,GAAA,EAAD,CACIC,GAAG,YACHC,MAAM,WACN9E,QAAS,SAAChC,GAAD,OAAOwW,EAAc,aAC9BrQ,UAAW8G,IAAW,CAClBmK,WAA2B,aAAfb,KALpB,aAWJvZ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,aACXnJ,EAAAC,EAAAC,cAAC0J,GAAA,EAAD,CACIC,GAAG,IACHC,MAAM,UACN9E,QAAS,SAAChC,GACNA,EAAEuX,iBACFlX,GAAKK,oBACL8U,OAAOC,SAAS+B,WANxB,gBCrObC,GAFClc,IAAOkc,kBCaRC,GAXM,SAAApf,KAAGmd,SAAH,OACpBzY,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACya,GAAA,EAAD,CACCC,OAAO,MACP9Q,MAAM,MACN+Q,SAAS,8CACTC,MAAO9a,EAAAC,EAAAC,cAAC0J,GAAA,EAAD,CAAMC,GAAG,KAAT,iBCuCKkR,GA9CI,SAAAzf,GAQb,IAPF0f,EAOE1f,EAPF0f,QACAC,EAME3f,EANF2f,UAEA5gB,GAIEiB,EALFwO,MAKExO,EAJFjB,OACA0f,EAGEze,EAHFye,kBACAb,EAEE5d,EAFF4d,iBACGrS,EACD7K,OAAA8K,GAAA,EAAA9K,CAAAV,EAAA,gFAAA0Q,EAC4BC,oBAAS,GADrCC,EAAAlQ,OAAA0N,EAAA,EAAA1N,CAAAgQ,EAAA,GACKJ,EADLM,EAAA,GACcgP,EADdhP,EAAA,GASF,OANAyN,oBAAU,WACF/N,GACAsP,GAAW,IAEhB,IAECtP,EAEI5L,EAAAC,EAAAC,cAAC0Z,EAAA,EAAD,CACI/U,MAAM,UACN4U,SAAU,KAIlBP,EAEIlZ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,0BACXnJ,EAAAC,EAAAC,cAAC+a,EAADjf,OAAA0C,OAAA,CAAWiG,cAAeqW,EAAS3gB,MAAOA,GAAWwM,KAGtDxM,IAAU0f,EAEb/Z,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,0BACXnJ,EAAAC,EAAAC,cAAC+a,EAADjf,OAAA0C,OAAA,CAAWiG,cAAeqW,EAAS3gB,MAAOA,GAAWwM,KAKzD7G,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,eAEXnJ,EAAAC,EAAAC,cAAC+a,EAADjf,OAAA0C,OAAA,CAAWiG,cAAeqW,EAAS3gB,MAAOA,GAAWwM,oCC5CrE,SAASsU,KAA0Q,OAA7PA,GAAQnf,OAAA0C,QAAA,SAAAC,GAAuC,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0B/C,OAAAiD,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,IAAkCS,MAAAC,KAAAR,WAEnS,SAASuc,GAAwBrc,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAA8DC,EAAAJ,EAA9DD,EAEpF,SAAsCI,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAAuDC,EAAAJ,EAAvDD,EAAA,GAAiBa,EAAAxD,OAAAyD,KAAAV,GAAkD,IAAAH,EAAA,EAAYA,EAAAY,EAAAV,OAAuBF,IAAOI,EAAAQ,EAAAZ,GAAqBW,EAAAG,QAAAV,IAAA,IAA0CL,EAAAK,GAAAD,EAAAC,IAA6B,OAAAL,EAFhM0c,CAA6Btc,EAAAQ,GAA+B,GAAAvD,OAAA4D,sBAAA,CAAoC,IAAAC,EAAA7D,OAAA4D,sBAAAb,GAA6D,IAAAH,EAAA,EAAYA,EAAAiB,EAAAf,OAA6BF,IAAOI,EAAAa,EAAAjB,GAA2BW,EAAAG,QAAAV,IAAA,GAA0ChD,OAAAiD,UAAAa,qBAAAX,KAAAJ,EAAAC,KAAwEL,EAAAK,GAAAD,EAAAC,IAA+B,OAAAL,EAM3d,IAAI2c,GAAqBtb,EAAAC,EAAKC,cAAA,SAAuCF,EAAAC,EAAKC,cAAA,SAAuCF,EAAAC,EAAKC,cAAA,QACtHoF,EAAA,4cAGIiW,GAAqBvb,EAAAC,EAAKC,cAAA,UAE1Bsb,GAAqBxb,EAAAC,EAAKC,cAAA,UAE1Bub,GAAqBzb,EAAAC,EAAKC,cAAA,UAE1Bwb,GAAqB1b,EAAAC,EAAKC,cAAA,UAE1Byb,GAAqB3b,EAAAC,EAAKC,cAAA,UAE1B0b,GAAqB5b,EAAAC,EAAKC,cAAA,UAE1B2b,GAAqB7b,EAAAC,EAAKC,cAAA,UAE1B4b,GAAsB9b,EAAAC,EAAKC,cAAA,UAE3B6b,GAAsB/b,EAAAC,EAAKC,cAAA,UAE3B8b,GAAsBhc,EAAAC,EAAKC,cAAA,UAE3B+b,GAAsBjc,EAAAC,EAAKC,cAAA,UAE3Bgc,GAAsBlc,EAAAC,EAAKC,cAAA,UAE3Bic,GAAsBnc,EAAAC,EAAKC,cAAA,UAE3Bkc,GAAsBpc,EAAAC,EAAKC,cAAA,UAE3Bmc,GAAsBrc,EAAAC,EAAKC,cAAA,UAE/Boc,GAAAhhB,IACA,IAAAyF,EAAAzF,EAAAyF,OACAC,EAAcoa,GAAwB9f,EAAA,YAEtC,OAAsB0E,EAAAC,EAAKC,cAAA,MAAsBib,GAAQ,CACzDlhB,GAAA,SACA2G,EAAA,MACAC,EAAA,MACAM,QAAA,sBACAyD,MAAA,CACA2B,iBAAA,2BAEAC,SAAA,WACApF,IAAAL,GACGC,GAAUsa,GAAOC,GAAOC,GAAOC,GAAOC,GAAOC,GAAOC,GAAOC,GAAOC,GAAQC,GAAQC,GAAQC,GAAQC,GAAQC,GAAQC,GAAQC,KAGzHE,GAA0Bvc,EAAAC,EAAKqB,WAAA,CAAAN,EAAAI,IAAyCpB,EAAAC,EAAKC,cAAAoc,GAAyBnB,GAAQ,CAClHpa,OAAAK,GACCJ,KC5Ccwb,ID6CA5iB,EAAAC,EC1DF,SAAAyB,GAA8C,IAA3CkM,EAA2ClM,EAA3CkM,MAAOqC,EAAoCvO,EAApCuO,GAAI4S,EAAgCnhB,EAAhCmhB,UAAW7X,EAAqBtJ,EAArBsJ,MAAOI,EAAc1J,EAAd0J,QAC5C,OACChF,EAAAC,EAAAC,cAAC0J,GAAA,EAAD,CACCC,GAAIA,EACJ7E,QAASA,EACTmE,UAAWuT,IAAW,WAAY,CAAEC,MAAOF,IAC3C7X,MAAOA,GAEN4C,KCiHWoV,GAtHQ,SAAAthB,GAAwD,IAAAC,EAArDyf,EAAqD1f,EAArD0f,QAASC,EAA4C3f,EAA5C2f,UAAWnR,EAAiCxO,EAAjCwO,MAAO+S,EAA0BvhB,EAA1BuhB,WAAehW,EAAW7K,OAAA8K,GAAA,EAAA9K,CAAAV,EAAA,8CAS3E,OARAwhB,0BAAgB,WAEE,OADAzZ,GAAKO,kBAEfoX,EAAQlG,KAAK,MAElB,IAEH7R,QAAQC,IAAI,yBAERlD,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,oBACXnJ,EAAAC,EAAAC,cAAA,OACI0E,MAAO,CACH3D,MAAO,MACPC,OAAQ,OACRkN,gBAAiB,UACjBc,OAAQ,sCACRM,YAAa,OACbC,WAAY,SAGhBzP,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAAA,OACIiJ,UAAU,cACVvE,OAAKrJ,EAAA,CACDwS,UAAW,QACXlG,WAAY,SAFX7L,OAAA+gB,GAAA,EAAA/gB,CAAAT,EAAA,YAGU,SAHVS,OAAA+gB,GAAA,EAAA/gB,CAAAT,EAAA,UAIQ,QAJRS,OAAA+gB,GAAA,EAAA/gB,CAAAT,EAAA,iBAKe,UALfA,IAQLyE,EAAAC,EAAAC,cAAA,OAAKwH,IAAKsV,KAAY/b,MAAM,MAAM2D,MAAO,CAAEiD,WAAY,WAE3D7H,EAAAC,EAAAC,cAAA,OACIiJ,UAAU,WACVvE,MAAO,CACHiD,WAAY,QACZtH,WAAY,YACZC,SAAU,OACVyc,WAAY,OACZpY,MAAO,UACPkJ,UAAW,SAGf/N,EAAAC,EAAAC,cAAA,OAAK0E,MAAO,CAAEG,aAAc,SACxB/E,EAAAC,EAAAC,cAACqc,GAAD,CACItb,MAAO,OACPC,OAAQ,OACRb,KAAK,8BAETL,EAAAC,EAAAC,cAAA,QAAM0E,MAAO,CAAEiD,WAAY,SAA3B,qBAGJ7H,EAAAC,EAAAC,cAAA,OAAK0E,MAAO,CAAEG,aAAc,SACxB/E,EAAAC,EAAAC,cAACqc,GAAD,CACItb,MAAO,OACPC,OAAQ,OACRb,KAAK,8BAETL,EAAAC,EAAAC,cAAA,QAAM0E,MAAO,CAAEiD,WAAY,SAA3B,2BAGJ7H,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqc,GAAD,CACItb,MAAO,OACPC,OAAQ,OACRb,KAAK,8BAETL,EAAAC,EAAAC,cAAA,QAAM0E,MAAO,CAAEiD,WAAY,SAA3B,2CAKR7H,EAAAC,EAAAC,cAAA,OACIiJ,UAAU,cACVvE,MAAO,CACHiD,WAAY,QACZnN,SAAU,WACV4Q,OAAQ,OACR9K,SAAU,OACVqE,MAAO,YAGX7E,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,QAAM0E,MAAO,CAAE4K,YAAa,SAA5B,wBAIRxP,EAAAC,EAAAC,cAAA,OAAKgd,MAAM,uBACNL,GACG7c,EAAAC,EAAAC,cAACid,GAAD,CACI3V,MACIxH,EAAAC,EAAAC,cAAA,OACI0E,MAAO,CACHlK,SAAU,WACV0iB,MAAO,OACPC,IAAK,OACLC,MAAO,OACPzY,MAAO,UACPrE,SAAU,OACV+c,QAAS,OACT9c,WAAY,SAGfoc,EAAW/S,OAGpBD,GAAIgT,EAAWhT,KAGvB7J,EAAAC,EAAAC,cAAA,MAAI0E,MAAO,CAAEnE,WAAY,QAAUqJ,GACnC9J,EAAAC,EAAAC,cAAC+a,EAADjf,OAAA0C,OAAA,CAAWiG,cAAeqW,GAAanU,kEC9FxC2W,GAnBI,SAAAliB,GAAmC,IAAhCkM,EAAgClM,EAAhCkM,MAAOiW,EAAyBniB,EAAzBmiB,SAAazc,EAAYhF,OAAA8K,GAAA,EAAA9K,CAAAV,EAAA,sBAAAoiB,EACtBC,aAAS3c,GADa4c,EAAA5hB,OAAA0N,EAAA,EAAA1N,CAAA0hB,EAAA,GAC9CG,EAD8CD,EAAA,GACvCE,EADuCF,EAAA,GAAAA,EAAA,GAErD,OACC5d,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,uBACdnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,cAAc3B,GAC5BsW,EAAKC,SAAWD,EAAKtN,OACrBxQ,EAAAC,EAAAC,cAAA,QAAMiJ,UAAU,iBAAiB2U,EAAKtN,OAEvCxQ,EAAAC,EAAAC,cAAC8d,GAAA,EAADhiB,OAAA0C,OAAA,CACCqI,KAAK,SACD8W,EACA7c,EAHL,CAICid,OAAQje,EAAAC,EAAAC,cAACge,GAAAje,EAAD,CAAMmJ,KAAMqU,IACpBtU,UAAW8G,IAAW,CAAEkO,SAAUL,EAAKC,SAAWD,EAAKtN,gqBCjBpD,IAAM4N,GAAsB1iB,IAAH2iB,MAenBC,GAAsB5iB,IAAH6iB,8hCCfzB,IAAMC,GAAuB,SAAAC,GAAU,IAAAC,EAAAC,EAAAC,GACzBH,GADyB,IAC7C,IAAAE,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAA4B,KAAjBvO,EAAiBkO,EAAAxW,MAC3BqI,KAAQC,MAAMA,EAAMD,UAFwB,MAAAyO,GAAAL,EAAA3b,EAAAgc,GAAA,QAAAL,EAAAM,MCFjCC,GACF,QCYLC,GAAgB,CAClBhlB,MAAO,GACPilB,SAAU,IAGRC,GAAcC,OAAaC,MAAM,CACnCplB,MAAOmlB,OAAanlB,MAAM,4BAA4BgkB,SAAS,aAC/DiB,SAAUE,OAAanB,SAAS,eA6DrBqB,GA1DD,SAAAlkB,GAAuBA,EAApBqJ,cAAoB,IAAA8a,ECpBP7c,YAAYwb,IDqB/BsB,EAD0B1jB,OAAA0N,EAAA,EAAA1N,CAAAyjB,EAAA,MAEjC,OACIzf,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,iBACXnJ,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CACIR,cAAeA,GACfS,iBAAkBP,GAClBQ,SAAQ,eAAA7W,EAAAhN,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAC,EAAO4V,EAAPvkB,GAAA,IAAAwkB,EAAAC,EAAA,OAAAhW,EAAA/J,EAAAkK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAiByV,EAAjBxkB,EAAiBwkB,cAAjB3V,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEmBoV,EAAM,CAAEnV,UAAUvO,OAAAC,EAAA,EAAAD,CAAA,GAAM8jB,KAF3C,QAEIE,EAFJ5V,EAAAsG,QAIErN,GAAKC,MAAM0c,EAAOjkB,KAAK2jB,MAAMnc,OACjByc,EAAOjkB,KAAK2jB,MAAMO,KAAK7lB,OEjCvB8kB,GFmCR1G,OAAOC,SAAS/Z,OAAO,eAGvB8Z,OAAOC,SAAS/Z,OAAO,UAV7B0L,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA8V,GAAA9V,EAAA,SAcF2V,GAAc,GACdvB,GAAqBpU,EAAA8V,GAAMC,eAfzB,yBAAA/V,EAAAI,SAAAN,EAAA,iBAAF,gBAAAO,EAAAG,GAAA,OAAA5B,EAAA5J,MAAAC,KAAAR,YAAA,IAmBP,SAAAgM,KAAGiV,OAAH,IAAWM,EAAXvV,EAAWuV,aAAcC,EAAzBxV,EAAyBwV,MAAO5B,EAAhC5T,EAAgC4T,OAAhC,OACGze,EAAAC,EAAAC,cAACyf,GAAA,EAAD,KACI3f,EAAAC,EAAAC,cAACogB,GAAA,EAAD,CAAKnX,UAAU,YACXnJ,EAAAC,EAAAC,cAACqgB,GAAD,CAAYC,KAAK,QAAQpX,KAAK,OAAO5B,MAAM,WAE/CxH,EAAAC,EAAAC,cAACogB,GAAA,EAAD,CAAKnX,UAAU,YACXnJ,EAAAC,EAAAC,cAACqgB,GAAD,CAAYC,KAAK,WAAWpX,KAAK,WAAW5B,MAAM,cAEtDxH,EAAAC,EAAAC,cAACogB,GAAA,EAAD,CAAKnX,UAAU,mBACXnJ,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAACid,GAAD,CAAMtT,GAAG,kBAAkBrC,MAAM,4BAGzCxH,EAAAC,EAAAC,cAACogB,GAAA,EAAD,KACItgB,EAAAC,EAAAC,cAAC8P,GAAD,CACIyQ,SAAS,SACTrX,KAAK,UACLsX,SAAUN,EACVjX,UAAW8G,IAAW,iBAAkB,CACpCC,OAAQmQ,GAAwC,IAA/BrkB,OAAOyD,KAAKgf,GAAQ3f,UAGxCshB,EAAe,gBAAkBpgB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0J,SAAA,sBG7CnDgX,GAlBQ,SAAArlB,GAA+D,IAAjD2f,EAAiD3f,EAA5DslB,UAAsBC,EAAsCvlB,EAAtCulB,SAAiBC,GAAqBxlB,EAA5BjB,MAA4BiB,EAArBwlB,OAAUja,EAAW7K,OAAA8K,GAAA,EAAA9K,CAAAV,EAAA,0CAC5EiI,EAAQF,GAAKO,iBAD+DoI,EAEtDC,oBAAS,GAF6CC,EAAAlQ,OAAA0N,EAAA,EAAA1N,CAAAgQ,EAAA,GAEnE+U,GAFmE7U,EAAA,GAAAA,EAAA,IAWlF,OANAyN,oBAAU,WACNoH,EAVU,SAACD,EAAOD,GACtB,OAAOC,EAAM9L,SAAS6L,GASRG,CAAUF,EAAOD,KAC5B,CAACC,EAAOD,IAEX5d,QAAQC,IAAI,yBAELK,EACHvD,EAAAC,EAAAC,cAAC+gB,EAAA,EAADjlB,OAAA0C,OAAA,GAAWmI,EAAX,CAAiBqa,OAAQ,SAACC,GAAD,OAAgBnhB,EAAAC,EAAAC,cAAC+a,EAAckG,OAExDnhB,EAAAC,EAAAC,cAAC+gB,EAAA,EAAD,CAAUpX,GAAG,4WCpBd,IAAMuX,GAAiB1lB,IAAH2lB,MCmBZC,GAjBE,SAAAhmB,GAAmC,IAAhCkM,EAAgClM,EAAhCkM,MAAoBxG,GAAY1F,EAAzBmiB,SAAyBzhB,OAAA8K,GAAA,EAAA9K,CAAAV,EAAA,uBAAAoiB,EACjBC,aAAS3c,GADQ4c,EAAA5hB,OAAA0N,EAAA,EAAA1N,CAAA0hB,EAAA,GACzCG,EADyCD,EAAA,GAClCE,EADkCF,EAAA,GAAAA,EAAA,GAEhD,OACI5d,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,0BACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,kBACXnJ,EAAAC,EAAAC,cAAA,QAAAlE,OAAA0C,OAAA,CACI0K,KAAK,YACDyU,EACA7c,EAHR,CAIImI,UAAW8G,IAAW,CAAEkO,SAAUL,EAAKC,SAAWD,EAAKtN,YAG/DxQ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,cAAc3B,KCHnC2X,GAAgB,CAClBhlB,MAAO,GACPilB,SAAU,GACVllB,SAAU,GACVE,KAAM,QACNmnB,oBAAoB,GAGlBC,GAAelC,OAAaC,MAAM,CACpCplB,MAAOmlB,OAAanlB,MAAM,4BAA4BgkB,SAAS,aAC/DiB,SAAUE,OAAanB,SAAS,aAChCjkB,SAAUolB,OAAanB,SAAS,aAChCoD,mBAAoBjC,OAAcmC,MAAM,EAAC,MAsF9BC,GAnFA,SAAApmB,GAA6BA,EAA1BqJ,cAA0B,IAAXvK,EAAWkB,EAAXlB,KAAWunB,ECzBb/e,YAAYwe,ID0BhCQ,EADiC5lB,OAAA0N,EAAA,EAAA1N,CAAA2lB,EAAA,MAKxC,OAHIvnB,IACA+kB,GAAc/kB,KAAOA,GAGrB4F,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,iBACXnJ,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CACIR,cAAeA,GACfS,iBAAkB4B,GAClB3B,SAAQ,eAAA7W,EAAAhN,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAC,EAAO4V,EAAPvkB,GAAA,IAAAwkB,EAAAC,EAAA,OAAAhW,EAAA/J,EAAAkK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAiByV,EAAjBxkB,EAAiBwkB,cAAjB3V,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEmBsX,EAAO,CACxBrX,UAAW,CACPrQ,SAAU4lB,EAAO5lB,SACjBC,MAAO2lB,EAAO3lB,MACdilB,SAAUU,EAAOV,YANvB,QAEIY,EAFJ5V,EAAAsG,QAUErN,GAAKG,eAAewc,EAAOjkB,KAAK6lB,OAAOre,OACvCiV,OAAOC,SAAS/Z,OAAOmjB,GAAYC,IAAIxnB,aAXzC8P,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA8V,GAAA9V,EAAA,SAcF2V,GAAc,GACdvB,GAAqBpU,EAAA8V,GAAMC,eAfzB,yBAAA/V,EAAAI,SAAAN,EAAA,iBAAF,gBAAAO,EAAAG,GAAA,OAAA5B,EAAA5J,MAAAC,KAAAR,YAAA,IAmBP,SAACmC,GACkDA,EAAxC8e,OADA,IACQM,EAAgCpf,EAAhCof,aAAcC,EAAkBrf,EAAlBqf,MAAO5B,EAAWzd,EAAXyd,OACrC,OACIze,EAAAC,EAAAC,cAACyf,GAAA,EAAD,KACI3f,EAAAC,EAAAC,cAACogB,GAAA,EAAD,CAAKnX,UAAU,YACXnJ,EAAAC,EAAAC,cAACqgB,GAAD,CAAYC,KAAK,QAAQpX,KAAK,OAAO5B,MAAM,QAAQqG,YAAY,MAGnE7N,EAAAC,EAAAC,cAACogB,GAAA,EAAD,CAAKnX,UAAU,YACXnJ,EAAAC,EAAAC,cAACqgB,GAAD,CACIC,KAAK,WACLpX,KAAK,OACL5B,MAAM,YACNqG,YAAY,MAIpB7N,EAAAC,EAAAC,cAACogB,GAAA,EAAD,CAAKnX,UAAU,YACXnJ,EAAAC,EAAAC,cAACqgB,GAAD,CACIC,KAAK,WACLpX,KAAK,WACL5B,MAAM,WACNqG,YAAY,MAIpB7N,EAAAC,EAAAC,cAACogB,GAAA,EAAD,CAAKnX,UAAU,YACXnJ,EAAAC,EAAAC,cAAC6hB,GAAD,CACIvB,KAAK,qBACLpX,KAAK,WACL5B,MAAM,8PAIdxH,EAAAC,EAAAC,cAACogB,GAAA,EAAD,KACItgB,EAAAC,EAAAC,cAAC8P,GAAD,CACIyQ,SAAS,SACTrX,KAAK,UACLsX,SAAUN,EACVjX,UAAW8G,IAAW,iBAAkB,CACpCC,OAAQmQ,GAAwC,IAA/BrkB,OAAOyD,KAAKgf,GAAQ3f,UAGxCshB,EAAe,gBAAkBpgB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0J,SAAA,8BE3FhEwV,WAAgB,CAClBhlB,MAAO,KAGL6nB,GAAsB1C,OAAaC,MAAM,CAC3CplB,MAAOmlB,OAAanlB,MAAM,4BAA4BgkB,SAAS,eAmEpD8D,GAhEO,SAAA3mB,GAAuB,IAApBqJ,EAAoBrJ,EAApBqJ,cAErB,OACI3E,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,iBACXnJ,EAAAC,EAAAC,cAAA,KACI0E,MAAO,CACHrE,WAAY,YACZE,WAAY,OACZD,SAAU,OACVqE,MAAO,UACPC,OAAQ,UACRC,aAAc,QAElBC,QAAS,kBAAML,EAAcM,WATjC,aAaAjF,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CACIR,cAAeA,GACfS,iBAAkBoC,GAClBnC,SAAQ,eAAA7W,EAAAhN,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAC,EAAO4V,EAAPvkB,GAAA,OAAAyO,EAAA/J,EAAAkK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAA/O,EAAiBwkB,cAAjB,wBAAA3V,EAAAI,SAAAN,MAAF,gBAAAO,EAAAG,GAAA,OAAA5B,EAAA5J,MAAAC,KAAAR,YAAA,IAmBP,SAAAgM,KAAGiV,OAAH,IAAWM,EAAXvV,EAAWuV,aAAcC,EAAzBxV,EAAyBwV,MAAO5B,EAAhC5T,EAAgC4T,OAAhC,OACGze,EAAAC,EAAAC,cAACyf,GAAA,EAAD,KACI3f,EAAAC,EAAAC,cAACogB,GAAA,EAAD,CAAKnX,UAAU,YACXnJ,EAAAC,EAAAC,cAACqgB,GAAD,CAAYC,KAAK,QAAQpX,KAAK,OAAO5B,MAAM,WAE/CxH,EAAAC,EAAAC,cAACogB,GAAA,EAAD,KACItgB,EAAAC,EAAAC,cAAC8P,GAAD,CACIyQ,SAAS,SACTrX,KAAK,UACLsX,SAAUN,EACVjX,UAAW8G,IAAW,iBAAkB,CACpCC,OAAQmQ,GAAwC,IAA/BrkB,OAAOyD,KAAKgf,GAAQ3f,SAEzC8F,MAAO,CAAEmJ,UAAW,SAEnBqS,EAAe,aAAepgB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0J,SAAA,wDClElDuY,GAAmB,WAAM,IAAAtP,EACD7Q,KAAzBhG,EAD0B6W,EAC1B7W,KAAM6P,EADoBgH,EACpBhH,QAEd,IAHkCgH,EACXpC,MAMvB,OAAI5E,EACO,GAGe7P,EAAlBkL,cAEaI,IAAI,SAACY,GAAD,MAAe,CACpCT,MACIxH,EAAAC,EAAAC,cAAA,OACI0E,MAAO,CACHpE,SAAU,OACVqE,MAAO,UACP4C,YAAa,SAGjBzH,EAAAC,EAAAC,cAAA,OACIwH,IAAKO,EAASN,KACd/C,MAAO,CAAE3D,MAAO,OAAQC,OAAQ,OAAQ0G,aAAc,UAE1D5H,EAAAC,EAAAC,cAAA,QAAM0E,MAAO,CAAEiD,WAAY,SAAWI,EAASA,WAGvDC,MAAOD,EAAShO,OClCXkoB,GAAkB,SAACC,GAC5B,IAAIC,EAAUC,SAASC,eAAeH,GAGlCI,EAAIF,SAASG,cACjBD,EAAEE,WAAWL,GACb,IAAIxD,EAAIrG,OAAOmK,eACf9D,EAAE+D,kBACF/D,EAAEgE,SAASL,GAEXF,SAASQ,YAAY,SCUzBC,KAAkBC,iBAAiB,MAAOC,MAE1C,IAAMC,GAAkB,SAAA5nB,GAAqD,IAAA6nB,EAAA7nB,EAAlDolB,gBAAkD,IAAAyC,KAAhC3b,EAAgClM,EAAhCkM,MAAO2M,EAAyB7Y,EAAzB6Y,SAAanT,EAAYhF,OAAA8K,GAAA,EAAA9K,CAAAV,EAAA,iCACzE,OACI0E,EAAAC,EAAAC,cAAC8P,GAADhU,OAAA0C,OAAA,CACIkI,SAAUY,EACV2B,UAAW8G,IAAW,iBAAkB,CAAEC,OAAQiE,IAClDuM,SAAUA,EACV9b,MAAO,CACH1D,OAAQ,OACR0G,aAAc,MACduH,UAAW,0BACXf,gBAAiB,YAEjBpN,KAKVoiB,GAAc,WAChB,MAAO,CACHlV,OAAQ,SAACC,EAAMpS,GACX,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKmS,IAEhBI,KAAM,SAACC,EAAUC,GAAX,OAAAzS,OAAAC,EAAA,EAAAD,CAAA,GACCwS,EADD,CAEFvN,MAAOwN,EAAMC,YAAYzN,MACzB0N,aAAc,kBACd9J,MAAO4J,EAAMC,YAAYE,UACzBC,QAAS,MAEbC,UAAW,SAACX,EAAD5S,GAAA,IAAA8nB,EAAA9nB,EAASmT,YAAezN,EAAxBoiB,EAAwBpiB,MAAxBoiB,EAA+BniB,OAA/B,OAAAlF,OAAAC,EAAA,EAAAD,CAAA,GACJmS,EADI,CAEPlN,MAAOA,EACP8M,UAAW,OACXsH,UAAW,OACXnU,OAAQ,UAEZ+N,QAAS,SAACd,EAAMM,GAAP,OAAAzS,OAAAC,EAAA,EAAAD,CAAA,GACFmS,EADE,CAELkH,UAAW,OACXnG,OAAQ,sCACRtH,aAAc,SAElByH,mBAAoB,SAAClB,EAAMM,GAAP,OAAAzS,OAAAC,EAAA,EAAAD,CAAA,GACbmS,EADa,CAEhBmB,QAAS,UAEbzB,YAAa,SAACyV,GACV,OAAOtnB,OAAAC,EAAA,EAAAD,CAAA,GACAsnB,EADP,CAEIze,MAAO,UACPgD,WAAY,UAGpB0H,WAAY,SAACpB,EAAMM,GAAP,OAAAzS,OAAAC,EAAA,EAAAD,CAAA,GACLmS,EADK,CAERjN,OAAQ,OACR0G,aAAc,MACdsH,OAAQ,sCACRd,gBAAiB,4BACjBoB,YAAa,OACbC,WAAY,OACZC,cAAe,SAEnBC,YAAa,SAACxB,EAAMM,GAAP,OAAAzS,OAAAC,EAAA,EAAAD,CAAA,GACNmS,EADM,CAETjN,OAAQ,OACR0G,aAAc,MACdsH,OAAQ,sCACRd,gBAAiB,4BACjBoB,YAAa,OACbC,WAAY,OACZC,cAAe,WAKrB6T,GAAqB,SAAAva,GAMrB,IALFzO,EAKEyO,EALFzO,YACAipB,EAIExa,EAJFwa,mBACAC,EAGEza,EAHFya,mBACA5P,EAEE7K,EAFF6K,eACA6P,EACE1a,EADF0a,uBACE1X,EACgCC,mBAAS,MADzCC,EAAAlQ,OAAA0N,EAAA,EAAA1N,CAAAgQ,EAAA,GACK2X,EADLzX,EAAA,GACkB0X,EADlB1X,EAAA,GAQIjF,EAAgBib,KAChB2B,EAAuB5c,EAAc8M,OAAO,SAACC,GAAD,OAAOA,EAAE9L,QAAUwb,IAcrE,OAZA/J,oBAAU,WAEFkK,GACAA,EAAqB/kB,QACrB+kB,EAAqB,KACpBF,IAEDC,EAAWC,GACXJ,EAAmBI,MAKvB7jB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,2BACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,yBAAyB5O,EAAxC,aACAyF,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,yBAAf,2CACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,+BAAf,+CAGAnJ,EAAAC,EAAAC,cAAA,OAAK0E,MAAO,CAAEG,aAAc,SACxB/E,EAAAC,EAAAC,cAAC8N,GAAA,EAAD,CACIC,OAAQmV,KACR5lB,QAASyJ,EACTqO,UAAWrO,GAAyC,GAAxBA,EAAcnI,OAC1CglB,eAAe,aACfvO,SAAS,EACTrN,MAAOyb,EACPpW,SAnCM,SAACrF,GACnB0b,EAAW1b,GACXub,EAAmBvb,IAkCPjH,MAAM,QACN4M,YAAY,yBACZ2H,aAAa,KAGrBxV,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6jB,GAAD,CACIrD,UAAW7M,IAAmBgQ,EAC9B1P,WAAYN,GAAkBgQ,EAC9B7e,QAAOhJ,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAC,IAAA,OAAAF,EAAA/J,EAAAkK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACCkZ,EAAmB,CAAEjZ,UAAW,CAAEhQ,YAAaA,EAAc,KAD9D,wBAAA6P,EAAAI,SAAAN,MAGT1C,MAAM,YAOpBwc,GAAsB,SAAA/Y,GAMtB,IALF1Q,EAKE0Q,EALF1Q,YACAipB,EAIEvY,EAJFuY,mBACApR,EAGEnH,EAHFmH,kBACAC,EAEEpH,EAFFoH,qBACAwB,EACE5I,EADF4I,eAEM5M,EAAgBib,KAChBtO,EFpI0B,WAAM,IAAAN,EACNjK,KAAxBtN,EAD8BuX,EAC9BvX,KAAM6P,EADwB0H,EACxB1H,QAEd,IAHsC0H,EACf9C,MAMvB,OAAI5E,EACO,GAGe7P,EAAlB6X,cAGHG,OAAO,SAAAzY,GAAA,OAAAA,EAAG6Y,WACV9M,IAAI,SAAA9L,GAAA,IAAGgM,EAAHhM,EAAGgM,SAAH,MAAmB,CACpBC,MACIxH,EAAAC,EAAAC,cAAA,OACI0E,MAAO,CACHpE,SAAU,OACVqE,MAAO,UACP4C,YAAa,SAGjBzH,EAAAC,EAAAC,cAAA,OACIwH,IAAKH,EAASI,KACd/C,MAAO,CAAE3D,MAAO,OAAQC,OAAQ,OAAQ0G,aAAc,UAE1D5H,EAAAC,EAAAC,cAAA,QAAM0E,MAAO,CAAEiD,WAAY,SAAWN,EAASU,WAGvDC,MAAOX,EAAStN,MEqGFgqB,GAFpB5X,EAG4CJ,mBAAS,MAHrDK,EAAAtQ,OAAA0N,EAAA,EAAA1N,CAAAqQ,EAAA,GAGK6X,EAHL5X,EAAA,GAGsB6X,EAHtB7X,EAAA,GAsBF,OATAqN,oBAAU,WACF/F,GAAiBA,EAAc9U,QAAU8U,EAAc,KAAOsQ,IAC9DC,EAAmBvQ,GACnBvB,EAAqBuB,MAI7B3Q,QAAQC,IAAI,iBAAkB2Q,GAG1B7T,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,2BACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,yBAAyB5O,EAAxC,aACAyF,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,yBAAf,2CACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,+BAAf,4GAIAnJ,EAAAC,EAAAC,cAAA,OAAK0E,MAAO,CAAEG,aAAc,SACxB/E,EAAAC,EAAAC,cAAC8N,GAAA,EAAD,CACIC,OAAQmV,KACR5lB,QACIyJ,EAAc8M,OACV,SAACzM,GAAD,OACIA,EAAKY,SACJ2L,GAAkBA,EAAe/U,OAC5B+U,EAAe,GAAG3L,MAClB2L,EAAe3L,SAIjCoN,UAAWrO,GAAyC,GAAxBA,EAAcnI,OAE1CyW,SAAS,EACTrN,MAAOgc,EACP3W,SA1CM,SAACrF,GACL,OAAVA,IACAA,EAAQ,IAEZic,EAAmBjc,GACnBmK,EAAqBnK,IAsCTjH,MAAM,QACN4M,YAAY,0BACZuW,WAAYnd,GAAyC,GAAxBA,EAAcnI,UAGnDkB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6jB,GAAD,CACI5P,SAAU/B,GAAqBA,EAAkBtT,OAAS,EAC1D4hB,SACyB,MAArBtO,GACCA,GAAkD,IAA7BA,EAAkBtT,OAE5CkG,QAAOhJ,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAS,IAAA,OAAAV,EAAA/J,EAAAkK,KAAA,SAAAQ,GAAA,cAAAA,EAAAN,KAAAM,EAAAL,MAAA,cAAAK,EAAAL,KAAA,EACCkZ,EAAmB,CAAEjZ,UAAW,CAAEhQ,YAAaA,EAAc,KAD9D,wBAAAoQ,EAAAH,SAAAE,MAGTlD,MAAM,YAMpB6c,GAAQ,SAAAtV,GAA8D,IAA3DxU,EAA2DwU,EAA3DxU,YAAaipB,EAA8CzU,EAA9CyU,mBAAoBc,EAA0BvV,EAA1BuV,QAASC,EAAiBxV,EAAjBwV,WACvD,OACIvkB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,2BACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,yBAAyB5O,EAAxC,aACAyF,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,yBAAf,qBACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,+BAAf,oHAIAnJ,EAAAC,EAAAC,cAAA,OAAK0E,MAAO,CAAEG,aAAc,OAAQgJ,UAAW,SAC3C/N,EAAAC,EAAAC,cAAC0N,GAAD,CACIC,YAAY,0BACZ3F,MAAOoc,EACP/W,SAAU,SAACvK,GACPuhB,EAAWvhB,EAAErE,OAAOuJ,WAIhClI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6jB,GAAD,CACI5P,WAAYmQ,EACZ5D,UAAW4D,EACXtf,QAAOhJ,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAa,IAAA,OAAAd,EAAA/J,EAAAkK,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,WACD,4BAA4Bka,KAAKF,GADhC,CAAAvZ,EAAAT,KAAA,eAAAS,EAAAT,KAAA,EAEKkZ,EAAmB,CACrBjZ,UAAW,CAAEhQ,YAAaA,EAAc,KAH3C,OAAAwQ,EAAAT,KAAA,eAMDiG,KAAQC,MAAM,wCANb,wBAAAzF,EAAAP,SAAAM,MASTtD,MAAM,WAOpBid,GAAQ,SAAAjX,GAYR,IAXFjT,EAWEiT,EAXFjT,YAEA+pB,GASE9W,EAVFgW,mBAUEhW,EATF8W,SACAI,EAQElX,EARFkX,aACAC,EAOEnX,EAPFmX,gBACAvS,EAME5E,EANF4E,kBACAwS,EAKEpX,EALFoX,SACAC,EAIErX,EAJFqX,YACAlgB,EAGE6I,EAHF7I,cACAmgB,EAEEtX,EAFFsX,OACAjR,EACErG,EADFqG,eACEyF,ElC3RqC1W,YAAYV,IkC4R5C5H,EADL0B,OAAA0N,EAAA,EAAA1N,CAAAsd,EAAA,MAAAF,EAEmBjW,KAAdkW,EAFLrd,OAAA0N,EAAA,EAAA1N,CAAAod,EAAA,MAAA1F,EAG8BlP,KAAzBmP,EAHL3X,OAAA0N,EAAA,EAAA1N,CAAA0X,EAAA,MAKF,OACI1T,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,gCACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,8BAA8B5O,EAA7C,aACAyF,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,8BAAf,gBACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,oCAAf,iJAIAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,gCACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,wBACXnJ,EAAAC,EAAAC,cAAC8P,GAAD,CAAQpJ,SAAS,OAAO5B,QAAS,SAAChC,GAAD,OAAOmf,GAAgB,mBACxDniB,EAAAC,EAAAC,cAAC6kB,GAAA,EAAD,CAAmB9c,SAAS,aAAarD,MAAOogB,KAAM/qB,GAAG,gBAAzD,kQAAAkD,OAKsD2nB,EALtD,iOAcR9kB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,yBAAf,mBACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,oCAAf,oIAIAnJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6jB,GAAD,CACI5P,UAAU,EACVnP,QAAOhJ,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAiB,IAAA,IAAAmF,EAAA,OAAArG,EAAA/J,EAAAkK,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,UACLqa,GAAgB,KAGZvS,GACAA,EAAkBtT,QAClB+U,GACAA,EAAe/U,QACf+U,EAAe,IACfyQ,GATC,CAAAnZ,EAAAb,KAAA,gBAAAa,EAAAb,KAAA,EAWqBhQ,EAAW,CAC7BiQ,UAAW,CACP+Z,UACAW,qBAAsB7S,EAAkB/K,IACpC,SAACC,GAAD,OAAUA,EAAKY,QAEnB2L,eACIA,GAAkBA,EAAe/U,QAAU+U,EAAe,GACpDA,EAAe,GAAG3L,MAClB,KApBjB,aAWKmI,EAXLlF,EAAAuF,OAwBcL,EAAQtU,MAAQsU,EAAQtU,KAAKzB,YAxB3C,CAAA6Q,EAAAb,KAAA,gBAyBGiG,KAAQI,QAAQ,iCAzBnBxF,EAAAb,KAAA,EA0BS+O,EAAW,CAAE9O,UAAW,CAAElQ,OAAO,KA1B1C,OA2BGme,OAAOC,SAAS/Z,OAAO,KA3B1ByM,EAAAb,KAAA,iBA6BGua,GAAY,GACZtU,KAAQC,MACJ,kEA/BP,QAAArF,EAAAb,KAAA,iBAmCDiG,KAAQsF,KAAK,qCAnCZ,QAsCL8O,GAAgB,GAtCX,yBAAAxZ,EAAAX,SAAAU,MAwCT1D,MACIkd,EACI1kB,EAAAC,EAAAC,cAACma,EAAA,KAAD,CAAMzV,MAAO,CAAE3D,MAAO,OAAQC,OAAQ,UACtC0jB,EACA,aAEA,aAGRlE,SAAUgE,IAEd1kB,EAAAC,EAAAC,cAACid,GAAD,CACI3V,MAAM,eACNxC,QAAO,eAAAmL,EAAAnU,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAwD,EAAOzK,GAAP,IAAA2S,EAAA,OAAA3L,EAAA/J,EAAAkK,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,cACDqL,EAAuBvD,EAAkB/K,IAAI,SAAC2M,GAAD,OAAOA,EAAE9L,QAE1DjF,QAAQC,IAAI,uBAAwByS,GACpC1S,QAAQC,IAAI,iBAAkB2Q,GAE1B8B,GACAhC,EAAsB,CAClBpJ,UAAW,CACPoL,0BAKR9B,GAAkBA,EAAe/U,QAAU+U,EAAe,IAC1DwF,EAAW,CACP9O,UAAW,CAAEsJ,eAAgBA,EAAe,GAAG3L,SAhBlDwF,EAAApD,KAAA,EAoBC+O,EAAW,CACb9O,UAAW,CAAEwP,mBAAmB,KArB/B,OAwBLpV,EAAcmQ,KAAK,KAxBd,wBAAApH,EAAAlD,SAAAiD,MAAF,gBAAAhD,GAAA,OAAA0F,EAAA/Q,MAAAC,KAAAR,YAAA,QA0HZqmB,GA3FI,SAAApU,GAA8B,IAA3BzW,EAA2ByW,EAA3BzW,MAAOsK,EAAoBmM,EAApBnM,cAAoB8H,EACFR,wBAAS7E,GADPsF,EAAA1Q,OAAA0N,EAAA,EAAA1N,CAAAyQ,EAAA,GACxCoH,EADwCnH,EAAA,GACxB+W,EADwB/W,EAAA,GAAAG,EAEGZ,mBAAS,IAFZa,EAAA9Q,OAAA0N,EAAA,EAAA1N,CAAA6Q,EAAA,GAExCuF,EAFwCtF,EAAA,GAErBuF,EAFqBvF,EAAA,GAAAoE,EAGjBjF,wBAAS7E,GAHQ+J,EAAAnV,OAAA0N,EAAA,EAAA1N,CAAAkV,EAAA,GAGxCoT,EAHwCnT,EAAA,GAG/BoT,EAH+BpT,EAAA,GAAAG,EAIPrF,wBAAS7E,GAJFmK,EAAAvV,OAAA0N,EAAA,EAAA1N,CAAAsV,EAAA,GAIxCoT,EAJwCnT,EAAA,GAI1BoT,EAJ0BpT,EAAA,GAAAW,EAKfjG,wBAAS7E,GALM+K,EAAAnW,OAAA0N,EAAA,EAAA1N,CAAAkW,EAAA,GAKxC0S,EALwCzS,EAAA,GAK9B0S,EAL8B1S,EAAA,GAAAzG,EAOA9J,KAA/ByR,EAP+B3H,EAOrC3P,KAAuB4P,EAPcD,EAOvBE,QAPuBuZ,EAQZ3iB,KAAzBoJ,EARqCuZ,EAQrCvZ,QAAS7P,EAR4BopB,EAQ5BppB,KAR4BqpB,GAAAD,EAQtB3U,MACI7N,MAAtB6gB,EATwCxnB,OAAA0N,EAAA,EAAA1N,CAAAopB,EAAA,MA6B7C,GAlBAzL,oBAAU,WAUkC,gBAApChV,EAAc8T,SAASC,WACvBF,OAAOwC,QAAQqK,UAAU,KAAM/C,SAASxY,MAAO0O,OAAOC,SAAS6M,MAC/D9M,OAAO+M,iBAAiB,WAAY,SAAUC,GAC1ChN,OAAOwC,QAAQqK,UAAU,KAAM/C,SAASxY,MAAO0O,OAAOC,SAAS6M,YAKtEjrB,EACD,OAAO2F,EAAAC,EAAAC,cAAC+gB,EAAA,EAAD,CAAUpX,GAAG,MAGxB,GAAI+B,GAAWD,EACX,MAAO,GAGX,IAkCO8Z,EAlCHlrB,EAAcwB,GAAQA,EAAKzB,WAAayB,EAAKzB,WAAWC,YAAc,EACtEuqB,EAASzR,GAAUA,EAAOrG,GAAKqG,EAAOrG,GAAG8X,OAAS,GAClDpB,EAAyBrQ,GAAUA,EAAOrG,GAAKqG,EAAOrG,GAAG6G,eAAiB,GAE9E,OAAoB,IAAhBtZ,EAEIyF,EAAAC,EAAAC,cAACwlB,GAAD,CACInrB,YAAaA,EACbipB,mBAAoBA,EACpB3P,eAAgBA,EAChB4P,mBAAoBA,EACpBC,uBAAwBA,IAIhB,IAAhBnpB,EAEIyF,EAAAC,EAAAC,cAACylB,GAAD,CACIprB,YAAaA,EACbipB,mBAAoBA,EACpBpR,kBAAmBA,EACnBC,qBAAsBA,EACtBwB,eAAgBA,IAGD,IAAhBtZ,EAEHyF,EAAAC,EAAAC,cAAC0lB,GAAD,CACIrrB,YAAaA,EACbipB,mBAAoBA,EACpBc,QAASA,EACTC,WAAYA,IAKhBvkB,EAAAC,EAAAC,cAAC2lB,IAADJ,EAAA,CACIlrB,YAAaA,EACbipB,mBAAoBA,EACpBc,QAASA,EACTlS,kBAAmBA,EACnBsS,aAAcA,EACdC,gBAAiBA,GANrB3oB,OAAA+gB,GAAA,EAAA/gB,CAAAypB,EAAA,oBAOuBrT,GAPvBpW,OAAA+gB,GAAA,EAAA/gB,CAAAypB,EAAA,WAQcb,GARd5oB,OAAA+gB,GAAA,EAAA/gB,CAAAypB,EAAA,cASiBZ,GATjB7oB,OAAA+gB,GAAA,EAAA/gB,CAAAypB,EAAA,gBAUmB9gB,GAVnB3I,OAAA+gB,GAAA,EAAA/gB,CAAAypB,EAAA,SAWYX,GAXZ9oB,OAAA+gB,GAAA,EAAA/gB,CAAAypB,EAAA,iBAYoB5R,GAZpB4R,6vBCheL,IAAMK,GAAiBpqB,IAAHqqB,MAyBdC,GAAkBtqB,IAAHuqB,MC3B5B,SAASC,KAA0Q,OAA7PA,GAAQlqB,OAAA0C,QAAA,SAAAC,GAAuC,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0B/C,OAAAiD,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,IAAkCS,MAAAC,KAAAR,WAEnS,SAASsnB,GAAwBpnB,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAA8DC,EAAAJ,EAA9DD,EAEpF,SAAsCI,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAAuDC,EAAAJ,EAAvDD,EAAA,GAAiBa,EAAAxD,OAAAyD,KAAAV,GAAkD,IAAAH,EAAA,EAAYA,EAAAY,EAAAV,OAAuBF,IAAOI,EAAAQ,EAAAZ,GAAqBW,EAAAG,QAAAV,IAAA,IAA0CL,EAAAK,GAAAD,EAAAC,IAA6B,OAAAL,EAFhMynB,CAA6BrnB,EAAAQ,GAA+B,GAAAvD,OAAA4D,sBAAA,CAAoC,IAAAC,EAAA7D,OAAA4D,sBAAAb,GAA6D,IAAAH,EAAA,EAAYA,EAAAiB,EAAAf,OAA6BF,IAAOI,EAAAa,EAAAjB,GAA2BW,EAAAG,QAAAV,IAAA,GAA0ChD,OAAAiD,UAAAa,qBAAAX,KAAAJ,EAAAC,KAAwEL,EAAAK,GAAAD,EAAAC,IAA+B,OAAAL,EAM3d,IAAI0nB,GAAqBrmB,EAAAC,EAAKC,cAAA,QAC9BoF,EAAA,kDACArL,GAAA,WACAkG,OAAA,UACAC,YAAA,EACAkmB,cAAA,QACAC,eAAA,QACAlmB,KAAA,SAGImmB,GAAqBxmB,EAAAC,EAAKC,cAAA,QAC9BoF,EAAA,kDACArL,GAAA,WACAkG,OAAA,UACAC,YAAA,EACAkmB,cAAA,QACAC,eAAA,QACAlmB,KAAA,SAGAomB,GAAAnrB,IACA,IAAAyF,EAAAzF,EAAAyF,OACAC,EAAcmlB,GAAwB7qB,EAAA,YAEtC,OAAsB0E,EAAAC,EAAKC,cAAA,MAAsBgmB,GAAQ,CACzDjlB,MAAA,OACAC,OAAA,OACAC,QAAA,cACAC,IAAAL,GACGC,GAAUqlB,GAAOG,KAGhBE,GAA0B1mB,EAAAC,EAAKqB,WAAA,CAAAN,EAAAI,IAAyCpB,EAAAC,EAAKC,cAAAumB,GAAyBP,GAAQ,CAClHnlB,OAAAK,GACCJ,KC1Bc2lB,ID2BA/sB,EAAAC,ECxCD,SAAAyB,GAAgDA,EAA7CX,KAA6C,IAAvCisB,EAAuCtrB,EAAvCsrB,WAAuB3L,EAAgB3f,EAA3BslB,UAC/B,OACI5gB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,aACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,OACXnJ,EAAAC,EAAAC,cAAA,QAAMiJ,UAAU,aAAanE,QAAS4hB,GAClC5mB,EAAAC,EAAAC,cAACwmB,GAAD,CAAO9hB,MAAO,CAAE3D,MAAO,OAAQC,OAAQ,OAAQqc,QAAS,WAE5Dvd,EAAAC,EAAAC,cAAC+a,EAAD,UCahB8H,KAAkBC,iBAAiB,MAAOC,MAE1C,IAAM4D,GAAU,CACZ,CACI/c,MAAO,MACPgd,UAAW,MACX9nB,IAAK,OAET,CACI8K,MAAO,UACPgd,UAAW,UACX9nB,IAAK,WAET,CACI8K,MAAO,aACPgd,UAAW,aACX9nB,IAAK,cAET,CACI8K,MAAO,YACPgd,UAAW,WACX9nB,IAAK,aAIP+nB,GAAiB,CACnB,CACI/nB,IAAK,IACLgoB,IAAK,QACLre,QAAS,QACTse,WAAY,QACZC,SAAU,UAIZC,GAAa,SAAA7rB,GAA8B,IAA3B8rB,EAA2B9rB,EAA3B8rB,aAActC,EAAaxpB,EAAbwpB,OAAa9Y,EACjBC,wBAAS7E,GADQ8E,EAAAlQ,OAAA0N,EAAA,EAAA1N,CAAAgQ,EAAA,GACxCsY,EADwCpY,EAAA,GAC/BqY,EAD+BrY,EAAA,GAAAG,EAEPJ,oBAAS,GAFFK,EAAAtQ,OAAA0N,EAAA,EAAA1N,CAAAqQ,EAAA,GAExC+T,EAFwC9T,EAAA,GAE1B+a,EAF0B/a,EAAA,GAAAgb,ECvDH1kB,YAAYojB,GAAiB,CACvE5iB,eAAgB,CAAC,eDyDVmkB,EAHsCvrB,OAAA0N,EAAA,EAAA1N,CAAAsrB,EAAA,MAI7C,OACItnB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,uBACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,iBAAf,oBACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,uBAAf,6HAIAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,gBACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,cACXnJ,EAAAC,EAAAC,cAAC8P,GAAD,CAAQpJ,SAAS,OAAO5B,QAAS,SAAChC,GAAD,OAAOmf,GAAgB,mBACxDniB,EAAAC,EAAAC,cAAC6kB,GAAA,EAAD,CAAmB9c,SAAS,aAAarD,MAAOogB,KAAM/qB,GAAG,gBAAzD,kQAAAkD,OAKsD2nB,EALtD,iOAcR9kB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,eACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,eAAf,yBACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,eAAf,sIAIAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,eACXnJ,EAAAC,EAAAC,cAAC0N,GAAD,CACIC,YAAY,0BACZ3F,MAAOoc,EACP/W,SAAU,SAACvK,GACPuhB,EAAWvhB,EAAErE,OAAOuJ,WAIhClI,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,eACXnJ,EAAAC,EAAAC,cAAC8P,GAAD,CACI7G,UAAU,iBACVvC,SAAS,aACT8Z,SAAUN,EACVpb,QAAOhJ,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAC,IAAA,IAAAmG,EAAA,OAAArG,EAAA/J,EAAAkK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACL+c,GAAgB,IACZ/C,IAAW,4BAA4BE,KAAKF,GAF3C,CAAAla,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAGqBid,EAAiB,CACnChd,UAAW,CAAE+Z,aAJhB,QAGKjU,EAHLjG,EAAAsG,OAOcL,EAAQtU,MAAQsU,EAAQtU,KAAKyrB,eACxCjX,KAAQI,QAAQ,2BAChByW,GAAa,IAEb7W,KAAQsF,KAAK,8BAXhBzL,EAAAE,KAAA,eAcDiG,KAAQC,MAAM,iCAdb,OAiBL6W,GAAgB,GAjBX,yBAAAjd,EAAAI,SAAAN,YAwPlBud,GAxKE,SAAAze,GAAuB,IAApBrE,EAAoBqE,EAApBrE,cAAoB8H,EACFR,oBAAS,GADPS,EAAA1Q,OAAA0N,EAAA,EAAA1N,CAAAyQ,EAAA,GAC7Bib,EAD6Bhb,EAAA,GAClB0a,EADkB1a,EAAA,GAAAG,EAEJZ,mBAAS,IAFLa,EAAA9Q,OAAA0N,EAAA,EAAA1N,CAAA6Q,EAAA,GAE7B4M,EAF6B3M,EAAA,GAEnB4M,EAFmB5M,EAAA,GAAA6a,EEtLpC9lB,YAASikB,GAAgB,CACrBhkB,YAAa,iBFyLT/F,EAJ4B4rB,EAI5B5rB,KAAM6P,EAJsB+b,EAItB/b,QAJsBF,GAAAic,EAIbnX,MAC4C5O,MAArD7H,EALsB2R,EAK5B3P,KAAyB6rB,EALGlc,EAKZE,QALYwN,GAAA1N,EAKU8E,MACzBrN,MAAdkW,EAN6Brd,OAAA0N,EAAA,EAAA1N,CAAAod,EAAA,MAAAE,EAOH3W,KAA1BiW,EAP6B5c,OAAA0N,EAAA,EAAA1N,CAAAsd,EAAA,MAAAhG,EAQ+BjK,KAArDkK,EARsBD,EAQ5BvX,KAAkCyX,EARNF,EAQH1H,QAE7Bic,EAAad,GAgBjB,GAdApN,oBAAU,WASN,OAHI/N,GAAWgc,GAAepU,IAC1BkG,EAAY,KAET,WACHA,EAAY,KAEjB,IAEC9N,GAAWgc,GAAepU,EAC1B,OACIxT,EAAAC,EAAAC,cAAC0Z,EAAA,EAAD,CACI/U,MAAM,UACN4U,SAAUA,EACVI,iBAAkB,kBAAMH,EAAY,MAIxC3d,GAAQA,EAAK+rB,YACbD,EA1FI,SAAC7N,GACb,IAAI+N,EAAO,GAkDX,OAhDI/N,GAASA,EAAMlb,QACfkb,EAAM1R,QAAQ,SAAC0f,EAAMppB,GACjB,IAAIqpB,EAAM,GAEVA,EAAIjpB,IAAMJ,EACVqpB,EAAIjB,IACAhnB,EAAAC,EAAAC,cAAA,QAAM0E,MAAO,CAAE0K,QAAS,gBACnB0Y,EAAK1D,QAAS,IACa,IAA3B0D,EAAK5f,WAAWtJ,QACbkB,EAAAC,EAAAC,cAAA,QACI0E,MAAO,CACHiD,WAAY,OACZyH,QAAS,cACT4Y,WAAY,WAGhBloB,EAAAC,EAAAC,cAACma,EAAA,MAAD,CACIzV,MAAO,CACH3D,MAAO,OACPC,OAAQ,OACRinB,WAAY,UACZvgB,aAAc,SAGtB5H,EAAAC,EAAAC,cAAA,QACI0E,MAAO,CACHC,MAAO,UACP+C,aAAc,MACdrH,WAAY,YACZC,SAAU,OACVC,WAAY,OACZoH,WAAY,QAPpB,mBAgBhBogB,EAAItf,QAAUqf,EAAK5f,WAAWtJ,OAC9BmpB,EAAIhB,WAAJ,GAAA9pB,OAAoBuL,GAAoCsf,EAAK5f,YAA7D,KACA6f,EAAIf,SAAWkB,aAAO,IAAIC,KAAKL,EAAKM,WAAWC,UAAW,UAC1DN,EAAIO,OAASR,EAAK/tB,GAElB8tB,EAAKjT,KAAKmT,KAGXF,EAuCcU,CAAQ1sB,EAAK+rB,YAIlC,IAAIY,KAAmB3uB,IAAYA,EAASiT,MAAMjT,EAASiT,GAAG3S,MAC1DyqB,EAAS/qB,GAAYA,EAASiT,GAAKjT,EAASiT,GAAG8X,OAAS,GAzCxB6D,EGvLM,SAACb,GAC3C,IAAIc,EAAa,EACbC,EAAc,EASlB,OAPIf,GAAaA,EAAUhpB,QACvBgpB,EAAUxf,QAAQ,SAAAhN,GAAoB,IAAjB8M,EAAiB9M,EAAjB8M,WACjBwgB,GAAczgB,GAAkBC,GAChCygB,GAAezgB,EAAWtJ,SAI3B,CAAE8pB,aAAYC,eHuNaC,CAA+B/sB,EAAK+rB,WAAhEc,EA3C8BD,EA2C9BC,WAAYC,EA3CkBF,EA2ClBE,YACdE,EGrNwC,SAACjB,EAAWe,GACxD,IACIG,EAAoB,EAcxB,OAZIlB,GAAaA,EAAUhpB,QACvBgpB,EAAUxf,QAAQ,SAAA/M,GAAoBA,EAAjB6M,WACNE,QAAQ,SAAAU,GAAsB,IAAnBD,EAAmBC,EAAnBD,aACdA,GAAgBA,EAAajK,QAAUiK,EAAajK,OAAS,GAC7DkqB,SAMDA,EAAoBH,EAAe,KAAK5f,QAAQ,GHuMlCggB,CAAiCltB,EAAK+rB,UAAWe,GAE9E,OACI7oB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,yBACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,wBACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,MACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,wBAAf,WACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,gBACVuf,EACK3sB,EAAK+rB,UAAU,GAAGxD,QAAQ4E,UACtB,EACAntB,EAAK+rB,UAAU,GAAGxD,QAAQ5kB,QAAQ,KAAO,EACnC3D,EAAK+rB,UAAU,GAAGxD,QAAQ5kB,QAAQ,KAClC3D,EAAK+rB,UAAU,GAAGxD,QAAQxlB,QAEpC,IAEVkB,EAAAC,EAAAC,cAAA,OAAKjG,GAAG,iBAAiBkP,UAAU,kBAC9Buf,EACG1oB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0J,SAAA,KACI3J,EAAAC,EAAAC,cAACqc,GAAD,CACI3X,MAAO,CACH3D,MAAO,OACPC,OAAQ,OACRb,KAAM,UACNuH,aAAc,SAN1B,0BAYA5H,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0J,SAAA,KACI3J,EAAAC,EAAAC,cAACma,EAAA,MAAD,CACIzV,MAAO,CACH3D,MAAO,OACPC,OAAQ,OACRinB,WAAY,UACZvgB,aAAc,SAN1B,gCAcZ5H,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,MACXnJ,EAAAC,EAAAC,cAAC8P,GAAD,CACI7G,UAAU,iBACVvC,SAAU8hB,EAAmB,WAAa,YAC1C1jB,QAAO,eAAA6F,EAAA7O,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAS,EAAO1H,GAAP,OAAAgH,EAAA/J,EAAAkK,KAAA,SAAAQ,GAAA,cAAAA,EAAAN,KAAAM,EAAAL,MAAA,WACDoe,EADC,CAAA/d,EAAAL,KAAA,QAED8c,GAAa,GAFZzc,EAAAL,KAAA,sBAAAK,EAAAL,KAAA,EAIKsO,EAAuB,CAAErO,UAAW,CAAEhQ,YAAa,KAJxD,cAAAoQ,EAAAL,KAAA,EAKK+O,EAAW,CAAE9O,UAAW,CAAEwP,mBAAmB,KALlD,OAMDlX,GAAeiS,KAAK,eANnB,wBAAAnK,EAAAH,SAAAE,MAAF,gBAAAD,GAAA,OAAAI,EAAAzL,MAAAC,KAAAR,YAAA,OAYnBmB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,4BACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UAAf,SACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UAAUyf,EAAa,EAAIA,EAAa,IAAvD,MAGJ5oB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UAAf,SACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UAAUuf,EAAmB3sB,EAAK+rB,UAAUhpB,OAAS,MAGxEkB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UAAf,WACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UAAf,IAA0B0f,EAAc,EAAIA,EAAc,IAA1D,MAGJ7oB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UAAf,aACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UACVqK,EACK,IACAD,EAAkBK,eAClBL,EAAkBK,cAAc9U,OAChCyU,EAAkBK,cAAc9U,OAChC,MAIdkB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UAAf,cACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,eACTggB,MAAMJ,GAAmD,EAAzBA,EADtC,OAMR/oB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,uBACXnJ,EAAAC,EAAAC,cAACkpB,GAAA,EAAD,CACIvC,QAASA,GACTgB,WAAYA,EACZwB,YAAY,EACZC,MAAO,SAACrB,GACJ,MAAO,CACHjjB,QAAS,kBAAML,EAAcmQ,KAAd,gBAAA3X,OAAmC8qB,EAAIO,eAKtExoB,EAAAC,EAAAC,cAAA,OAAKjG,GAAG,eAEPytB,GACG1nB,EAAAC,EAAAC,cAACqpB,GAAD,CACI5uB,KAAK,OACLimB,UAAW,WACP,OAAO5gB,EAAAC,EAAAC,cAACspB,GAAD,CAAYpC,aAAcA,EAActC,OAAQA,KAE3D8B,WAAY,SAAC5jB,GAAD,OAAOokB,GAAa,mtBIzV7C,IAAMqC,GAAe/tB,IAAHguB,MAqBZC,GAAgCjuB,IAAHkuB,eCFpCC,GAAkBC,IAAMC,gBAsCxBC,GAAc,SAAAzuB,GAAyBA,EAAtB0uB,MAAsB,IAAZjpB,EAAYhF,OAAA8K,GAAA,EAAA9K,CAAAT,EAAA,WAAA2uB,EAC1BC,KAAKC,UAAbC,EADkCruB,OAAA0N,EAAA,EAAA1N,CAAAkuB,EAAA,MAGzC,OACIlqB,EAAAC,EAAAC,cAACoqB,GAAA,EAAD,CAAMD,KAAMA,EAAMzJ,WAAW,GACzB5gB,EAAAC,EAAAC,cAAC2pB,GAAgBU,SAAjB,CAA0BriB,MAAOmiB,GAC7BrqB,EAAAC,EAAAC,cAAA,KAAQc,MAKlBwpB,GAAe,SAAAxhB,GAQfA,EAPFc,MAOE,IANF2gB,EAMEzhB,EANFyhB,SACA7jB,EAKEoC,EALFpC,SACAkgB,EAIE9d,EAJF8d,UACA4D,EAGE1hB,EAHF0hB,OACAC,EAEE3hB,EAFF2hB,WACGC,EACD5uB,OAAA8K,GAAA,EAAA9K,CAAAgN,EAAA,mEAAAgD,EAC4BC,oBAAS,GADrCC,EAAAlQ,OAAA0N,EAAA,EAAA1N,CAAAgQ,EAAA,GAAAK,GAAAH,EAAA,GAAAA,EAAA,GAEwBD,oBAAS,IAFjCK,EAAAtQ,OAAA0N,EAAA,EAAA1N,CAAAqQ,EAAA,GAEKwe,EAFLve,EAAA,GAEYwe,EAFZxe,EAAA,GAKEye,GADSC,qBAAWnB,IACRjjB,GAEhB,GAAI6jB,EAAU,CACV,IAAIQ,EAAe3I,SAAS4I,uBAAuB,oBAE/CR,GAAiC,OAAtBA,EAAO5D,IAA6C,KAAtB4D,EAAO5D,GAQ5CmE,GACIA,EAAa,KAETA,EAAa,GAAGrkB,SAAS8jB,EAAO1rB,KAAK4H,SAAS,GAAGhC,MAAMumB,WADvDN,EAEI,oBAEgE,QAb5EI,GACIA,EAAa,KACbA,EAAa,GAAGrkB,SAAS8jB,EAAO1rB,KAAK4H,SAAS,GAAGhC,MAAMumB,WACnD,qBAehBJ,EACI/qB,EAAAC,EAAAC,cAAC8d,GAAA,EAAMoN,SAAP,CACIljB,MAAOwiB,EAAO5D,GACdvZ,SAAQ,eAAA1C,EAAA7O,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAC,EAAOlH,GAAP,OAAAgH,EAAA/J,EAAAkK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACNqgB,EAAW3uB,OAAAC,EAAA,EAAAD,CAAA,GAAK0uB,EAAW,CAAEzD,WAAYjkB,EAAErE,OAAOuJ,SAD5C,wBAAAkC,EAAAI,SAAAN,MAAF,gBAAAO,GAAA,OAAAI,EAAAzL,MAAAC,KAAAR,YAAA,GAGRwsB,KAAK,KACLtD,KAAK,IACLuD,QAAS,SAACtoB,GAAD,OAAO8nB,GAAS,IACzBS,OAAQ,SAACvoB,GAAD,OAAO8nB,GAAS,IACxBlmB,MAAO,CACHsK,OAC0B,OAAtBwb,EAAO5D,IAA6C,KAAtB4D,EAAO5D,GAC/B,oBACA+D,EACA,oBACA,sCAEVzc,gBAC0B,OAAtBsc,EAAO5D,IAA6C,KAAtB4D,EAAO5D,GAC/B,4BACA+D,EACA,4BACA,WAK1B,OAAO7qB,EAAAC,EAAAC,cAAA,KAAQ0qB,EAAYG,IAuFzBtC,GAAU,SAAC9f,EAAS6iB,GACtB,IAAIzD,EAAO,GAsBX,OApBIpf,GAAWA,EAAQ7J,QACnB6J,EAAQL,QAAQ,SAACC,EAAQ3J,GACrB,IAAIqpB,EAAM,GADiBwD,EnC/NH,SAACljB,EAAQmjB,GACzC,IAAIC,EAAwB,KACxBC,EAAiBrjB,EAAO+f,UACxB/f,GAAUA,EAAOQ,cAAgBR,EAAOQ,aAAajK,QAC9ByJ,EAAjBQ,aACOT,QAAQ,SAAAhN,GAAiD,IAA9CsN,EAA8CtN,EAA9CsN,WAAYijB,EAAkCvwB,EAAlCuwB,iBAAkBvD,EAAgBhtB,EAAhBgtB,UAC9C1f,IAAe8iB,IACfC,EAAwBE,EACxBD,EAAiBtD,KAK7B,MAAO,CAAEqD,wBAAuBC,kBmCqN0BE,CAC9CvjB,EACAijB,GAFIG,EAHmBF,EAGnBE,sBAAuBC,EAHJH,EAGIG,eAK/B3D,EAAIjpB,IAAMJ,EACVqpB,EAAIhuB,GAAKsO,EAAOtO,GAChBguB,EAAIxf,SAAWF,EAAOE,SACtBwf,EAAIhB,WAAa0E,EACjB1D,EAAIf,SAAWkB,aAAO,IAAIC,KAAKuD,GAAgBrD,UAAW,UAC1DN,EAAI8D,SAAWxjB,EAAOtO,GACtBguB,EAAIuD,mBAAqBA,EACzBzD,EAAKjT,KAAKmT,KAIXF,GAoILhB,GAAiB,CACnB,CACI/nB,IAAK,IACL/E,GAAI,IACJwO,SAAU,QACVwe,WAAY,QACZC,SAAU,UAIZ8E,GAAe,SAAAxgB,GAMf,IALF7C,EAKE6C,EALF7C,QACAiL,EAIEpI,EAJFoI,cACAqY,EAGEzgB,EAHFygB,YACAC,EAEE1gB,EAFF0gB,oBACAC,EACE3gB,EADF2gB,eACEja,EACgDjG,mBAAS2H,EAAc,GAAGrM,SAAStN,IADnFkY,EAAAnW,OAAA0N,EAAA,EAAA1N,CAAAkW,EAAA,GACGsZ,EADHrZ,EAAA,GACuBia,EADvBja,EAAA,GAAAG,EAEoBrG,mBAASwc,GAAQ9f,EAAS6iB,IAF9CjZ,EAAAvW,OAAA0N,EAAA,EAAA1N,CAAAsW,EAAA,GAEGyV,EAFHxV,EAAA,GAES8Z,EAFT9Z,EAAA,GAIE+Z,EAnQQ,SAAC1Y,EAAewY,GAC5B,IAAIG,EAAkBvlB,GAAa4M,GADmBpK,EAErBlF,KAA1BmF,EAF+CzN,OAAA0N,EAAA,EAAA1N,CAAAwN,EAAA,MAIhDgjB,EAAS,SAACxrB,EAAOipB,GAAU,IACvBzsB,EAAmBwD,EAAnBxD,QAAS0K,EAAUlH,EAAVkH,MAEf,OAAO1K,EAAQA,EAAQsB,OAAS,GAAGoJ,QAAUA,EACzClI,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0J,SAAA,KACI3J,EAAAC,EAAAC,cAACusB,GAAA,EAAWD,OAAWxrB,GACvBhB,EAAAC,EAAAC,cAAA,OACI0E,MAAO,CACHrE,WAAY,YACZC,SAAU,MACVyc,WAAY,OACZyP,UAAW,WAGf1sB,EAAAC,EAAAC,cAAC8P,GAAD,CACIpJ,SAAS,WACTuC,UAAW,wBACXnE,QAAO,eAAAiG,EAAAjP,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAS,EAAO1H,GAAP,OAAAgH,EAAA/J,EAAAkK,KAAA,SAAAQ,GAAA,cAAAA,EAAAN,KAAAM,EAAAL,MAAA,cAAAK,EAAAL,KAAA,EACCb,EAAuB,CACzBc,UAAW,CAAE9P,QAAQ,EAAMQ,wBAAwB,KAFlD,OAIL4H,GAAeiS,KAAK,eAJf,wBAAAnK,EAAAH,SAAAE,MAAF,gBAAAE,GAAA,OAAAK,EAAA7L,MAAAC,KAAAR,YAAA,GAMP+F,MAAO,CACHmJ,UAAW,OACX9M,MAAO,QACPgc,WAAY,YAM5Bjd,EAAAC,EAAAC,cAACusB,GAAA,EAAWD,OAAWxrB,IAI/B,MAAO,CACH,CACI8I,MAAO,KACPgd,UAAW,KACX9nB,IAAK,KACLiC,MAAO,KACPkI,UAAW,cACXwjB,iBAAkB,kBAAM,IAE5B,CACI7iB,MAAO,WACPgd,UAAW,WACX9nB,IAAK,WACLiC,MAAO,MACPkI,UAAW,eAEf,CACIW,MAAO,kBACH9J,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC8N,GAAA,EAAD,CACIxQ,QAAS+uB,EACTK,aAAcL,EAAgB,GAC9Bhf,SAAU,SAACvK,GAAD,OAAOopB,EAAsBppB,EAAEkF,QACzC+F,OAjLb,CACHC,OAAQ,SAACC,EAAMpS,GACX,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAmS,EADP,CAEIC,gBAAiB,QACjBvJ,MAAO,UACPrE,SAAU,OACVsN,cAAe,SACfrN,WAAY,OACZ4N,WAAY,CAAED,gBAAiB,6BAC/BE,UAAW,CAAEF,gBAAiB,cAGtCU,UAAW,SAACX,EAAD7S,GAAA,IAAAuxB,EAAAvxB,EAASoT,YAAT,OAAAme,EAAwB5rB,MAAxB4rB,EAA+B3rB,OAA/BlF,OAAAC,EAAA,EAAAD,CAAA,GACJmS,EADI,CAEPlN,MAAO,SAEXgO,QAAS,SAACd,EAAMM,GAAP,OAAAzS,OAAAC,EAAA,EAAAD,CAAA,GACFmS,EADE,CAELe,OAAQ,sCACRtH,aAAc,MACduH,UAAW,OACXb,UAAW,CAAEc,YAAa,cAE9BO,YAAa,SAACxB,EAAMM,GAAP,OAAAzS,OAAAC,EAAA,EAAAD,CAAA,GACNmS,EADM,CAEToP,QAAS,OACThd,WAAY,YACZC,SAAU,OACVC,WAAY,OACZqN,cAAe,aAoJHgf,cAAc,EACdC,WAAY,CAAEP,cAI1B1F,UAAW,aACX9nB,IAAK,aACLyrB,UAAU,EACVxpB,MAAO,OAEX,CACI6I,MAAO,YACPgd,UAAW,WACX9nB,IAAK,WACLiC,MAAO,MACPkI,UAAW,gBAoLA0d,CAAQjT,EAAewY,GAAuB/kB,IAAI,SAAC2lB,GAClE,OAAKA,EAAIvC,SAIFzuB,OAAAC,EAAA,EAAAD,CAAA,GACAgxB,EADP,CAEIC,OAAQ,SAACvC,GAAD,MAAa,CACjBA,SACAD,SAAUuC,EAAIvC,SACd3D,UAAWkG,EAAIlG,UACfhd,MAAOkjB,EAAIljB,MACX6gB,WAAYA,MAVTqC,IAefrT,oBAAU,WACNuS,EAAoBV,GAEpB,IAAM0B,EAAazE,GAAQ9f,EAAS6iB,GACpCa,EAAQa,GACRjB,EAAYiB,IACb,CAAC1B,IAEJ,IAAMb,EAAa,SAAC1C,GAChB,IAAMkF,EAAOnxB,OAAAoxB,GAAA,EAAApxB,CAAO+rB,GACdkC,EAAQkD,EAAQE,UAAU,SAACC,GAAD,OAAUrF,EAAIjpB,MAAQsuB,EAAKtuB,MACrDsuB,EAAOH,EAAQlD,GACrBkD,EAAQI,OAAOtD,EAAO,EAAtBjuB,OAAAC,EAAA,EAAAD,CAAA,GAA8BsxB,EAASrF,EAAvC,CAA4CuF,WAAW,KACvDrB,GAAe,GACfE,EAAQc,GACRlB,EAAYkB,IAGVJ,EAAa,CACfU,KAAM,CACFxF,IAAK+B,GACL0D,KAAMlD,KAId,OACIxqB,EAAAC,EAAAC,cAACkpB,GAAA,EAAD,CACInvB,GAAG,qBACH4sB,QAASyF,EACTzE,WAAYE,EACZsB,YAAY,EACZ0D,WAAYA,KAITY,GAzMK,SAAC3sB,GACjB,IAAIwnB,EACAxnB,EAAM4sB,OAAS5sB,EAAM4sB,MAAMC,SAC3BrF,EAASsF,SAAS9sB,EAAM4sB,MAAMC,OAAOrF,SAHd,IAAA/b,EAKKR,mBAAS,GALdS,EAAA1Q,OAAA0N,EAAA,EAAA1N,CAAAyQ,EAAA,GAKpBgN,EALoB/M,EAAA,GAKVgN,EALUhN,EAAA,GAAAqhB,ECrPA,SAACvF,GAAD,OAC3B3mB,YAAS4nB,GAAc,CACnBlf,UAAW,CACPie,YDwPyBwF,CAAgBxF,GAAzCzsB,EANmBgyB,EAMnBhyB,KAAM6P,EANamiB,EAMbniB,QANaF,GAAAqiB,EAMJvd,MACsB5O,MAAd+J,GAPJD,EAOnB3P,KAPmB2P,EAOLE,SAPK0H,EAQwCjK,KAArDkK,EARaD,EAQnBvX,KAAkCyX,EARfF,EAQM1H,QARNqiB,EErPgBrrB,YAAY+mB,IF+PhDuE,EAVoBlyB,OAAA0N,EAAA,EAAA1N,CAAAiyB,EAAA,MAAAphB,EAYGZ,mBAAS,IAZZa,EAAA9Q,OAAA0N,EAAA,EAAA1N,CAAA6Q,EAAA,GAYtBshB,EAZsBrhB,EAAA,GAYZmf,EAZYnf,EAAA,GAAAoE,EAamBjF,mBAAS,GAb5BkF,EAAAnV,OAAA0N,EAAA,EAAA1N,CAAAkV,EAAA,GAaJgb,GAbI/a,EAAA,GAAAA,EAAA,IAAAG,EAcSrF,oBAAS,GAdlBsF,EAAAvV,OAAA0N,EAAA,EAAA1N,CAAAsV,EAAA,GActB8c,EAdsB7c,EAAA,GAcT4a,EAdS5a,EAAA,GAyB3B,GATAoI,oBAAU,WAKN,OAJI/N,GAAWD,GAAa6H,IACxBkG,EAAYD,EAAW,IAGpB,WACHC,EAAY,KAEjB,IACC9N,GAAWD,GAAa6H,EACxB,OACIxT,EAAAC,EAAAC,cAAC0Z,EAAA,EAAD,CACI/U,MAAM,UACN4U,SAAUA,EACVI,iBAAkB,kBAAMH,EAAY,MAKhD,IAAM2U,EAAWtyB,EAAKuyB,QAClB1a,EACAL,GAAqBA,EAAkBK,cAAgBL,EAAkBK,cAAgB,GAEvFgV,EAAazgB,GAAkBpM,EAAKuyB,QAAUvyB,EAAKuyB,QAAQlmB,WAAa,IACxEmmB,EAAuB7lB,GACzB3M,EAAKuyB,QAAUvyB,EAAKuyB,QAAQlmB,WAAa,IAI7C,OACIpI,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,4BACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,2BACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,MACXnJ,EAAAC,EAAAC,cAACuX,GAAD,CAAQ9S,cAAe3D,EAAM2D,cAAeC,MAAO,CAAE4pB,OAAQ,SAC7DxuB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,2BAAf,OACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,oBACXnJ,EAAAC,EAAAC,cAAA,QAAM0E,MAAO,CAAEC,MAAO,YACjBwpB,EAAS/J,QAAQ4E,UAAU,EAAGmF,EAAS/J,QAAQ5kB,QAAQ,OAE5DM,EAAAC,EAAAC,cAAA,YAAOmuB,EAAS/J,QAAQ4E,UAAUmF,EAAS/J,QAAQ5kB,QAAQ,SAGnEM,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,MACVilB,GACGpuB,EAAAC,EAAAC,cAAC8P,GAAD,CACI7G,UAAU,iBACVvC,SAAU,kBACV5B,QAAO,eAAAmQ,EAAAnZ,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAE,SAAAa,EAAO9H,GAAP,IAAAyrB,EAAApe,EAAA,OAAArG,EAAA/J,EAAAkK,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,aACCmkB,EAAcN,EACfpa,OAAO,SAACkU,GAAD,OAASA,EAAIuF,WAAgC,MAAnBvF,EAAIhB,aACrC5f,IAAI,SAAA0H,GACD,MAAO,CAAEkY,WAD0ClY,EAA/CkY,WACiB8E,SAD8Bhd,EAAnCgd,SACeP,mBADoBzc,EAAzByc,wBAGfiD,EAAY3vB,OAAS,GANnC,CAAAiM,EAAAT,KAAA,eAAAS,EAAAT,KAAA,EAOqB4jB,EAAoB,CACtC3jB,UAAW,CAAEyT,MAAOyQ,KARvB,QAOKpe,EAPLtF,EAAA2F,OAUcL,EAAQtU,MAAQsU,EAAQtU,KAAK2yB,gBACxCne,KAAQI,QAAQ,oCAEhBJ,KAAQC,MACJ,uFAdP,OAmBL2b,GAAe,GAnBV,wBAAAphB,EAAAP,SAAAM,MAAF,gBAAAE,GAAA,OAAAmK,EAAA/V,MAAAC,KAAAR,YAAA,OAyBvBmB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,+BACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UAAf,SACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UAAUyf,EAAa,EAAIA,EAAa,IAAvD,MAGJ5oB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UAAf,WACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UACVpN,EAAKuyB,SAAWvyB,EAAKuyB,QAAQlmB,WACxBrM,EAAKuyB,QAAQlmB,WAAWtJ,OACxB,MAIdkB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UAAf,cACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,eAAeolB,EAA9B,MAGJvuB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UAAf,aACAnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,UACVyK,GAAiBA,EAAc9U,OAAS8U,EAAc9U,OAAS,OAK5EkB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,0BACXnJ,EAAAC,EAAAC,cAACyuB,GAAD,CACIhmB,QAAS5M,EAAKuyB,QAAUvyB,EAAKuyB,QAAQlmB,WAAa2e,GAClDnT,cAAeA,EACfqY,YAAaA,EACbC,oBAAqBA,EACrBC,eAAgBA,OG7SrByC,GA9BS,SAAC5tB,GACrB,OACIhB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,2BACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,oBACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,cACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,eACXnJ,EAAAC,EAAAC,cAAA,QAAMiJ,UAAU,MAAMvE,MAAO,CAAEujB,WAAY,aAC3CnoB,EAAAC,EAAAC,cAAA,QAAMiJ,UAAU,MAAMvE,MAAO,CAAEujB,WAAY,aAC3CnoB,EAAAC,EAAAC,cAAA,QAAMiJ,UAAU,MAAMvE,MAAO,CAAEujB,WAAY,eAInDnoB,EAAAC,EAAAC,cAAA,OACIiJ,UAAW8G,IAAW,mBAEtBjQ,EAAAC,EAAAC,cAAC8N,GAAA,EAAD,CACIxQ,QAAS,GACTsvB,cAAc,EACd+B,kBAAkB,EAClB5gB,OArDb,CACHC,OAAQ,SAACC,EAAMpS,GACX,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAmS,EADP,CAEIC,gBAAiB,UACjBvJ,MAAO,UACPrE,SAAU,OACVsN,cAAe,SACfrN,WAAY,OACZ4N,WAAY,CAAED,gBAAiB,6BAC/BE,UAAW,CAAEF,gBAAiB,gCAGtCU,UAAW,SAACX,EAAD7S,GAAA,IAAAuxB,EAAAvxB,EAASoT,YAAT,OAAAme,EAAwB5rB,MAAxB4rB,EAA+B3rB,OAA/BlF,OAAAC,EAAA,EAAAD,CAAA,GACJmS,EADI,CAEPlN,MAAO,WAEXgO,QAAS,SAACd,EAAMM,GAAP,OAAAzS,OAAAC,EAAA,EAAAD,CAAA,GACFmS,EADE,CAELe,OAAQ,sCACRtH,aAAc,MACduH,UAAW,OACXb,UAAW,CAAEc,YAAa,cAE9BO,YAAa,SAACxB,EAAMM,GAAP,OAAAzS,OAAAC,EAAA,EAAAD,CAAA,GACNmS,EADM,CAET5N,WAAY,YACZC,SAAU,OACVC,WAAY,OACZqN,cAAe,aAyBHghB,cAAe,MACfC,YAAY,EACZzZ,WAAW,QCjD7B8N,GAAc,SAACzoB,GACjB,MAAO,CACHuT,OAAQ,SAACC,EAAMpS,GACX,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAmS,EADP,CAEIC,gBAAiB,UACjBvJ,MAAO,UACPrE,SAAU,OACVsN,cAAe,SACfrN,WAAY,OACZ4N,WAAY,CAAED,gBAAiB,6BAC/BE,UAAW,CAAEF,gBAAiB,gCAGtCU,UAAW,SAACX,EAAD7S,GAAA,IAAAuxB,EAAAvxB,EAASoT,YAATme,EAAwB5rB,MAAxB4rB,EAA+B3rB,OAA/B,OAAAlF,OAAAC,EAAA,EAAAD,CAAA,GACJmS,EADI,CAEPlN,MACa,SAATtG,GAA4B,cAATA,EACb,QACS,cAATA,EACA,QACS,cAATA,EACA,OACA,WAEdsU,QAAS,SAACd,EAAMM,GAAP,OAAAzS,OAAAC,EAAA,EAAAD,CAAA,GACFmS,EADE,CAELe,OAAQ,sCACRtH,aAAc,MACduH,UAAW,OACXb,UAAW,CAAEc,YAAa,cAE9BO,YAAa,SAACxB,EAAMM,GAAP,OAAAzS,OAAAC,EAAA,EAAAD,CAAA,GACNmS,EADM,CAET5N,WAAY,YACZC,SAAU,OACVC,WAAY,OACZqN,cAAe,cAsJZkhB,GAjJI,SAAAzzB,GAAiCA,EAA9BoJ,cAA8BpJ,EAAfkd,SAAe,IAAA1F,EACtBrM,KAAlBkF,EADwCmH,EACxCnH,QAAS7P,EAD+BgX,EAC/BhX,KAD+B6W,EAEC7Q,KAAnC8Q,EAFkCD,EAExC7W,KAAyB+W,EAFeF,EAExBhH,QAFwBF,EAGH9J,KAA/ByR,EAHkC3H,EAGxC3P,KAAuB4P,EAHiBD,EAG1BE,QAH0B0H,EAImBjK,KAArDkK,EAJkCD,EAIxCvX,KAAkCyX,EAJMF,EAIf1H,QAJeI,EAKhBC,mBAAS,KALOC,EAAAlQ,OAAA0N,EAAA,EAAA1N,CAAAgQ,EAAA,GAKzCyN,EALyCvN,EAAA,GAK/BwN,EAL+BxN,EAAA,GAAA1C,EAOflF,KAA1BmF,EAPyCzN,OAAA0N,EAAA,EAAA1N,CAAAwN,EAAA,eASjCylB,EATiCxkB,GAAA,OAAAykB,EAAA9vB,MAAAC,KAAAR,WAAA,SAAAqwB,IAAA,OAAAA,EAAAlzB,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAShD,SAAAS,EAAoCjQ,GAApC,OAAAuP,EAAA/J,EAAAkK,KAAA,SAAAQ,GAAA,cAAAA,EAAAN,KAAAM,EAAAL,MAAA,cAAAK,EAAAL,KAAA,EACUb,EAAuB,CAAEc,UAAW,CAAE9P,YADhD,wBAAAkQ,EAAAH,SAAAE,OATgDtL,MAAAC,KAAAR,WAsBhD,GATA8a,oBAAU,WACN9W,GAAeE,OAAf,eAAAiG,EAAAhN,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAAsB,SAAAC,EAAOlH,GAAP,OAAAgH,EAAA/J,EAAAkK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACC,gBAAftH,EAAE0V,SADY,CAAAtO,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAER2kB,GAAqB,GAFb,wBAAA7kB,EAAAI,SAAAN,MAAtB,gBAAAU,GAAA,OAAA5B,EAAA5J,MAAAC,KAAAR,YAAA,KAMD,IAEC+M,GAAWD,GAAamH,GAAeU,EACvC,OACIxT,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0J,SAAA,KACI3J,EAAAC,EAAAC,cAAC0Z,EAAA,EAAD,CACI/U,MAAM,UACN4U,SAAUA,EACVI,iBAAkB,kBAAMH,EAAY,QAExC1Z,EAAAC,EAAAC,cAACivB,GAAD,OAKZ,IAAI30B,EAAa6Y,GAAUA,EAAOrG,IAAMqG,EAAOrG,GAAGxS,WAAa6Y,EAAOrG,GAAGxS,WAAa,GAClFoZ,EACAL,GAAqBA,EAAkBK,cAAgBL,EAAkBK,cAAgB,GACzFE,EAAkBjB,GAAYA,EAAS5L,cAAgB4L,EAAS5L,cAAgB,GAChF4M,EAAiBC,EAChBC,OAAO,SAACC,GAAD,OAAOA,EAAE/Z,KAAOoZ,EAAOrG,GAAG6G,iBACjCxM,IAAI,SAAC2M,GACF,MAAO,CACHzM,SAASvL,OAAAC,EAAA,EAAAD,CAAA,GACFgY,MA5C6Bob,EAyD5CrzB,EAAKvB,WAPLI,EAlD4Cw0B,EAkD5Cx0B,2BACUy0B,EAnDkCD,EAmD5C10B,SACiB40B,EApD2BF,EAoD5Cv0B,gBACW00B,EArDiCH,EAqD5Ct0B,UACAC,EAtD4Cq0B,EAsD5Cr0B,SACMy0B,EAvDsCJ,EAuD5Cz0B,KACAK,EAxD4Co0B,EAwD5Cp0B,aAGEN,EAAmDF,EAAnDE,SAAUC,EAAyCH,EAAzCG,KAAM+b,EAAmClc,EAAnCkc,WAAYxJ,EAAuB1S,EAAvB0S,mBAE9BuiB,EAAwBF,EACtBzb,EAAgBC,OAAO,SAACC,GAAD,OAAOub,EAAeva,SAAShB,EAAE/Z,MACxD,GAMFy1B,GAJJ9b,EAAgBA,EAAcG,OAC1B,SAAAlJ,GAAA,IAAGsJ,EAAHtJ,EAAGsJ,SAAU5M,EAAbsD,EAAatD,SAAb,OAA4B4M,IAAanZ,EAAaga,SAASzN,EAAStN,OAG5CoN,IAAI,SAAA4D,GAAA,OAAAA,EAAG1D,SAAwBtN,KAC3D01B,EAAuBF,EAAsB1b,OAAO,SAACC,GAAD,OAAQ0b,EAAY1a,SAAShB,EAAE/Z,MAEnFga,EAAcjN,GAAY,GAAA7J,OAAAnB,OAAAoxB,GAAA,EAAApxB,CACtB2zB,GADsB3zB,OAAAoxB,GAAA,EAAApxB,CACG4X,GADH5X,OAAAoxB,GAAA,EAAApxB,CACqB6X,IAC/C2b,GAAa70B,GACb,GA0BJ,OACIqF,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,2BACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,oBACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,cACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,eACXnJ,EAAAC,EAAAC,cAAA,QAAMiJ,UAAU,MAAMvE,MAAO,CAAEujB,WAAY,aAC3CnoB,EAAAC,EAAAC,cAAA,QAAMiJ,UAAU,MAAMvE,MAAO,CAAEujB,WAAY,aAC3CnoB,EAAAC,EAAAC,cAAA,QAAMiJ,UAAU,MAAMvE,MAAO,CAAEujB,WAAY,eAInDnoB,EAAAC,EAAAC,cAAA,OACIiJ,UAAW8G,IAAW,iBAAkB,CACpC2f,OAAwC,UAA/BP,GAAiB30B,GAC1Bm1B,QAAyC,WAA/BR,GAAiB30B,MAG/BsF,EAAAC,EAAAC,cAAC8N,GAAA,EAAD,CACIxQ,QAASyW,EACT2Y,aAAc3Y,EAAYA,EAAYnV,OAAS,GAC/CguB,cAAc,EACd+B,kBAAkB,EAClB5gB,OAAQmV,GAAYoM,GAAa70B,GACjCm0B,cACoC,UAA/BO,GAAiB30B,IACc,WAA/B20B,GAAiB30B,GACZ,MAC+C,QAA9C40B,GAAwB,IAAIliB,cAC7B,MAC+C,UAA9CkiB,GAAwB,IAAIliB,cAC7B,SACqC,OAArCF,EAAmBE,cACnB,MACA,SAEV2hB,YAA2C,IAA/Bn0B,QAA6CwM,EACzD2lB,WAAY,CAAEP,OA3DnB,SAACxrB,EAAOipB,GACnB,OAAOjpB,EAAMxD,SAAWwD,EAAMxD,QAAQsB,QAAUkC,EAAMxD,QAAQ,GAAG0K,QAAUlH,EAAMkH,MAC7ElI,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0J,SAAA,KACkC,mBAA5B5O,GAAY2b,IACV1W,EAAAC,EAAAC,cAAA,OACI0E,MAAO,CACHrE,WAAY,YACZC,SAAU,MACVyc,WAAY,OACZyP,UAAW,WALnB,4BAYJ1sB,EAAAC,EAAAC,cAACusB,GAAA,EAAWD,OAAWxrB,IAG3BhB,EAAAC,EAAAC,cAACusB,GAAA,EAAWD,OAAWxrB,WCrItB6gB,GAAc,CACvBiO,KAAM,IACNC,SAAU,IACVjO,IAAK,CACDxnB,WAAY,cACZ01B,YAAa,uBACbx1B,WAAY,eAEhB6I,KAAM,CACF2J,GAAI,MACJ4U,OAAQ,UACRlC,MAAO,SACPuQ,OAAQ,UACRC,cAAe,oBA0HRC,GApHA,SAAA70B,GAA8D,IAA3DulB,EAA2DvlB,EAA3DulB,SAAUxmB,EAAiDiB,EAAjDjB,MAAO0f,EAA0Cze,EAA1Cye,kBAAmBb,EAAuB5d,EAAvB4d,iBAClD,OACIlZ,EAAAC,EAAAC,cAAC+gB,EAAA,EAAD,KACIjhB,EAAAC,EAAAC,cAACkwB,GAAD,CACIC,KAAMxO,GAAYiO,KAClBQ,OAAK,EACL1P,UAAW,SAACO,GAAD,OACPnhB,EAAAC,EAAAC,cAACqwB,GAADv0B,OAAA0C,OAAA,CACIuc,UAAWwM,IACPtG,EAFR,CAGIrX,MAAM,WACNoP,iBAAkBA,MAG1B4H,MAAO,CAAC5B,IACR2B,SAAUA,IAGd7gB,EAAAC,EAAAC,cAACkwB,GAAD,CACIC,KAAMxO,GAAYC,IAAIxnB,WACtBg2B,OAAK,EACL1P,UAAW,SAACO,GAAD,OACPnhB,EAAAC,EAAAC,cAACqwB,GAADv0B,OAAA0C,OAAA,CACIuc,UAAWiK,IACP/D,EAFR,CAGIrX,MAAM,GACNzP,MAAOA,EACP0f,kBAAmBA,EACnBb,iBAAkBA,MAG1B4H,MAAO,CAAC5B,IACR2B,SAAUA,EACVxmB,MAAOA,EACP0f,kBAAmBA,IAGvB/Z,EAAAC,EAAAC,cAACkwB,GAAD,CACIC,KAAMxO,GAAYC,IAAIkO,YACtBM,OAAK,EACL1P,UAAW,SAACO,GAAD,OACPnhB,EAAAC,EAAAC,cAACqwB,GAADv0B,OAAA0C,OAAA,CACIuc,UAAW0S,IACPxM,EAFR,CAGIrX,MAAM,GACNoP,iBAAkBA,MAG1B4H,MAAO,CAAC5B,IACR2B,SAAUA,IAGd7gB,EAAAC,EAAAC,cAACkwB,GAAD,CACIC,KAAMxO,GAAYC,IAAItnB,WACtB81B,OAAK,EACL1P,UAAW,SAACO,GAAD,OACPnhB,EAAAC,EAAAC,cAACqwB,GAADv0B,OAAA0C,OAAA,CACIuc,UAAW+T,IACP7N,EAFR,CAGIrX,MAAM,GACNoP,iBAAkBA,MAG1B4H,MAAO,CAAC5B,IACR2B,SAAUA,IAGd7gB,EAAAC,EAAAC,cAAC+gB,EAAA,EAAD,CACIoP,KAAMxO,GAAYxe,KAAKue,OACvB0O,OAAK,EACLpP,OAAQ,SAACC,GAAD,OACJnhB,EAAAC,EAAAC,cAACswB,GAADx0B,OAAA0C,OAAA,CACIuc,UAAWyG,GACX5X,MAAM,sBACN+S,WAAY,CACR/S,MAAO,SACPD,GAAIgY,GAAYxe,KAAKqc,QAErByB,OAKhBnhB,EAAAC,EAAAC,cAAC+gB,EAAA,EAAD,CACIoP,KAAMxO,GAAYxe,KAAKqc,MACvB4Q,OAAK,EACLpP,OAAQ,SAACC,GAAD,OACJnhB,EAAAC,EAAAC,cAACswB,GAADx0B,OAAA0C,OAAA,CACIuc,UAAWuE,GACX1V,MAAM,wBACN+S,WAAY,CACR/S,MAAO,eACPD,GAAIgY,GAAYxe,KAAKue,SAErBT,OAKhBnhB,EAAAC,EAAAC,cAAC+gB,EAAA,EAAD,CACIoP,KAAMxO,GAAYxe,KAAK6sB,cACvBI,OAAK,EACLpP,OAAQ,SAACC,GAAD,OACJnhB,EAAAC,EAAAC,cAACswB,GAADx0B,OAAA0C,OAAA,CACIuc,UAAWgH,GACXnY,MAAM,uBACFqX,OAKhBnhB,EAAAC,EAAAC,cAAC+gB,EAAA,EAAD,CAAOoP,KAAMxO,GAAYkO,SAAUO,OAAK,EAAC1P,UAAWlG,OCrI1DnX,GAAQF,GAAKO,iBA+EJ6sB,GA7EH,WACIC,iBAAO,MAAnB,IADchlB,EAGmB9J,KAAzBgK,EAHMF,EAGNE,QAAS7P,EAHH2P,EAGG3P,KAHHiQ,GAAAN,EAGS8E,MACSvE,wBAAS7E,IAJ3B8E,EAAAlQ,OAAA0N,EAAA,EAAA1N,CAAAgQ,EAAA,GAIP6U,EAJO3U,EAAA,GAIGykB,EAJHzkB,EAAA,GAAA6G,EAK+CrM,KAA/CkqB,EALA7d,EAKNhX,KAA+B80B,EALzB9d,EAKgBnH,QALhBpC,EAMmBlF,KAA1BmF,EANOzN,OAAA0N,EAAA,EAAA1N,CAAAwN,EAAA,MAAAsnB,ECdeluB,YAAY0b,IDsBlCljB,EAROY,OAAA0N,EAAA,EAAA1N,CAAA80B,EAAA,eAAAC,IAAA,OAAAA,EAAA/0B,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAUd,SAAAC,IAAA,IAAA4P,EAAA7f,EAAAC,EAAAC,EAAAC,EAAA42B,EAAA,OAAAhnB,EAAA/J,EAAAkK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACSsB,EADT,CAAAxB,EAAAE,KAAA,eAAAwP,EAEqD/d,EAAKiR,GAA1C/S,EAFhB6f,EAEgB7f,GAAIC,EAFpB4f,EAEoB5f,SAAUC,EAF9B2f,EAE8B3f,MAAOC,EAFrC0f,EAEqC1f,KAAMC,EAF3Cyf,EAE2Czf,MACnCs2B,EAAYv2B,GAHpBgQ,EAAAE,KAAA,EAIclP,EAAY,CAAEmP,UAAW,CAAEtQ,KAAIC,WAAUC,QAAOC,OAAMC,WAJpE,wBAAA+P,EAAAI,SAAAN,OAVc9K,MAAAC,KAAAR,WAAA,SAAAqwB,IAAA,OAAAA,EAAAlzB,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAA/J,EAAAgK,KAkBd,SAAAS,EAAoCjQ,GAApC,OAAAuP,EAAA/J,EAAAkK,KAAA,SAAAQ,GAAA,cAAAA,EAAAN,KAAAM,EAAAL,MAAA,cAAAK,EAAAL,KAAA,EACUb,EAAuB,CAAEc,UAAW,CAAE9P,YADhD,wBAAAkQ,EAAAH,SAAAE,OAlBctL,MAAAC,KAAAR,WAiCd,GAXA8a,oBAAU,YAEDkX,GACDhuB,GAAe4V,SAASC,SAAS1D,SAAS,gBAC1C4b,GACAA,EAAep2B,aACsB,IAArCo2B,EAAep2B,WAAWC,QA5BpB,SAAAgQ,GAAAykB,EAAA9vB,MAAAC,KAAAR,WA8BNowB,EAAqB,IAE1B,IACCrjB,GAAWilB,EACX,OAAO7wB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0J,SAAA,WAGMvC,IAAbyZ,GAA0B9kB,GAAQA,EAAKiR,IArC7B,WAAA+jB,EAAA3xB,MAAAC,KAAAR,WAsCVoyB,GAGJ,IAAM52B,KAAQ0B,IAAQA,EAAKiR,KAAKjR,EAAKiR,GAAG3S,MAClC0f,KAAoBhe,IAAQA,EAAKiR,KAAKjR,EAAKiR,GAAG+M,kBAC9Cb,KACF0X,IAAkBA,EAAep2B,aAAao2B,EAAep2B,WAAWC,OAEtEQ,KACF21B,IAAkBA,EAAep2B,aAC3Bo2B,EAAep2B,WAAWS,uBAGpC,OAAIsI,GAEIvD,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0J,SAAA,KACI3J,EAAAC,EAAAC,cAACgxB,EAAD,CACItsB,MAAO,CACHiD,WACKxN,IAAU0f,GAAqBlX,GAAe4V,SAASC,SAAS1D,SAAS,eAAmBkE,EAAmB,QAAU,QAC9H9K,gBAAiB,6BAGrBpO,EAAAC,EAAAC,cAACixB,GAAD,CAAStQ,SAAUA,EAAU3H,iBAAkBA,EAAkBje,uBAAwBA,IACzF+E,EAAAC,EAAAC,cAACkxB,GAAD,CAASjoB,UAAU,mBAAmBlP,GAAG,uBACrC+F,EAAAC,EAAAC,cAACmxB,GAAD,CACIxQ,SAAUA,EACVxmB,MAAOA,EACP0f,kBAAmBA,EACnBb,iBAAkBA,OAO/BlZ,EAAAC,EAAAC,cAACmxB,GAAD,OE/EfC,IAASpQ,OACRlhB,EAAAC,EAAAC,cAACqxB,EAAA,EAAD,CAAgBC,OAAQ31B,GACvBmE,EAAAC,EAAAC,cAACuxB,EAAA,EAAD,CAAqBD,OAAQ31B,GAC5BmE,EAAAC,EAAAC,cAAC+gB,EAAA,EAAD,CAAQjG,QAASnY,IAChB7C,EAAAC,EAAAC,cAACwxB,GAAD,SAIHpP,SAASC,eAAe","file":"static/js/main.d6e64027.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-bubble.6ec73c52.png\";","export default {\n    userData: {\n        __typename: 'userData',\n        id: '',\n        fullName: '',\n        email: '',\n        role: '',\n        isNew: true,\n    },\n    onboarding: {\n        __typename: 'onboarding',\n        currentStep: 1,\n    },\n    customizer: {\n        __typename: 'customizer',\n        isOpen: false,\n        position: null,\n        text: null,\n        shouldOpenTheSelectOptions: false,\n        customDirection: null,\n        languages: null,\n        branding: null,\n        removedItems: [],\n        openLanguagesComponent: false\n    },\n};\n","import gql from 'graphql-tag';\nimport { apolloClient } from '../apolloClient';\n\nexport default (\n    _,\n    {\n        isOpen,\n        position,\n        text,\n        shouldOpenTheSelectOptions,\n        customDirection,\n        languages,\n        branding,\n        removedItems,\n        openLanguagesComponent\n    },\n    { cache }\n) => {\n    const query = gql`\n        query getCustomizerData {\n            customizer @client {\n                isOpen\n                position\n                text\n                shouldOpenTheSelectOptions\n                customDirection\n                languages\n                branding\n                removedItems\n                openLanguagesComponent\n            }\n        }\n    `;\n    const previousState = apolloClient.readQuery({ query });\n    const data = {\n        customizer: {\n            ...previousState.customizer,\n            isOpen,\n            position,\n            text,\n            shouldOpenTheSelectOptions,\n            customDirection,\n            languages,\n            branding,\n            removedItems,\n            openLanguagesComponent\n        },\n    };\n\n    apolloClient.writeData({\n        query,\n        data,\n    });\n\n    return null;\n};\n","import setUserData from './setUserData';\nimport setOnboardingData from './setOnboardingData';\nimport setCustomizerData from './setCustomizerData';\n\nexport default {\n    Mutation: {\n        setUserData,\n        setOnboardingData,\n        setCustomizerData,\n    },\n};\n","import gql from 'graphql-tag';\nimport { apolloClient } from '../apolloClient';\n\nexport default (_, { fullName, id, email, role, isNew }, { cache }) => {\n    const query = gql`\n        query getUserData {\n            userData @client {\n                fullName\n                email\n                id\n                role\n                isNew\n            }\n        }\n    `;\n    const previousState = apolloClient.readQuery({ query });\n    const data = {\n        userData: {\n            ...previousState.userData,\n            fullName,\n            id,\n            email,\n            role,\n            isNew,\n        },\n    };\n\n    apolloClient.writeData({\n        query,\n        data,\n    });\n\n    return null;\n};\n","import gql from 'graphql-tag';\nimport { apolloClient } from '../apolloClient';\n\nexport default (_, { currentStep }, { cache }) => {\n    const query = gql`\n        query getOnboardingData {\n            onboarding @client {\n                currentStep\n            }\n        }\n    `;\n    const previousState = apolloClient.readQuery({ query });\n    const data = {\n        onboarding: {\n            ...previousState.onboarding,\n            currentStep,\n        },\n    };\n\n    apolloClient.writeData({\n        query,\n        data,\n    });\n\n    return null;\n};\n","import { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloLink, split } from 'apollo-link';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { createUploadLink } from 'apollo-upload-client';\nimport { ApolloClient } from 'apollo-client';\n\nimport { ACCESS_TOKEN } from '../constants';\nimport defaultState from './defaultState';\nimport resolvers from './resolvers';\n\nconst cache = new InMemoryCache({ freezeResults: true });\ncache.writeData({ data: defaultState });\n\nconst middlewareLink = new ApolloLink((operation, forward) => {\n    const tokenValue = localStorage.getItem(ACCESS_TOKEN);\n    operation.setContext({\n        headers: {\n            Authorization: tokenValue ? `Bearer ${tokenValue}` : '',\n        },\n    });\n    return forward(operation);\n});\n\nconst wsLink = new WebSocketLink({\n    uri: process.env.REACT_APP_WS_GRAPHQL_URL ,\n    options: {\n        reconnect: true,\n        connectionParams: {\n            Authorization: `Bearer ${localStorage.getItem(ACCESS_TOKEN)}`,\n        },\n    },\n});\nconst uploadLink = createUploadLink({ uri: process.env.REACT_APP_HTTP_GRAPHQL_URL });\n\nconst httpLinkAuth = middlewareLink.concat(uploadLink);\n\nconst link = split(\n    // split based on operation type\n    ({ query }) => {\n        const { kind, operation } = getMainDefinition(query);\n        return kind === 'OperationDefinition' && operation === 'subscription';\n    },\n    wsLink,\n    httpLinkAuth,\n    defaultState\n);\n\n// apollo client setup\nexport const apolloClient = new ApolloClient({\n    link: ApolloLink.from([link]),\n    cache,\n    connectToDevTools: true,\n    resolvers,\n    assumeImmutableResults: true,\n});\n","export const USER_ID = 'user-id'\n\nexport const ACCESS_TOKEN = 'ACCESS_TOKEN'","  \nimport { Layout as AntLayout } from 'antd'\n\nconst Layout = AntLayout\n\nexport default Layout","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Page-2\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\",\n  fontFamily: \"OpenSans-Bold, Open Sans\",\n  fontSize: 18,\n  fontWeight: \"bold\",\n  \"line-spacing\": 47\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"a-desktop-003\",\n  transform: \"translate(-37.000000, -30.000000)\",\n  fill: \"#9966ff\"\n}, /*#__PURE__*/React.createElement(\"text\", {\n  id: \"translatestack\"\n}, /*#__PURE__*/React.createElement(\"tspan\", {\n  x: 37,\n  y: 33\n}, \"translatestack\"))));\n\nvar SvgLogo = (_ref) => {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"131px\",\n    height: \"47px\",\n    viewBox: \"0 0 130 15\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(SvgLogo, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/logo.eabd2216.svg\";\nexport { ForwardRef as ReactComponent };","import gql from 'graphql-tag';\n\nexport const ME_QUERY = gql`\n    query MeQuery {\n        me {\n            id\n            email\n            fullName\n            role\n            isNew\n            skippedOnboarding\n            apiKey\n            sourceLanguage\n            customizer {\n                id\n                position\n                text\n                appearance\n                publishedLanguages\n                customDivId\n                customDivDirection\n            }\n            pages {\n                id\n            }\n        }\n    }\n`;\n\nexport const ME_QUERY_CLIENT = gql`\n    query MeQuery {\n        me @client {\n            id\n            email\n            fullName\n            role\n            isNew\n        }\n    }\n`;\n\nexport const LANGUAGES_LIST_QUERY = gql`\n    query languagesList {\n        languagesList {\n            id\n            abbreviation\n            language\n            flag\n            iso2\n            localName\n        }\n    }\n`;\n","import { useQuery } from '@apollo/react-hooks';\nimport { LANGUAGES_LIST_QUERY, ME_QUERY, ME_QUERY_CLIENT } from './rootGql';\n\nexport const useMeQuery = () =>\n    useQuery(ME_QUERY, {\n        fetchPolicy: 'cache-and-network',\n    });\nexport const useMeQueryClient = () => useQuery(ME_QUERY_CLIENT);\nexport const useLanugagesListQuery = () =>\n    useQuery(LANGUAGES_LIST_QUERY, {\n        fetchPolicy: 'cache-and-network',\n    });\n","import gql from 'graphql-tag';\n\nexport const ONBOARDING_QUERY_CLIENT = gql`\n    query OnboardingQuery {\n        onboarding @client {\n            currentStep\n        }\n    }\n`;\n\nexport const ONBOARDING_MUTATION = gql`\n    mutation onboarding($pageUrl: String!, $translationLanguages: [Int!]!, $sourceLanguage: Int!) {\n        onboarding(\n            pageUrl: $pageUrl\n            translationLanguages: $translationLanguages\n            sourceLanguage: $sourceLanguage\n        )\n    }\n`;\n\nexport const UPDATE_USER_MUTATION = gql`\n    mutation updateUser($isNew: Boolean, $skippedOnboarding: Boolean, $sourceLanguage: Int) {\n        updateUser(\n            isNew: $isNew\n            skippedOnboarding: $skippedOnboarding\n            sourceLanguage: $sourceLanguage\n        )\n    }\n`;\n\nexport const USER_LANGUAGES_QUERY = gql`\n    query userLanguages {\n        userLanguages {\n            isActive\n            Language {\n                id\n                localName\n                flag\n                language\n                iso2\n                abbreviation\n            }\n        }\n    }\n`;\n","import { useQuery } from '@apollo/react-hooks';\nimport { ONBOARDING_QUERY_CLIENT } from '../../user/gql';\n\nexport const useOnboardingQueryClient = () => useQuery(ONBOARDING_QUERY_CLIENT);\n","import gql from 'graphql-tag';\n\nexport const setOnboardingMutation = gql`\n    mutation setOnboardingData($currentStep: Number!) {\n        setOnboardingData(currentStep: $currentStep) @client {\n            currentStep\n        }\n    }\n`;\n","import { useMutation } from '@apollo/react-hooks';\nimport { setOnboardingMutation } from './gql';\n\nexport const useOnboardingMutationClient = () => useMutation(setOnboardingMutation);\n","import { createBrowserHistory } from 'history'\n\nexport const browserHistory = createBrowserHistory()\n\nbrowserHistory.listen(e => {\n    console.log(\"browser history\", e);\n})","import { useMutation } from '@apollo/react-hooks';\nimport { ME_QUERY } from '../rootGql';\nimport { ONBOARDING_MUTATION, UPDATE_USER_MUTATION } from './gql';\n\nexport const useOnboardingMutation = () => useMutation(ONBOARDING_MUTATION);\nexport const useUpdateUserMutation = () => useMutation(UPDATE_USER_MUTATION, {\n    refetchQueries: ['MeQuery']\n});\n","import { ACCESS_TOKEN } from \"../constants\";\n\nexport const auth = {\n\tlogIn: token => {\n\t\tauth.setAccessToken(token);\n\t},\n\n\tlogOut: () => {\n\t\tauth.removeAccessToken();\n\t},\n\n\t// Access Token\n\tsetAccessToken: token => localStorage.setItem(ACCESS_TOKEN, token),\n\tgetAccessToken: () => localStorage.getItem(ACCESS_TOKEN),\n\tremoveAccessToken: () => localStorage.removeItem(ACCESS_TOKEN)\n};\n","import gql from 'graphql-tag';\n\nexport const CUSTOMIZER_QUERY = gql`\n    query customizerQuery {\n        customizer @client {\n            isOpen\n            position\n            text\n            shouldOpenTheSelectOptions\n            customDirection\n            languages\n            branding\n            removedItems\n            openLanguagesComponent\n        }\n    }\n`;\n\nexport const CUSTOMIZER_MUTATION = gql`\n    mutation setCustomizerData(\n        $isOpen: Boolean\n        $position: String\n        $text: String\n        $shouldOpenTheSelectOptions: Boolean\n        $customDirection: String\n        $languages: [Int]\n        $branding: String\n        $removedItems: [Int]\n        $openLanguagesComponent: Boolean\n    ) {\n        setCustomizerData(\n            isOpen: $isOpen\n            position: $position\n            text: $text\n            shouldOpenTheSelectOptions: $shouldOpenTheSelectOptions\n            customDirection: $customDirection\n            languages: $languages\n            branding: $branding\n            removedItems: $removedItems\n            openLanguagesComponent: $openLanguagesComponent\n        ) @client {\n            isOpen\n            position\n            text\n            shouldOpenTheSelectOptions\n            customDirection\n            languages\n            branding\n            removedItems\n            openLanguagesComponent\n        }\n    }\n`;\n\nexport const CUSTOMIZER_MUTATION_SERVER = gql`\n    mutation updateCustomizer(\n        $position: String\n        $text: String\n        $publishedLanguages: [Int!]\n        $appearance: String\n        $customDivId: String\n        $customDivDirection: String\n    ) {\n        updateCustomizer(\n            position: $position\n            text: $text\n            publishedLanguages: $publishedLanguages\n            appearance: $appearance\n            customDivId: $customDivId\n            customDivDirection: $customDivDirection\n        ) {\n            position\n            text\n            publishedLanguages\n            appearance\n            customDivId\n            customDivDirection\n        }\n    }\n`;\n\nexport const UPDATE_TARGET_LANGUAGES_MUTATION = gql`\n    mutation updateTargetLanguages($selectedLanguagesIds: [Int!]!) {\n        updateTargetLanguages(selectedLanguagesIds: $selectedLanguagesIds)\n    }\n`;\n","import { useMutation } from '@apollo/react-hooks';\nimport {\n    CUSTOMIZER_MUTATION,\n    CUSTOMIZER_MUTATION_SERVER,\n    UPDATE_TARGET_LANGUAGES_MUTATION,\n} from './gql';\n\nexport const useCustomizerMutationClient = () =>\n    useMutation(CUSTOMIZER_MUTATION, {\n        refetchQueries: ['customizerQuery'],\n    });\nexport const useCustomizerMutation = () =>\n    useMutation(CUSTOMIZER_MUTATION_SERVER, {\n        // refetchQueries: ['MeQuery'],\n    });\n\nexport const useUpdateTargetLanguagesMutation = () =>\n    useMutation(UPDATE_TARGET_LANGUAGES_MUTATION, {\n        refetchQueries: ['userLanguages'],\n    });\n","import React from 'react';\n\nconst GoBack = ({ onClickCB, routerHistory, style }) => {\n    return (\n        <p\n            style={{\n                fontFamily: 'Open Sans',\n                fontWeight: 'bold',\n                fontSize: '12px',\n                color: '#9966ff',\n                cursor: 'pointer',\n                marginBottom: '21px',\n                ...style,\n            }}\n            onClick={() => {\n                if (onClickCB) {\n                    onClickCB();\n                } else {\n                    routerHistory.goBack();\n                }\n            }}\n        >\n            &lt; GO BACK\n        </p>\n    );\n};\n\nexport default GoBack;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"_x38_\"\n}, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M617.858,370.896L221.513,9.705c-13.006-12.94-34.099-12.94-47.105,0c-13.006,12.939-13.006,33.934,0,46.874 l372.447,339.438L174.441,735.454c-13.006,12.94-13.006,33.935,0,46.874s34.099,12.939,47.104,0l396.346-361.191 c6.932-6.898,9.904-16.043,9.441-25.087C627.763,386.972,624.792,377.828,617.858,370.896z\"\n}))));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgRightArrowAngle = (_ref) => {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"792.033px\",\n    height: \"792.033px\",\n    viewBox: \"0 0 792.033 792.033\",\n    style: {\n      enableBackground: \"new 0 0 792.033 792.033\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(SvgRightArrowAngle, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/right-arrow-angle.b79ac830.svg\";\nexport { ForwardRef as ReactComponent };","import { useQuery } from '@apollo/react-hooks';\nimport { CUSTOMIZER_QUERY } from './gql';\n\nexport const useCustomizerQueryClient = () => useQuery(CUSTOMIZER_QUERY);\n","import React from \"react\";\n\nconst Button = ({ children, ...rest }) => (\n\t<button size=\"large\" {...rest}>\n\t\t{children}\n\t</button>\n);\n\nexport default Button;\n","import React from 'react';\nimport wordcount from 'wordcount';\n\nexport const getStringTranslation = (string, selectedLanguage) => {\n    let translatedStringValue = null;\n    let updatedAtValue = string.updatedAt;\n    if (string && string.translations && string.translations.length) {\n        let { translations } = string;\n        translations.forEach(({ languageId, translatedString, updatedAt }) => {\n            if (languageId === selectedLanguage) {\n                translatedStringValue = translatedString;\n                updatedAtValue = updatedAt;\n            }\n        });\n    }\n\n    return { translatedStringValue, updatedAtValue };\n};\n\nexport const mapLanguages = (languagesList, textAppearance, shouldShowLocalName = false) => {\n    return languagesList.map((lang) => {\n        const Language = lang.Language ? lang.Language : lang;\n        return {\n            label: (\n                <div\n                    style={{\n                        fontSize: '14px',\n                        color: '#0a2540',\n                        marginRight: '25px',\n                    }}\n                >\n                    {textAppearance !== 'TEXT_ONLY' && (\n                        <img\n                            src={Language.flag}\n                            style={{ width: '23px', height: '23px', borderRadius: '50px' }}\n                        />\n                    )}\n\n                    <span style={{ marginLeft: '13px' }}>\n                        {textAppearance && textAppearance === 'SHORTENED'\n                            ? Language.abbreviation.toUpperCase()\n                            : textAppearance && textAppearance === 'FLAG_ONLY'\n                            ? ''\n                            : shouldShowLocalName\n                            ? Language.localName\n                            : Language.language}\n                    </span>\n                </div>\n            ),\n            value: Language.id,\n        };\n    });\n};\n\nexport const getPageWordsCount = (pageString) => {\n    let count = 0;\n\n    if (pageString && pageString.length) {\n        pageString.forEach((string) => {\n            count += wordcount(string.original);\n        });\n    }\n\n    return count;\n};\n\nexport const getTranslationsPercentageByLanguage = (strings, languageId) => {\n    let percentage = 0;\n    let langTranslationsCount = 0;\n\n    if (strings && strings.length) {\n        strings.forEach(({ translations }) => {\n            if (translations && translations.length) {\n                translations.forEach(({ languageId }) => {\n                    if (languageId === languageId) {\n                        langTranslationsCount++;\n                    }\n                });\n            }\n        });\n        percentage = ((langTranslationsCount / strings.length) * 100).toFixed(1);\n    }\n\n    return percentage;\n};\n","import React from \"react\";\n\nconst Input = ({ children, ...rest }) => (\n\t<input className=\"ts-input\" size=\"large\" type=\"text\" {...rest} >\n\t\t{children}\n\t</input>\n);\n\nexport default Input;\n","import { useQuery } from '@apollo/react-hooks';\nimport { USER_LANGUAGES_QUERY } from './gql';\n\nexport const useUserLanguagesQuery = () => useQuery(USER_LANGUAGES_QUERY);\n","import React, { useState } from 'react';\nimport { message, Radio } from 'antd';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { browserHistory } from '../browserHistory';\nimport GoBack from '../components/GoBack';\nimport { ReactComponent as RightArrow } from '../assets/right-arrow-angle.svg';\nimport {\n    useCustomizerMutation,\n    useCustomizerMutationClient,\n    useUpdateTargetLanguagesMutation,\n} from '../translateStack/customizer/useMutations';\nimport { useCustomizerQueryClient } from '../translateStack/customizer/useQueries';\nimport Button from '../form/components/Button';\nimport { useLanugagesListQuery, useMeQuery } from '../rootUseQuery';\nimport { mapLanguages } from '../translateStack/translation/utils';\nimport Select from 'react-select';\nimport Input from '../form/components/Input';\nimport { useUserLanguagesQuery } from '../user/useQueries';\n\nconst MainComponent = ({ setWhichInnerSidebar }) => {\n    const [updateCustomizerClient] = useCustomizerMutationClient();\n\n    return (\n        <>\n            <div className=\"customizer-menu-title\">Your settings and preferences</div>\n            <div className=\"customizer-menu-item\">\n                <Link\n                    to=\"#\"\n                    title=\"Projects\"\n                    onClick={async (e) => {\n                        setWhichInnerSidebar(1);\n                        await updateCustomizerClient({\n                            variables: { shouldOpenTheSelectOptions: false },\n                        });\n                    }}\n                >\n                    Position\n                    <RightArrow className=\"right-arrow\" />\n                </Link>\n            </div>\n            <div className=\"customizer-menu-item\">\n                <Link\n                    to=\"#\"\n                    title=\"Projects\"\n                    onClick={async (e) => {\n                        setWhichInnerSidebar(2);\n                        await updateCustomizerClient({\n                            variables: { shouldOpenTheSelectOptions: true },\n                        });\n                    }}\n                >\n                    Languages\n                    <RightArrow className=\"right-arrow\" />\n                </Link>\n            </div>\n            <div className=\"customizer-menu-item\">\n                <Link\n                    to=\"#\"\n                    title=\"Projects\"\n                    onClick={async (e) => {\n                        setWhichInnerSidebar(3);\n                        await updateCustomizerClient({\n                            variables: { shouldOpenTheSelectOptions: true },\n                        });\n                    }}\n                >\n                    Appearance\n                    <RightArrow className=\"right-arrow\" />\n                </Link>\n            </div>\n            <div className=\"customizer-menu-item\">\n                <Link\n                    to=\"#\"\n                    title=\"Projects\"\n                    onClick={async (e) => {\n                        setWhichInnerSidebar(4);\n                        await updateCustomizerClient({\n                            variables: { shouldOpenTheSelectOptions: false },\n                        });\n                    }}\n                >\n                    Text\n                    <RightArrow className=\"right-arrow\" />\n                </Link>\n            </div>\n        </>\n    );\n};\n\nconst sharedBtnStyles = {\n    marginLeft: '40px',\n    bottom: '38px',\n    position: 'absolute',\n    width: '105px',\n};\n\nconst CustomStyle = () => {\n    return {\n        option: (base, data) => {\n            return { ...base };\n        },\n        menu: (provided, state) => ({\n            ...provided,\n            width: state.selectProps.width,\n            borderBottom: '1px dotted pink',\n            color: state.selectProps.menuColor,\n            padding: 20,\n        }),\n        container: (base, { selectProps: { width, height } }) => ({\n            ...base,\n            width: width,\n            marginTop: '33px',\n            minHeight: '83px',\n            height: '83px',\n        }),\n        control: (base, state) => ({\n            ...base,\n            minHeight: '83px',\n            border: 'solid 1px rgba(227, 232, 238, 0.42)',\n            borderRadius: '2px',\n        }),\n        indicatorSeparator: (base, state) => ({\n            ...base,\n            display: 'none',\n        }),\n        multiValue: (base, state) => ({\n            ...base,\n            height: '47px',\n            borderRadius: '3px',\n            border: 'solid 1px rgba(227, 232, 238, 0.42)',\n            backgroundColor: 'rgba(227, 232, 238, 0.42)',\n            paddingLeft: '13px',\n            paddingTop: '10px',\n            paddingBottom: '8px',\n        }),\n    };\n};\n\nconst CustomDirectionStyle = () => {\n    return {\n        option: (base, data) => {\n            return {\n                ...base,\n                backgroundColor: '#e8eaef',\n                color: '#0a2540',\n                fontSize: '12px',\n                letterSpacing: '0.43px',\n                fontWeight: 'bold',\n                '&:active': { backgroundColor: 'rgba(227, 232, 238, 0.42)' },\n                '&:hover': { backgroundColor: 'rgba(255, 255, 255, 0.01)' },\n            };\n        },\n        menu: (provided, state) => ({\n            ...provided,\n            width: state.selectProps.width,\n            borderBottom: '1px dotted pink',\n            color: state.selectProps.menuColor,\n            padding: 10,\n        }),\n        container: (base, { selectProps: { width, height } }) => ({\n            ...base,\n            width: width,\n            marginTop: '10px',\n            height: '56px',\n        }),\n        control: (base, state) => ({\n            ...base,\n            border: 'solid 1px rgba(227, 232, 238, 0.42)',\n            borderRadius: '2px',\n            boxShadow: 'none',\n            '&:hover': { borderColor: '#a172ff' },\n        }),\n        indicatorSeparator: (base, state) => ({\n            ...base,\n            display: 'none',\n        }),\n        multiValue: (base, state) => ({\n            ...base,\n            height: '47px',\n            borderRadius: '3px',\n            border: 'solid 1px rgba(227, 232, 238, 0.42)',\n            backgroundColor: 'rgba(227, 232, 238, 0.42)',\n            paddingLeft: '13px',\n            paddingTop: '10px',\n            paddingBottom: '8px',\n        }),\n        singleValue: (base, state) => ({\n            ...base,\n            fontFamily: 'Open Sans',\n            fontSize: '14px',\n            fontWeight: 'bold',\n            letterSpacing: '0.5px',\n            color: '#0a2540',\n        }),\n    };\n};\n\nconst PositionComponent = ({}) => {\n    const { data, loading: meLoading } = useMeQuery();\n    const [updateCustomizer] = useCustomizerMutation();\n    const [updateCustomizerClient] = useCustomizerMutationClient();\n    const [btnActive, setBtnActive] = useState(false);\n    const [userPosition, setUserPosition] = useState(null);\n    const [customPosition, setCustomPosition] = useState(null);\n    const [customDirection, setCustomDirection] = useState(null);\n\n    if (meLoading) return <></>;\n\n    let customizer = data && data.me ? data.me.customizer : {};\n\n    if (customizer && userPosition === null) {\n        setUserPosition(customizer.position || 'LEFT');\n    }\n\n    if (customizer && customPosition === null) {\n        setCustomPosition(customizer.customDivId || '');\n    }\n\n    if (customizer && customizer.customDivDirection !== null && customDirection === null) {\n        setCustomDirection({\n            label: `${customizer.customDivDirection[0]}${customizer.customDivDirection\n                .slice(1)\n                .toLowerCase()}`,\n            value: customizer.customDivDirection,\n        });\n    }\n\n    return (\n        <>\n            <div className=\"customizer-menu-title\">Position</div>\n            <div className=\"customizer-menu-sub-title\">\n                Choose the position of the switcher below\n            </div>\n\n            <div className=\"customizer-menu-group\">\n                <Radio.Group\n                    value={userPosition}\n                    onChange={async (e) => {\n                        setUserPosition(e.target.value);\n\n                        if (e.target.value !== 'CUSTOM') {\n                            setBtnActive(true);\n                        }\n                        await updateCustomizerClient({\n                            variables: {\n                                position: e.target.value,\n                            },\n                        });\n                    }}\n                >\n                    <Radio.Button value=\"LEFT\">LEFT</Radio.Button>\n                    <Radio.Button value=\"RIGHT\">RIGHT</Radio.Button>\n                    <Radio.Button value=\"CUSTOM\">CUSTOM</Radio.Button>\n                </Radio.Group>\n                {userPosition === 'CUSTOM' && (\n                    <div className=\"custom-position-input\">\n                        <Input\n                            placeholder=\"container\"\n                            value={customPosition}\n                            onChange={(e) => {\n                                setCustomPosition(e.target.value);\n                                if (e.target.value !== '') {\n                                    setBtnActive(true);\n                                }\n                            }}\n                        />\n\n                        <div className=\"hint\">\n                            * If id of element will not be found on the page, default position will\n                            be used\n                        </div>\n\n                        <div\n                            style={{\n                                fontFamily: 'Open Sans',\n                                fontSize: '14px',\n                                fontWeight: 'bold',\n                                letterSpacing: '0.5px',\n                                color: '#0a2540',\n                                marginTop: '19px',\n                            }}\n                        >\n                            Direction of Opening\n                        </div>\n                        <Select\n                            options={[\n                                { label: 'Down', value: 'DOWN' },\n                                { label: 'Up', value: 'UP' },\n                            ]}\n                            styles={CustomDirectionStyle()}\n                            value={customDirection}\n                            onChange={async (e) => {\n                                setCustomDirection(e);\n                                setBtnActive(true);\n                                await updateCustomizerClient({\n                                    variables: {\n                                        customDirection: e.label,\n                                    },\n                                });\n                            }}\n                            width=\"200px\"\n                            height=\"30px\"\n                        />\n                    </div>\n                )}\n\n                {btnActive && (\n                    <Button\n                        children=\"SAVE\"\n                        className={classNames('wf-btn-primary active', { active: btnActive })}\n                        onClick={async (e) => {\n\n                            if (userPosition === 'CUSTOM' && !customPosition) {\n                                message.error('Please enter valid DIV ID.');\n                                return;\n                            }\n\n                            setBtnActive(false);\n\n                            const results = await updateCustomizer({\n                                variables: {\n                                    ...data.me.customizer,\n                                    position: userPosition,\n                                    customDivId: customPosition,\n                                    customDivDirection: customDirection\n                                        ? customDirection.value\n                                        : '',\n                                },\n                            });\n\n                            if (results.data && results.data.updateCustomizer) {\n                                message.success('Successfully saved.');\n                            }\n\n                            setBtnActive(false);\n                        }}\n                        style={{ ...sharedBtnStyles }}\n                    />\n                )}\n            </div>\n        </>\n    );\n};\n\nconst TextComponent = ({}) => {\n    const { data, loading: meLoading } = useMeQuery();\n    const [updateCustomizer] = useCustomizerMutation();\n    const [updateCustomizerClient] = useCustomizerMutationClient();\n\n    const [userText, setUserText] = useState(null);\n    const [btnActive, setBtnActive] = useState(false);\n\n    if (meLoading) return <>Loading...</>;\n\n    let customizer = data && data.me ? data.me.customizer : {};\n\n    if (customizer && userText === null) {\n        setUserText(customizer.text || 'FULL');\n    }\n\n    return (\n        <>\n            <div className=\"customizer-menu-title\">Text</div>\n            <div className=\"customizer-menu-sub-title\">\n                Choose the position of the switcher below\n            </div>\n\n            <div className=\"customizer-menu-group\">\n                <Radio.Group\n                    value={userText}\n                    onChange={async (e) => {\n                        setUserText(e.target.value);\n                        setBtnActive(true);\n                        await updateCustomizerClient({\n                            variables: {\n                                text: e.target.value,\n                            },\n                        });\n                    }}\n                >\n                    <Radio.Button value=\"FULL\">FULL</Radio.Button>\n                    <Radio.Button value=\"SHORTENED\">SHORTENED</Radio.Button>\n                    <Radio.Button value=\"TEXT_ONLY\">TEXT ONLY</Radio.Button>\n                    <Radio.Button value=\"FLAG_ONLY\">FLAG ONLY</Radio.Button>\n                </Radio.Group>\n                {btnActive && (\n                    <Button\n                        children=\"SAVE\"\n                        className={classNames('wf-btn-primary active')}\n                        onClick={async (e) => {\n                            setBtnActive(false);\n\n                            const results = await updateCustomizer({\n                                variables: {\n                                    ...data.me.customizer,\n                                    text: userText,\n                                },\n                            });\n\n                            if (results.data && results.data.updateCustomizer) {\n                                message.success('Successfully saved.');\n                            }\n\n                        }}\n                        style={{ ...sharedBtnStyles }}\n                    />\n                )}\n            </div>\n        </>\n    );\n};\n\nconst LanguagesComponent = ({}) => {\n    const [selectedLanguages, setSelectedLanguages] = useState(null);\n    const [isInitialValues, setIsInitialValues] = useState(true);\n\n    const [btnActive, setBtnActive] = useState(false);\n    const { data: langData, loading: langLoading } = useLanugagesListQuery();\n    const {\n        data: customizerLocalData,\n        lodaing: customizerLocalLoading,\n    } = useCustomizerQueryClient();\n\n    const [updateCustomizerClient] = useCustomizerMutationClient();\n\n    const { data: meData, loading: meLoading } = useMeQuery();\n    const { data: userLanguagesData, loading: userLanguagesLoading } = useUserLanguagesQuery();\n    const [updateCustomizer] = useCustomizerMutation();\n    const [updateTargetLanguages] = useUpdateTargetLanguagesMutation();\n\n    if (meLoading || langLoading || customizerLocalLoading || userLanguagesLoading)\n        return <>Loading...</>;\n\n    let userLanguages =\n        userLanguagesData && userLanguagesData.userLanguages ? userLanguagesData.userLanguages : [];\n    let sourceLanguage = meData.me.sourceLanguage;\n\n    let systemLanguages = langData.languagesList.filter((l) => l.id != sourceLanguage);\n\n    let mappedLangs = mapLanguages(systemLanguages);\n    let customizer = meData && meData.me ? meData.me.customizer : {};\n\n    if (customizer && selectedLanguages === null && isInitialValues) {\n        let selectedTargetLangs = mapLanguages(userLanguages.filter(({ isActive }) => isActive));\n        setSelectedLanguages(selectedTargetLangs);\n    }\n\n    const changeHandler = async (value, action) => {\n        setSelectedLanguages(value);\n        setBtnActive(true);\n        setIsInitialValues(false);\n\n        let mappedValues = value ? value.map((v) => v.value) : [];\n        let removedItems = JSON.parse(JSON.stringify(customizerLocalData.customizer.removedItems));\n\n        if (action.action === 'remove-value') {\n            removedItems.push(action.removedValue.value);\n        }\n\n        removedItems = removedItems.filter((i) => !mappedValues.includes(i));\n        await updateCustomizerClient({\n            variables: {\n                languages: mappedValues,\n                removedItems: removedItems,\n            },\n        });\n    };\n\n    return (\n        <>\n            <div className=\"customizer-menu-title\">Languages</div>\n            <div className=\"customizer-menu-sub-title\">Choose your target languages below </div>\n\n            <div className=\"customizer-menu-group\">\n                <Select\n                    styles={CustomStyle()}\n                    options={mappedLangs}\n                    isLoading={mappedLangs && mappedLangs.length == 0}\n                    isMulti={true}\n                    value={selectedLanguages}\n                    onChange={changeHandler}\n                    width=\"200px\"\n                    placeholder=\"Select languages\"\n                    isClearable={false}\n                />\n                {btnActive && (\n                    <Button\n                        children=\"SAVE\"\n                        className={classNames('wf-btn-primary active')}\n                        onClick={async (e) => {\n                            setBtnActive(false);\n                            let selectedLanguagesIds = selectedLanguages\n                                ? selectedLanguages.map((l) => l.value)\n                                : [];\n\n                            const results = await updateTargetLanguages({\n                                variables: {\n                                    selectedLanguagesIds,\n                                },\n                            });\n\n                            if (results.data && results.data.updateTargetLanguages) {\n                                message.success('Successfully saved.');\n                            } else {\n                                message.warn(\n                                    'An error occured during saving your changes, please try again later.'\n                                );\n                            }\n\n                        }}\n                        style={{ ...sharedBtnStyles }}\n                    />\n                )}\n            </div>\n        </>\n    );\n};\n\nconst AppearanceComponent = ({}) => {\n    const { data, loading: meLoading } = useMeQuery();\n    const [updateCustomizer] = useCustomizerMutation();\n    const [updateCustomizerClient] = useCustomizerMutationClient();\n\n    const [btnActive, setBtnActive] = useState(false);\n\n    const [userBranding, setUserBranding] = useState(null);\n\n    if (meLoading) return <></>;\n\n    let customizer = data && data.me ? data.me.customizer : {};\n\n    if (customizer && userBranding === null) {\n        setUserBranding(customizer.appearance || 'WITH_BRANDING');\n    }\n\n    return (\n        <>\n            <div className=\"customizer-menu-title\">Branding</div>\n            <div className=\"customizer-menu-sub-title\">\n                Choose the position of the switcher below\n            </div>\n\n            <div className=\"customizer-menu-group\">\n                <Radio.Group\n                    value={userBranding}\n                    onChange={async (e) => {\n                        setUserBranding(e.target.value);\n                        setBtnActive(true);\n                        await updateCustomizerClient({\n                            variables: {\n                                branding: e.target.value,\n                            },\n                        });\n                    }}\n                >\n                    <Radio.Button value=\"WITH_BRANDING\">WITH BRANDING</Radio.Button>\n                    <Radio.Button value=\"WITHOUT_BRANDING\">WITHOUT BRANDING</Radio.Button>\n                </Radio.Group>\n                {btnActive && (\n                    <Button\n                        children=\"SAVE\"\n                        className={classNames('wf-btn-primary active')}\n                        onClick={async (e) => {\n                            setBtnActive(false);\n                            const results = await updateCustomizer({\n                                variables: {\n                                    ...data.me.customizer,\n                                    appearance: userBranding,\n                                },\n                            });\n\n                            if (results.data && results.data.updateCustomizer) {\n                                message.success('Successfully saved.');\n                            }\n                        }}\n                        style={{ ...sharedBtnStyles }}\n                    />\n                )}\n            </div>\n        </>\n    );\n};\n\nconst whichComponentToRender = (whichInnerSidebar, setWhichInnerSidebar) => {\n    switch (whichInnerSidebar) {\n        case 0:\n            return <MainComponent setWhichInnerSidebar={setWhichInnerSidebar} />;\n\n        case 1:\n            return <PositionComponent />;\n\n        case 2:\n            return <LanguagesComponent />;\n\n        case 3:\n            return <AppearanceComponent />;\n        case 4:\n            return <TextComponent />;\n    }\n};\n\nconst CustomizerSidebar = ({ openLanguagesComponent }) => {\n    const [updateCustomizerClient] = useCustomizerMutationClient();\n\n    const [whichInnerSidebar, setWhichInnerSidebar] = useState(openLanguagesComponent ? 2 : 0);\n\n    return (\n        <div className=\"customizer-sidebar-wrapper\">\n            <div className=\"go-back\">\n                <GoBack\n                    onClickCB={async (e) => {\n                        if (whichInnerSidebar === 0) {\n                            browserHistory.push('/');\n                        } else {\n                            setWhichInnerSidebar(0);\n                        }\n\n                        await updateCustomizerClient({\n                            variables: { openLanguagesComponent: false },\n                        });\n                    }}\n                    routerHistory={browserHistory}\n                />\n            </div>\n            <div className=\"customizer-menu\">\n                {whichComponentToRender(whichInnerSidebar, setWhichInnerSidebar)}\n            </div>\n        </div>\n    );\n};\n\nexport default CustomizerSidebar;\n","import React, { useEffect, useState } from 'react';\nimport { Rings } from 'svg-loaders-react';\nimport { Layout, Steps } from 'antd';\nimport classNames from 'classnames';\nimport { ReactComponent as Logo } from '../assets/logo.svg';\n\nimport { useMeQuery } from '../rootUseQuery';\nimport { useOnboardingQueryClient } from '../translateStack/onboarding/useQueries';\nimport { Link } from 'react-router-dom';\nimport { useOnboardingMutationClient } from '../translateStack/onboarding/useMutations';\nimport { browserHistory } from '../browserHistory';\nimport { useUpdateUserMutation } from '../user/useMutations';\nimport { auth } from '../signupLogin/auth';\nimport { useCustomizerMutationClient } from '../translateStack/customizer/useMutations';\nimport GoBack from '../components/GoBack';\nimport { ReactComponent as RightArrow } from '../assets/right-arrow-angle.svg';\nimport CustomizerSidebar from './CustomizerSidebar';\nimport LoadingBar from 'react-top-loading-bar';\n\nconst { Sider } = Layout;\nconst { Step } = Steps;\n\nconst HeaderLogo = () => {\n    return (\n        <div\n            className=\"header-logo pointer\"\n            onClick={() => {\n                if (!window.location.pathname.includes('/onboarding')) {\n                    browserHistory.push('/');\n                }\n            }}\n        >\n            <Logo className=\"onboarding-header\" fill=\"#ccc\" />\n        </div>\n    );\n};\n\nconst OnboardingSteps = ({ currentStep, updateOnboardingClient }) => {\n    return (\n        <div className=\"onboarding-wrapper\">\n            {currentStep > 1 && (\n                <GoBack\n                    onClickCB={async (e) => {\n                        await updateOnboardingClient({\n                            variables: { currentStep: currentStep - 1 },\n                        });\n                    }}\n                />\n            )}\n            <div className=\"onboarding-title\">Your integration guide</div>\n            <div className=\"onboarding-steps\">\n                <Steps progressDot current={currentStep - 1} direction=\"vertical\">\n                    <Step\n                        title=\"Source Language\"\n                        onClick={async (e) => {\n                            await updateOnboardingClient({\n                                variables: { currentStep: 1 },\n                            });\n                        }}\n                        style={{\n                            cursor: 'pointer',\n                        }}\n                    />\n                    <Step\n                        title=\"Targeted Languages\"\n                        onClick={async (e) => {\n                            await updateOnboardingClient({\n                                variables: { currentStep: 2 },\n                            });\n                        }}\n                        style={{\n                            cursor: 'pointer',\n                        }}\n                    />\n                    <Step\n                        title=\"Your Domain\"\n                        onClick={async (e) => {\n                            await updateOnboardingClient({\n                                variables: { currentStep: 3 },\n                            });\n                        }}\n                        style={{\n                            cursor: 'pointer',\n                        }}\n                    />\n                    <Step\n                        title=\"Installation\"\n                        onClick={async (e) => {\n                            await updateOnboardingClient({\n                                variables: { currentStep: 4 },\n                            });\n                        }}\n                        style={{\n                            cursor: 'pointer',\n                        }}\n                    />\n                </Steps>\n            </div>\n        </div>\n    );\n};\n\nconst Sidebar = ({ isOpenCustomizer, openLanguagesComponent }) => {\n    const { data, loading, error } = useMeQuery();\n    const { data: onboardingData } = useOnboardingQueryClient();\n    const [updateUser] = useUpdateUserMutation();\n    const [updateOnboardingClient] = useOnboardingMutationClient();\n    const [updateCustomizerClient] = useCustomizerMutationClient();\n    let [activeMenu, setActiveMenu] = useState('Projects');\n    const [progress, setProgress] = useState(70);\n\n    useEffect(() => {\n        if (loading) {\n            setProgress(100);\n        }\n        return () => {\n            setProgress(0);\n        };\n    }, []);\n\n    if (loading) {\n        return (\n            <LoadingBar\n                color=\"#a172ff\"\n                progress={progress}\n                onLoaderFinished={() => setProgress(0)}\n            />\n        );\n    }\n\n    const {\n        me: { isNew, skippedOnboarding, pages },\n    } = data;\n\n    let currentStep =\n        onboardingData && onboardingData.onboarding ? onboardingData.onboarding.currentStep : 1;\n\n    return (\n        <Sider\n            width={\n                (isNew &&\n                    !skippedOnboarding &&\n                    browserHistory.location.pathname.includes('onboarding')) ||\n                isOpenCustomizer\n                    ? 323\n                    : 205\n            }\n            className=\"sidebar-wrapper\"\n        >\n            <HeaderLogo />\n            {isNew &&\n            !skippedOnboarding &&\n            browserHistory.location.pathname.includes('onboarding') ? (\n                <OnboardingSteps\n                    currentStep={currentStep}\n                    updateOnboardingClient={updateOnboardingClient}\n                />\n            ) : isOpenCustomizer ? (\n                <CustomizerSidebar openLanguagesComponent={openLanguagesComponent} />\n            ) : (\n                <div className=\"menu-wrapper\">\n                    <div\n                        className={classNames('menu-item', {\n                            activeMenu: activeMenu === 'Projects',\n                        })}\n                    >\n                        <Link\n                            to=\"/\"\n                            title=\"Projects\"\n                            onClick={(e) => setActiveMenu('Projects')}\n                            className={classNames({\n                                activeLink: activeMenu === 'Projects',\n                            })}\n                        >\n                            Projects\n                        </Link>\n                    </div>\n                    {isNew && (\n                        <div className=\"menu-item\">\n                            <Link\n                                title=\"Setup\"\n                                onClick={async (e) => {\n                                    await updateOnboardingClient({ variables: { currentStep: 1 } });\n                                    await updateUser({ variables: { skippedOnboarding: false } });\n                                    browserHistory.push('/onboarding');\n                                }}\n                            >\n                                Setup\n                                <Rings\n                                    style={{\n                                        width: '20px',\n                                        height: '20px',\n                                        stroke: '#9966ff',\n                                        verticalAlign: 'middle',\n                                    }}\n                                />\n                            </Link>\n                        </div>\n                    )}\n\n                    <div className=\"menu-item\">\n                        <Link\n                            to=\"#\"\n                            title=\"Customizer\"\n                            onClick={async (e) => {\n                                setActiveMenu('Projects');\n                                e.preventDefault();\n                                await updateCustomizerClient({ variables: { isOpen: true } });\n                                browserHistory.push('/customizer');\n                            }}\n                        >\n                            Customizer\n                        </Link>\n                    </div>\n\n                    <div className=\"bottom-items\">\n                        <div\n                            className={classNames('menu-item', {\n                                activeMenu: activeMenu === 'Settings',\n                            })}\n                        >\n                            <Link\n                                to=\"/settings\"\n                                title=\"Settings\"\n                                onClick={(e) => setActiveMenu('Settings')}\n                                className={classNames({\n                                    activeLink: activeMenu === 'Settings',\n                                })}\n                            >\n                                Settings\n                            </Link>\n                        </div>\n                        <div className=\"menu-item\">\n                            <Link\n                                to=\"#\"\n                                title=\"Log out\"\n                                onClick={(e) => {\n                                    e.preventDefault();\n                                    auth.removeAccessToken();\n                                    window.location.reload();\n                                }}\n                            >\n                                Log out\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </Sider>\n    );\n};\n\nexport default Sidebar;\n","import { Layout } from 'antd'\n\nconst Content = Layout.Content\n\nexport default Content","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Result } from 'antd';\n\nconst PageNotFound = ({ location }) => (\n\t<div>\n\t\t<Result\n\t\t\tstatus=\"500\"\n\t\t\ttitle=\"404\"\n\t\t\tsubTitle=\"Sorry, the page you visited does not exist.\"\n\t\t\textra={<Link to=\"/\">Back Home</Link>}\n\t\t/>\n\t</div>\n);\n\nexport default PageNotFound;\n","import React, { useEffect, useState } from 'react';\nimport LoadingBar from 'react-top-loading-bar';\n\nconst PageLayout = ({\n    history,\n    Component,\n    title,\n    isNew,\n    skippedOnboarding,\n    isOpenCustomizer,\n    ...rest\n}) => {\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        if (loading) {\n            setLoading(false);\n        }\n    }, []);\n\n    if (loading) {\n        return (\n            <LoadingBar\n                color=\"#a172ff\"\n                progress={50}\n            />\n        );\n    }\n    if (isOpenCustomizer) {\n        return (\n            <div className=\"customizer-page-layout\">\n                <Component routerHistory={history} isNew={isNew} {...rest} />\n            </div>\n        );\n    } else if (isNew && !skippedOnboarding) {\n        return (\n            <div className=\"onboarding-page-layout\">\n                <Component routerHistory={history} isNew={isNew} {...rest} />\n            </div>\n        );\n    } else\n        return (\n            <div className=\"page-layout\">\n                {/* <h1 className=\"page-title\">{title}</h1> */}\n                <Component routerHistory={history} isNew={isNew} {...rest} />\n            </div>\n        );\n};\n\nexport default PageLayout;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M238.933,0C106.974,0,0,106.974,0,238.933s106.974,238.933,238.933,238.933s238.933-106.974,238.933-238.933 C477.726,107.033,370.834,0.141,238.933,0z M370.466,165.666L199.799,336.333c-6.665,6.663-17.468,6.663-24.132,0l-68.267-68.267 c-6.78-6.548-6.968-17.352-0.42-24.132c6.548-6.78,17.352-6.968,24.132-0.42c0.142,0.138,0.282,0.277,0.42,0.42l56.201,56.201 l158.601-158.601c6.78-6.548,17.584-6.36,24.132,0.419C376.854,148.567,376.854,159.052,370.466,165.666z\"\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgCheck = (_ref) => {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 477.867 477.867\",\n    style: {\n      enableBackground: \"new 0 0 477.867 477.867\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(SvgCheck, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/check.ae3629cc.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { Link as RLink } from 'react-router-dom';\nimport classnames from 'classnames';\n\nconst Link = ({ label, to, blackLink, style, onClick }) => {\n\treturn (\n\t\t<RLink\n\t\t\tto={to}\n\t\t\tonClick={onClick}\n\t\t\tclassName={classnames('btn-link', { black: blackLink })}\n\t\t\tstyle={style}\n\t\t>\n\t\t\t{label}\n\t\t</RLink>\n\t);\n};\n\nexport default Link;\n","import React, { useLayoutEffect } from 'react';\nimport { auth } from '../signupLogin/auth';\nimport { ReactComponent as Logo } from '../assets/logo.svg';\nimport centerLogo from '../assets/imgs/signupLogin/icon-bubble.png';\nimport { ReactComponent as CheckLogo } from '../assets/check.svg';\nimport Link from '../form/components/Link';\n\nconst AuthPageLayout = ({ history, Component, title, headerLink, ...rest }) => {\n    useLayoutEffect(() => {\n        const token = auth.getAccessToken();\n        if (token !== null) {\n            history.push('/');\n        }\n    }, []);\n\n    console.log(\"enters AuthPageLayout\");\n    return (\n        <div className=\"auth-page-layout\">\n            <div\n                style={{\n                    width: '50%',\n                    height: '100%',\n                    backgroundColor: '#FCFDFE',\n                    border: 'solid 1px rgba(227, 232, 238, 0.42)',\n                    paddingLeft: '49px',\n                    paddingTop: '18px',\n                }}\n            >\n                <Logo />\n                <div\n                    className=\"center-logo\"\n                    style={{\n                        marginTop: '200px',\n                        marginLeft: '-49px',\n                        marginTop: '200px',\n                        display: 'flex',\n                        justifyContent: 'center',\n                    }}\n                >\n                    <img src={centerLogo} width=\"50%\" style={{ marginLeft: '-10%' }} />\n                </div>\n                <div\n                    className=\"features\"\n                    style={{\n                        marginLeft: '8.7vw',\n                        fontFamily: 'Open Sans',\n                        fontSize: '18px',\n                        lineHeight: '1.67',\n                        color: '#4d5e6e',\n                        marginTop: '71px',\n                    }}\n                >\n                    <div style={{ marginBottom: '24px' }}>\n                        <CheckLogo\n                            width={'17px'}\n                            height={'17px'}\n                            fill=\"rgba(153, 102, 255, 0.38)\"\n                        />\n                        <span style={{ marginLeft: '13px' }}>Sign Up for free</span>\n                    </div>\n\n                    <div style={{ marginBottom: '24px' }}>\n                        <CheckLogo\n                            width={'17px'}\n                            height={'17px'}\n                            fill=\"rgba(153, 102, 255, 0.38)\"\n                        />\n                        <span style={{ marginLeft: '13px' }}>Scalable to your needs</span>\n                    </div>\n\n                    <div>\n                        <CheckLogo\n                            width={'17px'}\n                            height={'17px'}\n                            fill=\"rgba(153, 102, 255, 0.38)\"\n                        />\n                        <span style={{ marginLeft: '13px' }}>\n                            Encrypted service with SSL connection\n                        </span>\n                    </div>\n                </div>\n                <div\n                    className=\"auth-footer\"\n                    style={{\n                        marginLeft: '8.7vw',\n                        position: 'absolute',\n                        bottom: '38px',\n                        fontSize: '12px',\n                        color: '#0a2540',\n                    }}\n                >\n                    <span>translatestack 2020</span>\n                    <span style={{ paddingLeft: '44px' }}>Terms & Conditions</span>\n                </div>\n            </div>\n\n            <div class=\"auth-page-container\">\n                {headerLink && (\n                    <Link\n                        label={\n                            <div\n                                style={{\n                                    position: 'absolute',\n                                    right: '57px',\n                                    top: '38px',\n                                    float: 'none',\n                                    color: '#0a2540',\n                                    fontSize: '14px',\n                                    opacity: '0.37',\n                                    fontWeight: 'bold',\n                                }}\n                            >\n                                {headerLink.title}\n                            </div>\n                        }\n                        to={headerLink.to}\n                    ></Link>\n                )}\n                <h1 style={{ fontWeight: '700' }}>{title}</h1>\n                <Component routerHistory={history} {...rest} />\n            </div>\n        </div>\n    );\n};\n\nexport default AuthPageLayout;\n","import React from \"react\";\nimport { useField, Field } from \"formik\";\nimport { Input } from \"antd\";\nimport classNames from \"classnames\";\nimport Icon from \"@ant-design/icons/lib/components/Icon\";\n\nconst InputField = ({ label, iconType, ...props }) => {\n\tconst [field, meta, helpers] = useField(props);\n\treturn (\n\t\t<div className=\"input-field-wrapper\">\n\t\t\t<div className=\"form-label\">{label}</div>\n\t\t\t{meta.touched && meta.error && (\n\t\t\t\t<span className=\"error-message\">{meta.error}</span>\n\t\t\t)}\n\t\t\t<Input\n\t\t\t\tsize=\"large\"\n\t\t\t\t{...field}\n\t\t\t\t{...props}\n\t\t\t\tprefix={<Icon type={iconType} />}\n\t\t\t\tclassName={classNames({ required: meta.touched && meta.error })}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default InputField;\n","import gql from \"graphql-tag\";\n\nexport const LOGIN_USER_MUTATION = gql`\n\tmutation login($email: String!, $password: String!) {\n\t\tlogin(email: $email, password: $password) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\tid\n\t\t\t\trole\n\t\t\t\temail\n\t\t\t\tfullName\n\t\t\t\tisNew\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const setUserDataMutation = gql`\n\tmutation setUserData($fullName: String!, $id: ID!, $email: String!, $role: UserRole!, $isNew: Boolean!) {\n\t\tsetUserData(fullName: $fullName, id: $id, email: $email, role: $role, isNew: $isNew) @client {\n\t\t\tfullName\n\t\t\tid\n\t\t\temail\n\t\t\trole\n\t\t\tisNew\n\t\t}\n\t}\n`;\n","import { message } from \"antd\";\n\nexport const showAllGraphQLErrors = errors => {\n\tfor (const error of errors) {\n\t\tmessage.error(error.message);\n\t}\n};\n","export const ROLES = {\n    ADMIN: 'ADMIN',\n}","import React from 'react';\nimport { Row, Icon } from 'antd';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport classNames from 'classnames';\nimport InputField from '../../../form/components/InputField';\nimport Button from '../../../form/components/Button';\nimport Link from '../../../form/components/Link';\nimport { useLogin } from '../useLogin';\nimport { showAllGraphQLErrors } from '../../../helper/graphqlErrors';\nimport { auth } from '../../auth';\nimport { isAdmin } from '../../utils';\n\nconst initialValues = {\n    email: '',\n    password: '',\n};\n\nconst loginSchema = Yup.object().shape({\n    email: Yup.string().email(\"Please enter valid email\").required('*Required'),\n    password: Yup.string().required('*Required'),\n});\n\nconst Login = ({ routerHistory }) => {\n    const [login] = useLogin();\n    return (\n        <div className=\"login-wrapper\">\n            <Formik\n                initialValues={initialValues}\n                validationSchema={loginSchema}\n                onSubmit={async (values, { setSubmitting }) => {\n                    try {\n                        const result = await login({ variables: { ...values } });\n                        if (result) {\n                            auth.logIn(result.data.login.token);\n                            if (isAdmin(result.data.login.user.role))\n                                // and first time\n                                window.location.assign('/onboarding');\n                            else {\n                                // go to dashboard\n                                window.location.assign('/home');\n                            }\n                        }\n                    } catch (error) {\n                        setSubmitting(false);\n                        showAllGraphQLErrors(error.graphQLErrors);\n                    }\n                }}\n            >\n                {({ values, isSubmitting, dirty, errors }) => (\n                    <Form>\n                        <Row className=\"auth-row\">\n                            <InputField name=\"email\" type=\"text\" label=\"Email\" />\n                        </Row>\n                        <Row className=\"auth-row\">\n                            <InputField name=\"password\" type=\"password\" label=\"Password\" />\n                        </Row>\n                        <Row className=\"forgot-pwd-link\">\n                            <p>\n                                <Link to=\"/reset-password\" label=\"Forgot your password?\" />\n                            </p>\n                        </Row>\n                        <Row>\n                            <Button\n                                htmlType=\"submit\"\n                                type=\"primary\"\n                                disabled={isSubmitting}\n                                className={classNames('wf-btn-primary', {\n                                    active: dirty && Object.keys(errors).length === 0,\n                                })}\n                            >\n                                {isSubmitting ? 'LOGGING IN...' : <>LOG IN</>}\n                            </Button>\n                        </Row>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n};\n\nexport default Login;\n","import { useMutation } from '@apollo/react-hooks'\nimport { LOGIN_USER_MUTATION } from './gql'\n\nexport const useLogin = () => useMutation(LOGIN_USER_MUTATION)","import { ROLES } from \"./constants\";\n\nexport const isAdmin = role => role === ROLES.ADMIN;\n","import React, { useEffect, useState } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { auth } from '../signupLogin/auth';\n\nconst hasAccess = (roles, userRole) => {\n    return roles.includes(userRole);\n};\n\nconst ProtectedRoute = ({ component: Component, userRole, isNew, roles, ...rest }) => {\n    const token = auth.getAccessToken();\n    const [isAuth, setIsAuth] = useState(false);\n    let isAuthorizedToAccess;\n    let isSkippedOnboarding = false;\n    useEffect(() => {\n        setIsAuth(hasAccess(roles, userRole));\n    }, [roles, userRole]);\n\n    console.log(\"enters ProtectedRoute\");\n\n    return token ? (\n        <Route {...rest} render={(matchProps) => <Component {...matchProps} />} />\n    ) : (\n        <Redirect to=\"/login\" />\n    );\n};\n\nexport default ProtectedRoute;\n","import gql from \"graphql-tag\";\n\nexport const signupMutation = gql`\n\tmutation signupMutation($fullName: String!, $email: String!, $password: String!) {\n\t\tsignup(fullName: $fullName, email: $email, password: $password) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t\trole\n\t\t\t\temail\n\t\t\t\tisNew\n\t\t\t}\n\t\t}\n\t}\n`;","import React from 'react';\nimport { useField, Field } from 'formik';\nimport classNames from 'classnames';\n\nconst Checkbox = ({ label, iconType, ...props }) => {\n    const [field, meta, helpers] = useField(props);\n    return (\n        <div className=\"checkbox-field-wrapper\">\n            <div className=\"checkbox-input\">\n                <input\n                    type=\"checkbox\"\n                    {...field}\n                    {...props}\n                    className={classNames({ required: meta.touched && meta.error })}\n                />\n            </div>\n            <div className=\"form-label\">{label}</div>\n        </div>\n    );\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport { Row, Icon, Layout, Col } from 'antd';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport classNames from 'classnames';\nimport InputField from '../../../form/components/InputField';\nimport Button from '../../../form/components/Button';\nimport { useSignup } from '../useMutations';\nimport { auth } from '../../auth';\nimport { showAllGraphQLErrors } from '../../../helper/graphqlErrors';\nimport { ROUTE_PATHS } from '../../../routes';\nimport Checkbox from '../../../form/components/Checkbox';\n\nconst initialValues = {\n    email: '',\n    password: '',\n    fullName: '',\n    role: 'ADMIN',\n    termsAndConditions: false,\n};\n\nconst signupSchema = Yup.object().shape({\n    email: Yup.string().email(\"Please enter valid email\").required('*Required'),\n    password: Yup.string().required('*Required'),\n    fullName: Yup.string().required('*Required'),\n    termsAndConditions: Yup.boolean().oneOf([true]),\n});\n\nconst Signup = ({ routerHistory, role }) => {\n    const [signup] = useSignup();\n    if (role) {\n        initialValues.role = role;\n    }\n    return (\n        <div className=\"login-wrapper\">\n            <Formik\n                initialValues={initialValues}\n                validationSchema={signupSchema}\n                onSubmit={async (values, { setSubmitting }) => {\n                    try {\n                        const result = await signup({\n                            variables: {\n                                fullName: values.fullName,\n                                email: values.email,\n                                password: values.password,\n                            },\n                        });\n                        if (result) {\n                            auth.setAccessToken(result.data.signup.token);\n                            window.location.assign(ROUTE_PATHS.app.onboarding);\n                        }\n                    } catch (error) {\n                        setSubmitting(false);\n                        showAllGraphQLErrors(error.graphQLErrors);\n                    }\n                }}\n            >\n                {(props) => {\n                    const { values, isSubmitting, dirty, errors } = props;\n                    return (\n                        <Form>\n                            <Row className=\"auth-row\">\n                                <InputField name=\"email\" type=\"text\" label=\"Email\" placeholder=\"\" />\n                            </Row>\n\n                            <Row className=\"auth-row\">\n                                <InputField\n                                    name=\"fullName\"\n                                    type=\"text\"\n                                    label=\"Full Name\"\n                                    placeholder=\"\"\n                                />\n                            </Row>\n\n                            <Row className=\"auth-row\">\n                                <InputField\n                                    name=\"password\"\n                                    type=\"password\"\n                                    label=\"Password\"\n                                    placeholder=\"\"\n                                />\n                            </Row>\n\n                            <Row className=\"auth-row\">\n                                <Checkbox\n                                    name=\"termsAndConditions\"\n                                    type=\"checkbox\"\n                                    label=\"Ich möchte keine E-Mails zu Produktaktualisierungen erhalten. Sofern Sie dieses Feld nicht markieren, erhalten Sie gelegentlich hilfreiche und für Sie relevante E-Mails von Stripe. Sie können sich jedoch jederzeit abmelden. Privacy Policy.\"\n                                />\n                            </Row>\n\n                            <Row>\n                                <Button\n                                    htmlType=\"submit\"\n                                    type=\"primary\"\n                                    disabled={isSubmitting}\n                                    className={classNames('wf-btn-primary', {\n                                        active: dirty && Object.keys(errors).length === 0,\n                                    })}\n                                >\n                                    {isSubmitting ? 'SIGNING UP...' : <>CREATE ACCOUNT</>}\n                                </Button>\n                            </Row>\n                        </Form>\n                    );\n                }}\n            </Formik>\n        </div>\n    );\n};\n\nexport default Signup;\n","import { useMutation } from \"@apollo/react-hooks\";\nimport { signupMutation } from \"./gql\";\n\nexport const useSignup = () => useMutation(signupMutation);\n","import React from 'react';\nimport { Row, Icon } from 'antd';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport classNames from 'classnames';\nimport InputField from '../../../form/components/InputField';\nimport Button from '../../../form/components/Button';\nimport { showAllGraphQLErrors } from '../../../helper/graphqlErrors';\n\nconst initialValues = {\n    email: '',\n};\n\nconst resetPasswordSchema = Yup.object().shape({\n    email: Yup.string().email(\"Please enter valid email\").required('*Required'),\n});\n\nconst ResetPassword = ({ routerHistory }) => {\n    // const [login] = useLogin();\n    return (\n        <div className=\"login-wrapper\">\n            <p\n                style={{\n                    fontFamily: 'Open Sans',\n                    fontWeight: 'bold',\n                    fontSize: '12px',\n                    color: '#9966ff',\n                    cursor: 'pointer',\n                    marginBottom: '21px',\n                }}\n                onClick={() => routerHistory.goBack()}\n            >\n                &lt; GO BACK\n            </p>\n            <Formik\n                initialValues={initialValues}\n                validationSchema={resetPasswordSchema}\n                onSubmit={async (values, { setSubmitting }) => {\n                    try {\n                        // const result = await login({ variables: { ...values } });\n                        // if (result) {\n                        //     auth.logIn(result.data.login.token);\n                        //     if (\n                        //         isAdmin(result.data.login.user.role)\n                        //     )\n                        //         window.location.assign('/discover');\n                        //     else {\n                        //         window.location.assign('/discover');\n                        //     }\n                        // }\n                    } catch (error) {\n                        setSubmitting(false);\n                        showAllGraphQLErrors(error.graphQLErrors);\n                    }\n                }}\n            >\n                {({ values, isSubmitting, dirty, errors }) => (\n                    <Form>\n                        <Row className=\"auth-row\">\n                            <InputField name=\"email\" type=\"text\" label=\"Email\" />\n                        </Row>\n                        <Row>\n                            <Button\n                                htmlType=\"submit\"\n                                type=\"primary\"\n                                disabled={isSubmitting}\n                                className={classNames('wf-btn-primary', {\n                                    active: dirty && Object.keys(errors).length === 0,\n                                })}\n                                style={{ marginTop: '19px' }}\n                            >\n                                {isSubmitting ? 'SENDING...' : <>SEND EMAIL</>}\n                            </Button>\n                        </Row>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n};\n\nexport default ResetPassword;\n","import React from 'react';\nimport { useLanugagesListQuery } from '../../rootUseQuery';\nimport { useUserLanguagesQuery } from '../../user/useQueries';\n\n\nexport const getLanguagesList = () => {\n    const { data, loading, error } = useLanugagesListQuery();\n\n    if (error) {\n        return;\n    }\n\n    if (loading) {\n        return [];\n    }\n\n    const { languagesList } = data;\n\n    return languagesList.map((language) => ({\n        label: (\n            <div\n                style={{\n                    fontSize: '14px',\n                    color: '#0a2540',\n                    marginRight: '25px',\n                }}\n            >\n                <img\n                    src={language.flag}\n                    style={{ width: '23px', height: '23px', borderRadius: '50px' }}\n                />\n                <span style={{ marginLeft: '13px' }}>{language.language}</span>\n            </div>\n        ),\n        value: language.id,\n    }));\n};\n\nexport const getUserLangaugesList = () => {\n    const { data, loading, error} = useUserLanguagesQuery();\n\n    if (error) {\n        return;\n    }\n\n    if (loading) {\n        return [];\n    }\n\n    const { userLanguages } = data;\n\n    return userLanguages\n        .filter(({ isActive }) => isActive)\n        .map(({ Language }) => ({\n            label: (\n                <div\n                    style={{\n                        fontSize: '14px',\n                        color: '#0a2540',\n                        marginRight: '25px',\n                    }}\n                >\n                    <img\n                        src={Language.flag}\n                        style={{ width: '23px', height: '23px', borderRadius: '50px' }}\n                    />\n                    <span style={{ marginLeft: '13px' }}>{Language.language}</span>\n                </div>\n            ),\n            value: Language.id,\n        }));\n};\n","export const copyToClipboard = (wrapperId) => {\n    var element = document.getElementById(wrapperId);\n\n    // Change selected area\n    var r = document.createRange();\n    r.selectNode(element);\n    var s = window.getSelection();\n    s.removeAllRanges();\n    s.addRange(r);\n    // Copy - requires clipboardWrite permission + crbug.com/395376 must be fixed\n    document.execCommand('copy');\n};\n","import React, { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport { message } from 'antd';\nimport { Grid } from 'svg-loaders-react';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport classNames from 'classnames';\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx';\nimport { dark } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport { getLanguagesList, getUserLangaugesList } from '../../../assets/js/languages';\nimport Button from '../../../form/components/Button';\nimport Input from '../../../form/components/Input';\nimport Link from '../../../form/components/Link';\nimport { useOnboardingMutationClient } from '../useMutations';\nimport { useOnboardingQueryClient } from '../useQueries';\nimport { useOnboardingMutation, useUpdateUserMutation } from '../../../user/useMutations';\nimport { Redirect } from 'react-router-dom';\nimport { copyToClipboard } from '../../../utils/generalUtils';\nimport { useLanugagesListQuery, useMeQuery } from '../../../rootUseQuery';\nimport { useUpdateTargetLanguagesMutation } from '../../customizer/useMutations';\n\nSyntaxHighlighter.registerLanguage('jsx', jsx);\n\nconst OnboardinButton = ({ disabled = false, label, isActive, ...props }) => {\n    return (\n        <Button\n            children={label}\n            className={classNames('wf-btn-primary', { active: isActive })}\n            disabled={disabled}\n            style={{\n                height: '45px',\n                borderRadius: '4px',\n                boxShadow: '0 2px 20px -5px #e8eaef',\n                backgroundColor: '#a172ff',\n            }}\n            {...props}\n        />\n    );\n};\n\nconst CustomStyle = () => {\n    return {\n        option: (base, data) => {\n            return { ...base };\n        },\n        menu: (provided, state) => ({\n            ...provided,\n            width: state.selectProps.width,\n            borderBottom: '1px dotted pink',\n            color: state.selectProps.menuColor,\n            padding: 20,\n        }),\n        container: (base, { selectProps: { width, height } }) => ({\n            ...base,\n            width: width,\n            marginTop: '33px',\n            minHeight: '83px',\n            height: '83px',\n        }),\n        control: (base, state) => ({\n            ...base,\n            minHeight: '83px',\n            border: 'solid 1px rgba(227, 232, 238, 0.42)',\n            borderRadius: '2px',\n        }),\n        indicatorSeparator: (base, state) => ({\n            ...base,\n            display: 'none',\n        }),\n        placeholder: (defaultStyles) => {\n            return {\n                ...defaultStyles,\n                color: '#0a2540',\n                marginLeft: '15px',\n            };\n        },\n        multiValue: (base, state) => ({\n            ...base,\n            height: '47px',\n            borderRadius: '3px',\n            border: 'solid 1px rgba(227, 232, 238, 0.42)',\n            backgroundColor: 'rgba(227, 232, 238, 0.42)',\n            paddingLeft: '13px',\n            paddingTop: '10px',\n            paddingBottom: '8px',\n        }),\n        singleValue: (base, state) => ({\n            ...base,\n            height: '47px',\n            borderRadius: '3px',\n            border: 'solid 1px rgba(227, 232, 238, 0.42)',\n            backgroundColor: 'rgba(227, 232, 238, 0.42)',\n            paddingLeft: '13px',\n            paddingTop: '10px',\n            paddingBottom: '8px',\n        }),\n    };\n};\n\nconst SourceLanguageStep = ({\n    currentStep,\n    onboardingMutation,\n    setSourceLanguages,\n    sourceLanguage,\n    storedSourceLanguageId,\n}) => {\n    const [currentLang, setCurrent] = useState(null);\n\n    const changeHandler = (value) => {\n        setCurrent(value);\n        setSourceLanguages(value);\n    };\n\n    const languagesList = getLanguagesList();\n    const sourceLanguageExists = languagesList.filter((l) => l.value === storedSourceLanguageId);\n\n    useEffect(() => {\n        if (\n            sourceLanguageExists &&\n            sourceLanguageExists.length &&\n            sourceLanguageExists[0] &&\n            !currentLang\n        ) {\n            setCurrent(sourceLanguageExists);\n            setSourceLanguages(sourceLanguageExists);\n        }\n    });\n\n    return (\n        <div className=\"onboarding-step-wrapper\">\n            <div className=\"onboarding-step-count\">{currentStep} out of 4</div>\n            <div className=\"onboarding-step-title\">Choose your source and target languages</div>\n            <div className=\"onboarding-step-description\">\n                Select the source language of your website.\n            </div>\n            <div style={{ marginBottom: '26px' }}>\n                <Select\n                    styles={CustomStyle(currentLang)}\n                    options={languagesList}\n                    isLoading={languagesList && languagesList.length == 0}\n                    loadingMessage=\"Loading...\"\n                    isMulti={false}\n                    value={currentLang}\n                    onChange={changeHandler}\n                    width=\"517px\"\n                    placeholder=\"Select source language\"\n                    isClearable={false}\n                />\n            </div>\n            <div>\n                <OnboardinButton\n                    disabled={!sourceLanguage && !sourceLanguageExists}\n                    isActive={!!sourceLanguage || sourceLanguageExists}\n                    onClick={async () => {\n                        await onboardingMutation({ variables: { currentStep: currentStep + 1 } });\n                    }}\n                    label=\"NEXT\"\n                />\n            </div>\n        </div>\n    );\n};\n\nconst TargetLanguagesStep = ({\n    currentStep,\n    onboardingMutation,\n    selectedLanguages,\n    setSelectedLanguages,\n    sourceLanguage,\n}) => {\n    const languagesList = getLanguagesList();\n    const userLanguages = getUserLangaugesList();\n    const [currentSelected, setCurrentSelected] = useState(null);\n\n    const changeHandler = (value) => {\n        if (value === null) {\n            value = [];\n        }\n        setCurrentSelected(value);\n        setSelectedLanguages(value);\n    };\n\n    useEffect(() => {\n        if (userLanguages && userLanguages.length && userLanguages[0] && !currentSelected) {\n            setCurrentSelected(userLanguages);\n            setSelectedLanguages(userLanguages);\n        }\n    });\n\n    console.log('sourceLanguage', sourceLanguage);\n\n    return (\n        <div className=\"onboarding-step-wrapper\">\n            <div className=\"onboarding-step-count\">{currentStep} out of 4</div>\n            <div className=\"onboarding-step-title\">Choose your source and target languages</div>\n            <div className=\"onboarding-step-description\">\n                Select the languages that your website should be translated to. You can always add\n                languages later, too.\n            </div>\n            <div style={{ marginBottom: '26px' }}>\n                <Select\n                    styles={CustomStyle(selectedLanguages)}\n                    options={\n                        languagesList.filter(\n                            (lang) =>\n                                lang.value !==\n                                (sourceLanguage && sourceLanguage.length\n                                    ? sourceLanguage[0].value\n                                    : sourceLanguage.value)\n                        )\n                        // .filter((l) => !userLanguagesIds.includes(l.value))}\n                    }\n                    isLoading={languagesList && languagesList.length == 0}\n                    // loadingMessage=\"Loading...\"\n                    isMulti={true}\n                    value={currentSelected}\n                    onChange={changeHandler}\n                    width=\"517px\"\n                    placeholder=\"Select target languages\"\n                    isDisabled={languagesList && languagesList.length == 0}\n                />\n            </div>\n            <div>\n                <OnboardinButton\n                    isActive={selectedLanguages && selectedLanguages.length > 0}\n                    disabled={\n                        selectedLanguages == null ||\n                        (selectedLanguages && selectedLanguages.length === 0)\n                    }\n                    onClick={async () => {\n                        await onboardingMutation({ variables: { currentStep: currentStep + 1 } });\n                    }}\n                    label=\"NEXT\"\n                />\n            </div>\n        </div>\n    );\n};\nconst Step2 = ({ currentStep, onboardingMutation, pageUrl, setPageUrl }) => {\n    return (\n        <div className=\"onboarding-step-wrapper\">\n            <div className=\"onboarding-step-count\">{currentStep} out of 4</div>\n            <div className=\"onboarding-step-title\">Enter your domain</div>\n            <div className=\"onboarding-step-description\">\n                Enter the URL of your project and get started translating your page within minutes.\n                Make sure it is a valid URL.\n            </div>\n            <div style={{ marginBottom: '26px', marginTop: '33px' }}>\n                <Input\n                    placeholder=\"https://yourwebsite.com\"\n                    value={pageUrl}\n                    onChange={(e) => {\n                        setPageUrl(e.target.value);\n                    }}\n                />\n            </div>\n            <div>\n                <OnboardinButton\n                    isActive={!!pageUrl}\n                    disabled={!pageUrl}\n                    onClick={async () => {\n                        if (/^(http|https):\\/\\/[^ \"]+$/.test(pageUrl)) {\n                            await onboardingMutation({\n                                variables: { currentStep: currentStep + 1 },\n                            });\n                        } else {\n                            message.error('Please enter a valie static page url');\n                        }\n                    }}\n                    label=\"ADD\"\n                />\n            </div>\n        </div>\n    );\n};\n\nconst Step3 = ({\n    currentStep,\n    onboardingMutation,\n    pageUrl,\n    isValidating,\n    setIsValidating,\n    selectedLanguages,\n    hasError,\n    setHasError,\n    routerHistory,\n    apiKey,\n    sourceLanguage,\n}) => {\n    const [onboarding] = useOnboardingMutation();\n    const [updateUser] = useUpdateUserMutation();\n    const [updateTargetLanguages] = useUpdateTargetLanguagesMutation();\n\n    return (\n        <div className=\"onboarding-step-wrapper last\">\n            <div className=\"onboarding-step-count last\">{currentStep} out of 4</div>\n            <div className=\"onboarding-step-title last\">Final Set up</div>\n            <div className=\"onboarding-step-description last\">\n                This is your unique code snippet. Copy & paste it and place in in the head of your\n                project. Only after this step you are able to get started.\n            </div>\n            <div className=\"onboarding-step-code-wrapper\">\n                <div className=\"onboarding-step-code\">\n                    <Button children=\"COPY\" onClick={(e) => copyToClipboard('code-snippet')} />\n                    <SyntaxHighlighter language=\"javascript\" style={dark} id=\"code-snippet\">\n                        {`\n    <script type=\"text/javascript\">\n        var tsstack = function () {\n            var tss = document.createElement('script'); tss.type = 'text/javascript'; tss.async = true;\n            tss.src = 'https://app.translatestack.com/sdk/sdk.js?apiKey=${apiKey}';\n            tss.id = \"tss-script\";\n            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(tss);\n        }\n        window.onload = tsstack\n    </script>`}\n                    </SyntaxHighlighter>\n                </div>\n            </div>\n            <div className=\"onboarding-step-title\">Test your setup</div>\n            <div className=\"onboarding-step-description last\">\n                Let's validate if the code snippet is placed correctly in the head of your project.\n                You are one click away to start translating.\n            </div>\n            <div>\n                <OnboardinButton\n                    isActive={true}\n                    onClick={async () => {\n                        setIsValidating(true);\n\n                        if (\n                            selectedLanguages &&\n                            selectedLanguages.length &&\n                            sourceLanguage &&\n                            sourceLanguage.length &&\n                            sourceLanguage[0] &&\n                            pageUrl\n                        ) {\n                            const results = await onboarding({\n                                variables: {\n                                    pageUrl,\n                                    translationLanguages: selectedLanguages.map(\n                                        (lang) => lang.value\n                                    ),\n                                    sourceLanguage:\n                                        sourceLanguage && sourceLanguage.length && sourceLanguage[0]\n                                            ? sourceLanguage[0].value\n                                            : 0,\n                                },\n                            });\n\n                            if (results && results.data && results.data.onboarding) {\n                                message.success('Successfully added your page!');\n                                await updateUser({ variables: { isNew: false } });\n                                window.location.assign('/');\n                            } else {\n                                setHasError(true);\n                                message.error(\n                                    'Ooops, it seems the snippet is still not installed. Try again.'\n                                );\n                            }\n                        } else {\n                            message.warn('Please fill all onboarding fields');\n                        }\n\n                        setIsValidating(false);\n                    }}\n                    label={\n                        isValidating ? (\n                            <Grid style={{ width: '17px', height: '17px' }} />\n                        ) : hasError ? (\n                            'TEST AGAIN'\n                        ) : (\n                            'TEST SETUP'\n                        )\n                    }\n                    disabled={isValidating}\n                />\n                <Link\n                    label=\"SKIP FOR NOW\"\n                    onClick={async (e) => {\n                        let selectedLanguagesIds = selectedLanguages.map((l) => l.value);\n\n                        console.log('selectedLanguagesIds', selectedLanguagesIds);\n                        console.log('sourceLanguage', sourceLanguage);\n\n                        if (selectedLanguagesIds) {\n                            updateTargetLanguages({\n                                variables: {\n                                    selectedLanguagesIds,\n                                },\n                            });\n                        }\n\n                        if (sourceLanguage && sourceLanguage.length && sourceLanguage[0]) {\n                            updateUser({\n                                variables: { sourceLanguage: sourceLanguage[0].value },\n                            });\n                        }\n\n                        await updateUser({\n                            variables: { skippedOnboarding: true },\n                        });\n\n                        routerHistory.push('/');\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\nconst Onboarding = ({ isNew, routerHistory }) => {\n    let [sourceLanguage, setSourceLanguages] = useState(undefined);\n    let [selectedLanguages, setSelectedLanguages] = useState([]);\n    let [pageUrl, setPageUrl] = useState(undefined);\n    let [isValidating, setIsValidating] = useState(undefined);\n    let [hasError, setHasError] = useState(undefined);\n\n    const { data: meData, loading: meLoading } = useMeQuery();\n    const { loading, data, error } = useOnboardingQueryClient();\n    let [onboardingMutation] = useOnboardingMutationClient();\n\n    useEffect(() => {\n        /*\n\n        React.useEffect(() => {\n    return () => {\n            props.history.goForward();\n        }\n    }\n}, []);\n        */\n        if (routerHistory.location.pathname === '/onboarding') {\n            window.history.pushState(null, document.title, window.location.href);\n            window.addEventListener('popstate', function (event) {\n                window.history.pushState(null, document.title, window.location.href);\n            });\n        }\n    });\n\n    if (!isNew) {\n        return <Redirect to=\"/\" />;\n    }\n\n    if (loading || meLoading) {\n        return '';\n    }\n\n    let currentStep = data && data.onboarding ? data.onboarding.currentStep : 1;\n    let apiKey = meData && meData.me ? meData.me.apiKey : '';\n    let storedSourceLanguageId = meData && meData.me ? meData.me.sourceLanguage : '';\n\n    if (currentStep === 1) {\n        return (\n            <SourceLanguageStep\n                currentStep={currentStep}\n                onboardingMutation={onboardingMutation}\n                sourceLanguage={sourceLanguage}\n                setSourceLanguages={setSourceLanguages}\n                storedSourceLanguageId={storedSourceLanguageId}\n            />\n        );\n    }\n    if (currentStep === 2) {\n        return (\n            <TargetLanguagesStep\n                currentStep={currentStep}\n                onboardingMutation={onboardingMutation}\n                selectedLanguages={selectedLanguages}\n                setSelectedLanguages={setSelectedLanguages}\n                sourceLanguage={sourceLanguage}\n            />\n        );\n    } else if (currentStep === 3) {\n        return (\n            <Step2\n                currentStep={currentStep}\n                onboardingMutation={onboardingMutation}\n                pageUrl={pageUrl}\n                setPageUrl={setPageUrl}\n            />\n        );\n    } else {\n        return (\n            <Step3\n                currentStep={currentStep}\n                onboardingMutation={onboardingMutation}\n                pageUrl={pageUrl}\n                selectedLanguages={selectedLanguages}\n                isValidating={isValidating}\n                setIsValidating={setIsValidating}\n                selectedLanguages={selectedLanguages}\n                hasError={hasError}\n                setHasError={setHasError}\n                routerHistory={routerHistory}\n                apiKey={apiKey}\n                sourceLanguage={sourceLanguage}\n            />\n        );\n    }\n};\n\nexport default Onboarding;\n","import gql from 'graphql-tag';\n\nexport const userPagesQuery = gql`\n    query userPages {\n        userPages {\n            id\n            pageUrl\n            updatedAt\n            User {\n                id\n                fullName\n            }\n            pageString {\n                id\n                original\n                updatedAt\n                translations {\n                    translatedString\n                    pageStringId\n                    id\n                    languageId\n                }\n            }\n        }\n    }\n`;\n\nexport const ADD_SINGLE_PAGE = gql`\n    mutation addSinglePage($pageUrl: String!) {\n        addSinglePage(pageUrl: $pageUrl)\n    }\n`;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M33.2916667,0.708333333 L0.708333333,33.2916667\",\n  id: \"Stroke-1\",\n  stroke: \"#000000\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M33.2916667,33.2916667 L0.708333333,0.708333333\",\n  id: \"Stroke-3\",\n  stroke: \"#000000\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  fill: \"none\"\n});\n\nvar SvgClose = (_ref) => {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"36px\",\n    height: \"36px\",\n    viewBox: \"-1 -1 36 36\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(SvgClose, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/close.ff987521.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { ReactComponent as Close } from '../assets/close.svg';\n\nconst Popup = ({ text, closePopup, component: Component }) => {\n    return (\n        <div className=\"popup-box\">\n            <div className=\"box\">\n                <span className=\"close-icon\" onClick={closePopup}>\n                    <Close style={{ width: '10px', height: '10px', opacity: '0.28' }} />\n                </span>\n                <Component />\n            </div>\n        </div>\n    );\n};\n\nexport default Popup;\n","import { message, Skeleton, Table, Tag } from 'antd';\nimport React, { useEffect, useRef, useState } from 'react';\nimport LoadingBar from 'react-top-loading-bar';\nimport { format } from 'date-fns';\nimport Button from '../../../form/components/Button';\nimport { ReactComponent as CheckLogo } from '../../../assets/check.svg';\nimport { Rings } from 'svg-loaders-react';\nimport { useUserPagesQuery } from '../useQueries';\nimport { useMeQuery } from '../../../rootUseQuery';\nimport { useUpdateUserMutation } from '../../../user/useMutations';\nimport { useOnboardingMutationClient } from '../../onboarding/useMutations';\nimport { browserHistory } from '../../../browserHistory';\nimport { copyToClipboard } from '../../../utils/generalUtils';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx';\nimport { dark } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport Input from '../../../form/components/Input';\nimport Popup from '../../../components/Popup';\nimport { useAddSinglePageMutation } from '../useMutations';\nimport { getProjectTranslationsPercentage, getProjectWordsAndStringsCount } from '../utils';\nimport { getTranslationsPercentageByLanguage } from '../../translation/utils';\nimport { useUserLanguagesQuery } from '../../../user/useQueries';\n\nSyntaxHighlighter.registerLanguage('jsx', jsx);\n\nconst columns = [\n    {\n        title: 'URL',\n        dataIndex: 'url',\n        key: 'url',\n    },\n    {\n        title: 'STRINGS',\n        dataIndex: 'strings',\n        key: 'strings',\n    },\n    {\n        title: 'Translated',\n        dataIndex: 'translated',\n        key: 'translated',\n    },\n    {\n        title: 'LAST EDIT',\n        dataIndex: 'lastEdit',\n        key: 'lastEdit',\n    },\n];\n\nconst placeHolderRow = [\n    {\n        key: '1',\n        url: 'n. a.',\n        strings: 'n. a.',\n        translated: 'n. a.',\n        lastEdit: 'n. a.',\n    },\n];\n\nconst SetupPopup = ({ setShowPopup, apiKey }) => {\n    let [pageUrl, setPageUrl] = useState(undefined);\n    let [isSubmitting, setIsSubmitting] = useState(false);\n    const [useAddSinglePage] = useAddSinglePageMutation();\n    return (\n        <div className=\"setup-popup-wrapper\">\n            <div className=\"setup-p-title\">Add another page</div>\n            <div className=\"setup-p-description\">\n                Copy your code snippet below and place it in the &#60;head&#62; of your page.\n                Afterwards, enter the URL to test your integration.\n            </div>\n            <div className=\"setup-p-code\">\n                <div className=\"setup-code\">\n                    <Button children=\"COPY\" onClick={(e) => copyToClipboard('code-snippet')} />\n                    <SyntaxHighlighter language=\"javascript\" style={dark} id=\"code-snippet\">\n                        {`\n    <script type=\"text/javascript\">\n        var tsstack = function () {\n            var tss = document.createElement('script'); tss.type = 'text/javascript'; tss.async = true;\n            tss.src = 'https://app.translatestack.com/sdk/sdk.js?apiKey=${apiKey}';\n            tss.id = \"tss-script\";\n            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(tss);\n        }\n        window.onload = tsstack\n    </script>`}\n                    </SyntaxHighlighter>\n                </div>\n            </div>\n            <div className=\"setup-p-d-w\">\n                <div className=\"setup-p-d-t\">Enter URL of the page</div>\n                <div className=\"setup-p-d-d\">\n                    After you placed the code snippet in the new page, you can test the\n                    implementation. Just enter the valid URL and press the button.\n                </div>\n                <div className=\"setup-p-d-i\">\n                    <Input\n                        placeholder=\"https://yourwebsite.com\"\n                        value={pageUrl}\n                        onChange={(e) => {\n                            setPageUrl(e.target.value);\n                        }}\n                    />\n                </div>\n                <div className=\"setup-p-d-s\">\n                    <Button\n                        className=\"wf-btn-primary\"\n                        children=\"TEST SETUP\"\n                        disabled={isSubmitting}\n                        onClick={async () => {\n                            setIsSubmitting(true);\n                            if (pageUrl && /^(http|https):\\/\\/[^ \"]+$/.test(pageUrl)) {\n                                const results = await useAddSinglePage({\n                                    variables: { pageUrl },\n                                });\n\n                                if (results && results.data && results.data.addSinglePage) {\n                                    message.success('Page successfully added');\n                                    setShowPopup(false);\n                                } else {\n                                    message.warn('Unable to verify the page!');\n                                }\n                            } else {\n                                message.error('Please enter a valid page url');\n                            }\n\n                            setIsSubmitting(false);\n                        }}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapRows = (pages) => {\n    let rows = [];\n\n    if (pages && pages.length) {\n        pages.forEach((page, i) => {\n            let row = {};\n\n            row.key = i;\n            row.url = (\n                <span style={{ display: 'inline-flex' }}>\n                    {page.pageUrl}{' '}\n                    {page.pageString.length === 0 && (\n                        <span\n                            style={{\n                                marginLeft: '10px',\n                                display: 'inline-flex',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <Rings\n                                style={{\n                                    width: '16px',\n                                    height: '16px',\n                                    background: '#9966ff',\n                                    borderRadius: '50%',\n                                }}\n                            />\n                            <span\n                                style={{\n                                    color: '#9966ff',\n                                    borderRadius: '50%',\n                                    fontFamily: 'Open Sans',\n                                    fontSize: '14px',\n                                    fontWeight: 'bold',\n                                    marginLeft: '6px',\n                                }}\n                            >\n                                FETCHING DATA\n                            </span>\n                        </span>\n                    )}\n                </span>\n            );\n            row.strings = page.pageString.length;\n            row.translated = `${getTranslationsPercentageByLanguage(page.pageString)}%`;\n            row.lastEdit = format(new Date(page.updatedAt).getTime(), 'd. MMM');\n            row.pageId = page.id;\n\n            rows.push(row);\n        });\n    }\n    return rows;\n};\n\nconst Projects = ({ routerHistory }) => {\n    const [showPopup, setShowPopup] = useState(false);\n    const [progress, setProgress] = useState(10);\n\n    const { data, loading, error } = useUserPagesQuery();\n    const { data: userData, loading: userLoading, error: userError } = useMeQuery();\n    const [updateUser] = useUpdateUserMutation();\n    const [updateOnboardingClient] = useOnboardingMutationClient();\n    const { data: userLanguagesData, loading: userLanguagesLoading } = useUserLanguagesQuery();\n\n    let dataSource = placeHolderRow;\n\n    useEffect(() => {\n        // if (userData && userData.me) {\n        //     console.log(\"\");\n        //     if (userData.me.isNew === true && userData.me.skippedOnboarding === false)\n        //         routerHistory.push('/onboarding');\n        // }\n        if (loading || userLoading || userLanguagesLoading) {\n            setProgress(100);\n        } \n        return () => {\n            setProgress(0);\n        };\n    }, []);\n\n    if (loading || userLoading || userLanguagesLoading) {\n        return (\n            <LoadingBar\n                color=\"#a172ff\"\n                progress={progress}\n                onLoaderFinished={() => setProgress(0)}\n            />\n        );\n    } else {\n        if (data && data.userPages) {\n            dataSource = mapRows(data.userPages);\n        }\n    }\n\n    let hasFinishedSetup = userData && userData.me ? !userData.me.isNew : false;\n    let apiKey = userData && userData.me ? userData.me.apiKey : '';\n\n    let { wordsCount, stringCount } = getProjectWordsAndStringsCount(data.userPages);\n    let percentageTranslations = getProjectTranslationsPercentage(data.userPages, stringCount);\n\n    return (\n        <div className=\"projects-page-wrapper\">\n            <div className=\"projects-page-header\">\n                <div className=\"ls\">\n                    <div className=\"projects-inner-title\">Project</div>\n                    <div className=\"project-name\">\n                        {hasFinishedSetup\n                            ? data.userPages[0].pageUrl.substring(\n                                  0,\n                                  data.userPages[0].pageUrl.indexOf('/') > 0\n                                      ? data.userPages[0].pageUrl.indexOf('/')\n                                      : data.userPages[0].pageUrl.length\n                              )\n                            : ''}\n                    </div>\n                    <div id=\"project-status\" className=\"project-status\">\n                        {hasFinishedSetup ? (\n                            <>\n                                <CheckLogo\n                                    style={{\n                                        width: '16px',\n                                        height: '16px',\n                                        fill: '#9966ff',\n                                        borderRadius: '50%',\n                                    }}\n                                />\n                                INSTALLATION COMPLETED\n                            </>\n                        ) : (\n                            <>\n                                <Rings\n                                    style={{\n                                        width: '16px',\n                                        height: '16px',\n                                        background: '#9966ff',\n                                        borderRadius: '50%',\n                                    }}\n                                />\n                                INSTALLATION NOT COMPLETED\n                            </>\n                        )}\n                    </div>\n                </div>\n                <div className=\"rs\">\n                    <Button\n                        className=\"wf-btn-primary\"\n                        children={hasFinishedSetup ? 'ADD PAGE' : 'START NOW'}\n                        onClick={async (e) => {\n                            if (hasFinishedSetup) {\n                                setShowPopup(true);\n                            } else {\n                                await updateOnboardingClient({ variables: { currentStep: 1 } });\n                                await updateUser({ variables: { skippedOnboarding: false } });\n                                browserHistory.push('/onboarding');\n                            }\n                        }}\n                    />\n                </div>\n            </div>\n            <div className=\"projects-page-sub-header\">\n                <div className=\"p-an-w\">\n                    <div className=\"p-an-l\">Words</div>\n                    <div className=\"p-an-v\">{wordsCount > 0 ? wordsCount : '0'} </div>\n                </div>\n\n                <div className=\"p-an-w\">\n                    <div className=\"p-an-l\">Pages</div>\n                    <div className=\"p-an-v\">{hasFinishedSetup ? data.userPages.length : '0'}</div>\n                </div>\n\n                <div className=\"p-an-w\">\n                    <div className=\"p-an-l\">Strings</div>\n                    <div className=\"p-an-v\"> {stringCount > 0 ? stringCount : '0'} </div>\n                </div>\n\n                <div className=\"p-an-w\">\n                    <div className=\"p-an-l\">Languages</div>\n                    <div className=\"p-an-v\">\n                        {userLanguagesLoading\n                            ? '0'\n                            : userLanguagesData.userLanguages &&\n                              userLanguagesData.userLanguages.length\n                            ? userLanguagesData.userLanguages.length\n                            : '0'}\n                    </div>\n                </div>\n\n                <div className=\"p-an-w\">\n                    <div className=\"p-an-l\">Translated</div>\n                    <div className=\"p-an-v last\">\n                        {!isNaN(percentageTranslations) ? percentageTranslations : 0}%\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"projects-page-table\">\n                <Table\n                    columns={columns}\n                    dataSource={dataSource}\n                    pagination={false}\n                    onRow={(row) => {\n                        return {\n                            onClick: () => routerHistory.push(`/translation/${row.pageId}`),\n                        };\n                    }}\n                />\n            </div>\n            <div id=\"sidebar-id\"></div>\n\n            {showPopup && (\n                <Popup\n                    text=\"test\"\n                    component={() => {\n                        return <SetupPopup setShowPopup={setShowPopup} apiKey={apiKey} />;\n                    }}\n                    closePopup={(e) => setShowPopup(false)}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default Projects;\n","import { useMutation } from '@apollo/react-hooks';\nimport { ADD_SINGLE_PAGE } from './gql';\n\nexport const useAddSinglePageMutation = () => useMutation(ADD_SINGLE_PAGE, {\n    refetchQueries: ['userPages']\n});\n","import { useLazyQuery, useQuery } from '@apollo/react-hooks';\nimport { userPagesQuery } from './gql';\n\nexport const useUserPagesQuery = () =>\n    useQuery(userPagesQuery, {\n        fetchPolicy: 'network-only',\n    });\n","import wordcount from 'wordcount';\nimport { getPageWordsCount } from '../translation/utils';\n\nexport const getProjectWordsAndStringsCount = (userPages) => {\n    let wordsCount = 0;\n    let stringCount = 0;\n\n    if (userPages && userPages.length) {\n        userPages.forEach(({ pageString }) => {\n            wordsCount += getPageWordsCount(pageString);\n            stringCount += pageString.length;\n        });\n    }\n\n    return { wordsCount, stringCount };\n};\n\nexport const getProjectTranslationsPercentage = (userPages, stringCount) => {\n    let percentage = 0;\n    let translationsCount = 0;\n\n    if (userPages && userPages.length) {\n        userPages.forEach(({ pageString }) => {\n            pageString.forEach(({ translations }) => {\n                if (translations && translations.length && translations.length > 0) {\n                    translationsCount++;\n                }\n            });\n        });\n    }\n\n    percentage = ((translationsCount / stringCount) * 100).toFixed(1);\n\n    return percentage;\n};\n","import gql from 'graphql-tag';\n\nexport const getPageQuery = gql`\n    query getPage($pageId: Int!) {\n        getPage(pageId: $pageId) {\n            id\n            pageUrl\n            updatedAt\n            pageString {\n                id\n                original\n                updatedAt\n                translations {\n                    id\n                    languageId\n                    translatedString\n                    updatedAt\n                }\n            }\n        }\n    }\n`;\n\nexport const PUBLISH_TRANSLATIONS_MUTATION = gql`\n    mutation addTranslations($input: [TranslationInput!]!) {\n        addTranslations(input: $input)\n    }\n`;\n","import React, { useContext, useState, useEffect, useRef, Children } from 'react';\nimport { Table, Input, Form, message } from 'antd';\nimport { parse, format } from 'date-fns';\n\nimport GoBack from '../../../components/GoBack';\nimport { useGetPageQuery } from '../useQueries';\nimport Select, { components } from 'react-select';\nimport { useMeQuery } from '../../../rootUseQuery';\nimport Button from '../../../form/components/Button';\nimport {\n    getPageWordsCount,\n    getStringTranslation,\n    getTranslationsPercentageByLanguage,\n    mapLanguages,\n} from '../utils';\nimport { usePublishStringsMutation } from '../useMutations';\nimport { useUserLanguagesQuery } from '../../../user/useQueries';\nimport LoadingBar from 'react-top-loading-bar';\nimport { browserHistory } from '../../../browserHistory';\nimport { useCustomizerMutationClient } from '../../customizer/useMutations';\n\nconst EditableContext = React.createContext();\n\nconst CustomStyle = () => {\n    return {\n        option: (base, data) => {\n            return {\n                ...base,\n                backgroundColor: 'white',\n                color: '#0a2540',\n                fontSize: '12px',\n                letterSpacing: '0.43px',\n                fontWeight: 'bold',\n                '&:active': { backgroundColor: 'rgba(227, 232, 238, 0.42)' },\n                '&:hover': { backgroundColor: '#e8eaef' },\n            };\n        },\n        container: (base, { selectProps: { width, height } }) => ({\n            ...base,\n            width: '40%',\n        }),\n        control: (base, state) => ({\n            ...base,\n            border: 'solid 1px rgba(227, 232, 238, 0.42)',\n            borderRadius: '2px',\n            boxShadow: 'none',\n            '&:hover': { borderColor: '#a172ff' },\n        }),\n        singleValue: (base, state) => ({\n            ...base,\n            opacity: '0.29',\n            fontFamily: 'Open Sans',\n            fontSize: '12px',\n            fontWeight: 'bold',\n            letterSpacing: '0.43px',\n        }),\n    };\n};\n\nconst EditableRow = ({ index, ...props }) => {\n    const [form] = Form.useForm();\n\n    return (\n        <Form form={form} component={false}>\n            <EditableContext.Provider value={form}>\n                <tr {...props} />\n            </EditableContext.Provider>\n        </Form>\n    );\n};\nconst EditableCell = ({\n    title,\n    editable,\n    children,\n    dataIndex,\n    record,\n    handleSave,\n    ...restProps\n}) => {\n    const [editing, setEditing] = useState(false);\n    const [focus, setFocus] = useState(false);\n\n    const form = useContext(EditableContext);\n    let childNode = children;\n\n    if (editable) {\n        let tbodyWrapper = document.getElementsByClassName('ant-table-tbody');\n\n        if (record && (record[dataIndex] === null || record[dataIndex] === '')) {\n            if (tbodyWrapper) {\n                if (tbodyWrapper[0]) {\n                    tbodyWrapper[0].children[record.key].children[0].style.borderLeft =\n                        '2px solid #ff7166';\n                }\n            }\n        } else {\n            if (tbodyWrapper) {\n                if (tbodyWrapper[0]) {\n                    if (focus) {\n                        tbodyWrapper[0].children[record.key].children[0].style.borderLeft =\n                            '2px solid #9966ff';\n                    } else\n                        tbodyWrapper[0].children[record.key].children[0].style.borderLeft = 'none';\n                }\n            }\n        }\n\n        childNode = (\n            <Input.TextArea\n                value={record[dataIndex]}\n                onChange={async (e) => {\n                    handleSave({ ...record, ...{ translated: e.target.value } });\n                }}\n                cols=\"10\"\n                rows=\"3\"\n                onFocus={(e) => setFocus(true)}\n                onBlur={(e) => setFocus(false)}\n                style={{\n                    border:\n                        record[dataIndex] === null || record[dataIndex] === ''\n                            ? '2px solid #ff7166'\n                            : focus\n                            ? '2px solid #9966ff'\n                            : '2px solid rgba(227, 232, 238, 0.42)',\n\n                    backgroundColor:\n                        record[dataIndex] === null || record[dataIndex] === ''\n                            ? 'rgba(255, 113, 102, 0.06)'\n                            : focus\n                            ? 'rgba(153, 102, 255, 0.13)'\n                            : 'unset',\n                }}\n            />\n        );\n    }\n    return <td {...restProps}>{childNode}</td>;\n};\n\nconst columns = (userLanguages, setSelectedLanguageId) => {\n    let mappedLanguages = mapLanguages(userLanguages);\n    const [updateCustomizerClient] = useCustomizerMutationClient();\n\n    const Option = (props, index) => {\n        let { options, value } = props;\n\n        return options[options.length - 1].value === value ? (\n            <>\n                <components.Option {...props} />\n                <div\n                    style={{\n                        fontFamily: 'Open Sans',\n                        fontSize: '9px',\n                        lineHeight: '5.22',\n                        textAlign: 'center',\n                    }}\n                >\n                    <Button\n                        children=\"Add more\"\n                        className={'wf-btn-primary active'}\n                        onClick={async (e) => {\n                            await updateCustomizerClient({\n                                variables: { isOpen: true, openLanguagesComponent: true },\n                            });\n                            browserHistory.push('/customizer');\n                        }}\n                        style={{\n                            marginTop: '10px',\n                            width: '101px',\n                            lineHeight: '3.36',\n                        }}\n                    />\n                </div>\n            </>\n        ) : (\n            <components.Option {...props} />\n        );\n    };\n\n    return [\n        {\n            title: 'ID',\n            dataIndex: 'id',\n            key: 'id',\n            width: '5%',\n            className: 'light-cells',\n            shouldCellUpdate: () => true,\n        },\n        {\n            title: 'ORIGINAL',\n            dataIndex: 'original',\n            key: 'original',\n            width: '20%',\n            className: 'light-cells',\n        },\n        {\n            title: () => (\n                <div>\n                    <Select\n                        options={mappedLanguages}\n                        defaultValue={mappedLanguages[0]}\n                        onChange={(e) => setSelectedLanguageId(e.value)}\n                        styles={CustomStyle()}\n                        isSearchable={false}\n                        components={{ Option }}\n                    />\n                </div>\n            ),\n            dataIndex: 'translated',\n            key: 'translated',\n            editable: true,\n            width: '20%',\n        },\n        {\n            title: 'LAST EDIT',\n            dataIndex: 'lastEdit',\n            key: 'lastEdit',\n            width: '15%',\n            className: 'light-cells',\n        },\n    ];\n};\n\nconst mapRows = (strings, selectedLanguageId) => {\n    let rows = [];\n\n    if (strings && strings.length) {\n        strings.forEach((string, i) => {\n            let row = {};\n\n            const { translatedStringValue, updatedAtValue } = getStringTranslation(\n                string,\n                selectedLanguageId\n            );\n\n            row.key = i;\n            row.id = string.id;\n            row.original = string.original;\n            row.translated = translatedStringValue;\n            row.lastEdit = format(new Date(updatedAtValue).getTime(), 'd. MMM');\n            row.stringId = string.id;\n            row.selectedLanguageId = selectedLanguageId;\n            rows.push(row);\n        });\n    }\n\n    return rows;\n};\n\nconst Translation = (props) => {\n    let pageId;\n    if (props.match && props.match.params) {\n        pageId = parseInt(props.match.params.pageId);\n    }\n    const [progress, setProgress] = useState(0);\n    const { data, loading, error } = useGetPageQuery(pageId);\n    const { data: meData, loading: meLoading } = useMeQuery();\n    const { data: userLanguagesData, loading: userLanguagesLoading } = useUserLanguagesQuery();\n\n    const [publishTranslations] = usePublishStringsMutation();\n\n    let [rowsData, setRowsData] = useState([]);\n    let [userSelectedLang, setUserSelectedLang] = useState(0);\n    let [dataUpdated, setDataUpdated] = useState(false);\n\n    useEffect(() => {\n        if (loading || meLoading || userLanguagesLoading) {\n            setProgress(progress + 40);\n        }\n\n        return () => {\n            setProgress(0);\n        };\n    }, []);\n    if (loading || meLoading || userLanguagesLoading) {\n        return (\n            <LoadingBar\n                color=\"#a172ff\"\n                progress={progress}\n                onLoaderFinished={() => setProgress(0)}\n            />\n        );\n    }\n\n    const pageData = data.getPage;\n    let userLanguages =\n        userLanguagesData && userLanguagesData.userLanguages ? userLanguagesData.userLanguages : [];\n\n    const wordsCount = getPageWordsCount(data.getPage ? data.getPage.pageString : []);\n    const percentageTranslated = getTranslationsPercentageByLanguage(\n        data.getPage ? data.getPage.pageString : [],\n        userSelectedLang\n    );\n\n    return (\n        <div className=\"translation-page-wrapper\">\n            <div className=\"translation-page-header\">\n                <div className=\"ls\">\n                    <GoBack routerHistory={props.routerHistory} style={{ margin: '0px' }} />\n                    <div className=\"translation-inner-title\">URL</div>\n                    <div className=\"translation-name\">\n                        <span style={{ color: '#c9ced4' }}>\n                            {pageData.pageUrl.substring(0, pageData.pageUrl.indexOf('/'))}\n                        </span>\n                        <span>{pageData.pageUrl.substring(pageData.pageUrl.indexOf('/'))}</span>\n                    </div>\n                </div>\n                <div className=\"rs\">\n                    {dataUpdated && (\n                        <Button\n                            className=\"wf-btn-primary\"\n                            children={'Publish Changes'}\n                            onClick={async (e) => {\n                                const updatedRows = rowsData\n                                    .filter((row) => row.isUpdated && row.translated !== '0')\n                                    .map(({ translated, stringId, selectedLanguageId }) => {\n                                        return { translated, stringId, selectedLanguageId };\n                                    });\n                                if (updatedRows && updatedRows.length > 0) {\n                                    const results = await publishTranslations({\n                                        variables: { input: updatedRows },\n                                    });\n                                    if (results && results.data && results.data.addTranslations) {\n                                        message.success('Translations saved successfully!');\n                                    } else {\n                                        message.error(\n                                            \"Unable to save the translations, we've received the error, and we're working on it.\"\n                                        );\n                                    }\n                                }\n\n                                setDataUpdated(false);\n                            }}\n                        />\n                    )}\n                </div>\n            </div>\n            <div className=\"translation-page-sub-header\">\n                <div className=\"t-an-w\">\n                    <div className=\"t-an-l\">Words</div>\n                    <div className=\"t-an-v\">{wordsCount > 0 ? wordsCount : '0'} </div>\n                </div>\n\n                <div className=\"t-an-w\">\n                    <div className=\"t-an-l\">Strings</div>\n                    <div className=\"t-an-v\">\n                        {data.getPage && data.getPage.pageString\n                            ? data.getPage.pageString.length\n                            : '0'}\n                    </div>\n                </div>\n\n                <div className=\"t-an-w\">\n                    <div className=\"t-an-l\">Translated</div>\n                    <div className=\"t-an-v last\">{percentageTranslated}%</div>\n                </div>\n\n                <div className=\"t-an-w\">\n                    <div className=\"t-an-l\">Languages</div>\n                    <div className=\"t-an-v\">\n                        {userLanguages && userLanguages.length ? userLanguages.length : '0'}\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"translation-page-table\">\n                <TableWrapper\n                    strings={data.getPage ? data.getPage.pageString : placeHolderRow}\n                    userLanguages={userLanguages}\n                    setRowsData={setRowsData}\n                    setUserSelectedLang={setUserSelectedLang}\n                    setDataUpdated={setDataUpdated}\n                />\n            </div>\n        </div>\n    );\n};\n\nconst placeHolderRow = [\n    {\n        key: '1',\n        id: '1',\n        original: 'n. a.',\n        translated: 'n. a.',\n        lastEdit: 'n. a.',\n    },\n];\n\nconst TableWrapper = ({\n    strings,\n    userLanguages,\n    setRowsData,\n    setUserSelectedLang,\n    setDataUpdated,\n}) => {\n    let [selectedLanguageId, setSelectedLanguageId] = useState(userLanguages[0].Language.id);\n    let [rows, setRows] = useState(mapRows(strings, selectedLanguageId));\n\n    let finalColumns = columns(userLanguages, setSelectedLanguageId).map((col) => {\n        if (!col.editable) {\n            return col;\n        }\n\n        return {\n            ...col,\n            onCell: (record) => ({\n                record,\n                editable: col.editable,\n                dataIndex: col.dataIndex,\n                title: col.title,\n                handleSave: handleSave,\n            }),\n        };\n    });\n\n    useEffect(() => {\n        setUserSelectedLang(selectedLanguageId);\n\n        const mappedRows = mapRows(strings, selectedLanguageId);\n        setRows(mappedRows);\n        setRowsData(mappedRows);\n    }, [selectedLanguageId]);\n\n    const handleSave = (row) => {\n        const newData = [...rows];\n        const index = newData.findIndex((item) => row.key === item.key);\n        const item = newData[index];\n        newData.splice(index, 1, { ...item, ...row, isUpdated: true });\n        setDataUpdated(true);\n        setRows(newData);\n        setRowsData(newData);\n    };\n\n    const components = {\n        body: {\n            row: EditableRow,\n            cell: EditableCell,\n        },\n    };\n\n    return (\n        <Table\n            id=\"translations-table\"\n            columns={finalColumns}\n            dataSource={rows}\n            pagination={false}\n            components={components}\n        />\n    );\n};\nexport default Translation;\n","import { useQuery } from '@apollo/react-hooks';\nimport { getPageQuery } from './gql';\n\nexport const useGetPageQuery = (pageId) =>\n    useQuery(getPageQuery, {\n        variables: {\n            pageId,\n        },\n    });\n","import { useMutation } from '@apollo/react-hooks';\nimport { PUBLISH_TRANSLATIONS_MUTATION } from './gql';\n\nexport const usePublishStringsMutation = () => useMutation(PUBLISH_TRANSLATIONS_MUTATION);\n","import React, { useEffect } from 'react';\nimport Select, { components } from 'react-select';\nimport classNames from 'classnames';\n\nconst CustomStyle = (text) => {\n    return {\n        option: (base, data) => {\n            return {\n                ...base,\n                backgroundColor: '#e8eaef',\n                color: '#0a2540',\n                fontSize: '12px',\n                letterSpacing: '0.43px',\n                fontWeight: 'bold',\n                '&:active': { backgroundColor: 'rgba(227, 232, 238, 0.42)' },\n                '&:hover': { backgroundColor: 'rgba(255, 255, 255, 0.01)' },\n            };\n        },\n        container: (base, { selectProps: { width, height } }) => ({\n            ...base,\n            width: '120px',\n        }),\n        control: (base, state) => ({\n            ...base,\n            border: 'solid 1px rgba(227, 232, 238, 0.42)',\n            borderRadius: '2px',\n            boxShadow: 'none',\n            '&:hover': { borderColor: '#a172ff' },\n        }),\n        singleValue: (base, state) => ({\n            ...base,\n            fontFamily: 'Open Sans',\n            fontSize: '12px',\n            fontWeight: 'bold',\n            letterSpacing: '0.43px',\n        }),\n    };\n};\n\nconst EmptyCustomizer = (props) => {\n    return (\n        <div className=\"customizer-page-wrapper\">\n            <div className=\"window-container\">\n                <div className=\"window-row\">\n                    <div className=\"column left\">\n                        <span className=\"dot\" style={{ background: '#ff7166' }}></span>\n                        <span className=\"dot\" style={{ background: '#ffbf66' }}></span>\n                        <span className=\"dot\" style={{ background: '#50c65c' }}></span>\n                    </div>\n                </div>\n\n                <div\n                    className={classNames('window-content')}\n                >\n                    <Select\n                        options={[]}\n                        isSearchable={false}\n                        isOptionDisabled={true}\n                        styles={CustomStyle()}\n                        menuPlacement={'top'}\n                        menuIsOpen={false}\n                        isLoading={true}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EmptyCustomizer;\n","import React, { useEffect, useState } from 'react';\nimport Select, { components } from 'react-select';\nimport classNames from 'classnames';\nimport { browserHistory } from '../../../browserHistory';\nimport { useCustomizerMutationClient } from '../useMutations';\nimport { useCustomizerQueryClient } from '../useQueries';\nimport { useMeQuery, useLanugagesListQuery } from '../../../rootUseQuery';\nimport { mapLanguages } from '../../translation/utils';\nimport EmptyCustomizer from './EmptyCustomizer';\nimport { useUserLanguagesQuery } from '../../../user/useQueries';\nimport LoadingBar from 'react-top-loading-bar';\n\nconst CustomStyle = (text) => {\n    return {\n        option: (base, data) => {\n            return {\n                ...base,\n                backgroundColor: '#e8eaef',\n                color: '#0a2540',\n                fontSize: '12px',\n                letterSpacing: '0.43px',\n                fontWeight: 'bold',\n                '&:active': { backgroundColor: 'rgba(227, 232, 238, 0.42)' },\n                '&:hover': { backgroundColor: 'rgba(255, 255, 255, 0.01)' },\n            };\n        },\n        container: (base, { selectProps: { width, height } }) => ({\n            ...base,\n            width:\n                text === 'FULL' || text === 'TEXT_ONLY'\n                    ? '150px'\n                    : text === 'SHORTENED'\n                    ? '120px'\n                    : text === 'FLAG_ONLY'\n                    ? '90px'\n                    : '120px',\n        }),\n        control: (base, state) => ({\n            ...base,\n            border: 'solid 1px rgba(227, 232, 238, 0.42)',\n            borderRadius: '2px',\n            boxShadow: 'none',\n            '&:hover': { borderColor: '#a172ff' },\n        }),\n        singleValue: (base, state) => ({\n            ...base,\n            fontFamily: 'Open Sans',\n            fontSize: '12px',\n            fontWeight: 'bold',\n            letterSpacing: '0.43px',\n        }),\n    };\n};\n\nconst Customizer = ({ routerHistory, location }) => {\n    const { loading, data } = useCustomizerQueryClient();\n    const { data: langData, loading: langLoading } = useLanugagesListQuery();\n    const { data: meData, loading: meLoading } = useMeQuery();\n    const { data: userLanguagesData, loading: userLanguagesLoading } = useUserLanguagesQuery();\n    const [progress, setProgress] = useState(100);\n\n    const [updateCustomizerClient] = useCustomizerMutationClient();\n\n    async function updateCustomizerData(isOpen) {\n        await updateCustomizerClient({ variables: { isOpen } });\n    }\n\n    useEffect(() => {\n        browserHistory.listen(async (e) => {\n            if (e.pathname !== '/customizer') {\n                await updateCustomizerData(false);\n            }\n        });\n\n    }, []);\n\n    if (loading || meLoading || langLoading || userLanguagesLoading) {\n        return (\n            <>\n                <LoadingBar\n                    color=\"#a172ff\"\n                    progress={progress}\n                    onLoaderFinished={() => setProgress(100)}\n                />\n                <EmptyCustomizer />\n            </>\n        );\n    }\n\n    let customizer = meData && meData.me && meData.me.customizer ? meData.me.customizer : {};\n    let userLanguages =\n        userLanguagesData && userLanguagesData.userLanguages ? userLanguagesData.userLanguages : [];\n    let systemLanguages = langData && langData.languagesList ? langData.languagesList : [];\n    let sourceLanguage = systemLanguages\n        .filter((l) => l.id === meData.me.sourceLanguage)\n        .map((l) => {\n            return {\n                Language: {\n                    ...l,\n                },\n            };\n        });\n\n    let {\n        shouldOpenTheSelectOptions,\n        position: localPosition,\n        customDirection: localCustomDirection,\n        languages: localLanguages,\n        branding,\n        text: localText,\n        removedItems,\n    } = data.customizer;\n\n    let { position, text, appearance, customDivDirection } = customizer;\n\n    let localLanguagesObjects = localLanguages\n        ? systemLanguages.filter((l) => localLanguages.includes(l.id))\n        : [];\n\n    userLanguages = userLanguages.filter(\n        ({ isActive, Language }) => isActive && !removedItems.includes(Language.id)\n    );\n\n    let userLangIds = userLanguages.map(({ Language }) => Language.id);\n    let uniqueLocalLanguages = localLanguagesObjects.filter((l) => !userLangIds.includes(l.id));\n\n    let mappedLangs = mapLanguages(\n        [...uniqueLocalLanguages, ...userLanguages, ...sourceLanguage],\n        localText || text,\n        true\n    );\n\n    const Option = (props, index) => {\n        return props.options && props.options.length && props.options[0].value === props.value ? (\n            <>\n                {(branding || appearance) === 'WITH_BRANDING' && (\n                    <div\n                        style={{\n                            fontFamily: 'Open Sans',\n                            fontSize: '9px',\n                            lineHeight: '5.22',\n                            textAlign: 'center',\n                        }}\n                    >\n                        ⚡ by translatestack\n                    </div>\n                )}\n\n                <components.Option {...props} />\n            </>\n        ) : (\n            <components.Option {...props} />\n        );\n    };\n\n    return (\n        <div className=\"customizer-page-wrapper\">\n            <div className=\"window-container\">\n                <div className=\"window-row\">\n                    <div className=\"column left\">\n                        <span className=\"dot\" style={{ background: '#ff7166' }}></span>\n                        <span className=\"dot\" style={{ background: '#ffbf66' }}></span>\n                        <span className=\"dot\" style={{ background: '#50c65c' }}></span>\n                    </div>\n                </div>\n\n                <div\n                    className={classNames('window-content', {\n                        isLeft: (localPosition || position) === 'LEFT',\n                        isRight: (localPosition || position) === 'RIGHT',\n                    })}\n                >\n                    <Select\n                        options={mappedLangs}\n                        defaultValue={mappedLangs[mappedLangs.length - 1]}\n                        isSearchable={false}\n                        isOptionDisabled={true}\n                        styles={CustomStyle(localText || text)}\n                        menuPlacement={\n                            (localPosition || position) === 'LEFT' ||\n                            (localPosition || position) === 'RIGHT'\n                                ? 'top'\n                                : (localCustomDirection || '').toLowerCase() === 'up'\n                                ? 'top'\n                                : (localCustomDirection || '').toLowerCase() === 'down'\n                                ? 'bottom'\n                                : customDivDirection.toLowerCase() === 'up'\n                                ? 'top'\n                                : 'bottom'\n                        }\n                        menuIsOpen={shouldOpenTheSelectOptions === true ? true : undefined}\n                        components={{ Option }}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Customizer;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport PageNotFound from './components/PageNotFound';\nimport PageLayout from './components/PageLayout';\nimport AuthPageLayout from './components/AuthPageLayout';\nimport Login from './signupLogin/login/components/Login';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport Signup from './signupLogin/signup/components/Signup';\nimport { ROLES } from './signupLogin/constants';\nimport { auth } from './signupLogin/auth';\nimport UserProfile from './userProfile/profile/components/UserProfile';\nimport ResetPassword from './signupLogin/resetPassword/components/ResetPassword';\nimport Onboarding from './translateStack/onboarding/components/Onboarding';\nimport Projects from './translateStack/projects/components/Projects';\nimport Translation from './translateStack/translation/components/Translation';\nimport Customizer from './translateStack/customizer/components/Customizer';\n\nexport const ROUTE_PATHS = {\n    home: '/',\n    notFound: '*',\n    app: {\n        onboarding: '/onboarding',\n        translation: '/translation/:pageId',\n        customizer: '/customizer',\n    },\n    auth: {\n        me: '/me', // TODO add\n        signup: '/signup',\n        login: '/login',\n        logout: '/logout',\n        resetPassword: '/reset-password', // TODO add\n        // passwordReset: '/password-reset/:token', // TODO add\n        // accountSettings: '/account-settings',\n    },\n};\n\nconst Routes = ({ userRole, isNew, skippedOnboarding, isOpenCustomizer }) => {\n    return (\n        <Switch>\n            <ProtectedRoute\n                path={ROUTE_PATHS.home}\n                exact\n                component={(matchProps) => (\n                    <PageLayout\n                        Component={Projects}\n                        {...matchProps}\n                        title=\"Projects\"\n                        isOpenCustomizer={isOpenCustomizer}\n                    />\n                )}\n                roles={[ROLES.ADMIN]}\n                userRole={userRole}\n            />\n\n            <ProtectedRoute\n                path={ROUTE_PATHS.app.onboarding}\n                exact\n                component={(matchProps) => (\n                    <PageLayout\n                        Component={Onboarding}\n                        {...matchProps}\n                        title=\"\"\n                        isNew={isNew}\n                        skippedOnboarding={skippedOnboarding}\n                        isOpenCustomizer={isOpenCustomizer}\n                    />\n                )}\n                roles={[ROLES.ADMIN]}\n                userRole={userRole}\n                isNew={isNew}\n                skippedOnboarding={skippedOnboarding}\n            />\n\n            <ProtectedRoute\n                path={ROUTE_PATHS.app.translation}\n                exact\n                component={(matchProps) => (\n                    <PageLayout\n                        Component={Translation}\n                        {...matchProps}\n                        title=\"\"\n                        isOpenCustomizer={isOpenCustomizer}\n                    />\n                )}\n                roles={[ROLES.ADMIN]}\n                userRole={userRole}\n            />\n\n            <ProtectedRoute\n                path={ROUTE_PATHS.app.customizer}\n                exact\n                component={(matchProps) => (\n                    <PageLayout\n                        Component={Customizer}\n                        {...matchProps}\n                        title=\"\"\n                        isOpenCustomizer={isOpenCustomizer}\n                    />\n                )}\n                roles={[ROLES.ADMIN]}\n                userRole={userRole}\n            />\n\n            <Route\n                path={ROUTE_PATHS.auth.signup}\n                exact\n                render={(matchProps) => (\n                    <AuthPageLayout\n                        Component={Signup}\n                        title=\"Create new account!\"\n                        headerLink={{\n                            title: 'Log in',\n                            to: ROUTE_PATHS.auth.login,\n                        }}\n                        {...matchProps}\n                    />\n                )}\n            />\n\n            <Route\n                path={ROUTE_PATHS.auth.login}\n                exact\n                render={(matchProps) => (\n                    <AuthPageLayout\n                        Component={Login}\n                        title=\"Login to your account\"\n                        headerLink={{\n                            title: 'New? Sign up',\n                            to: ROUTE_PATHS.auth.signup,\n                        }}\n                        {...matchProps}\n                    />\n                )}\n            />\n\n            <Route\n                path={ROUTE_PATHS.auth.resetPassword}\n                exact\n                render={(matchProps) => (\n                    <AuthPageLayout\n                        Component={ResetPassword}\n                        title=\"Reset your password\"\n                        {...matchProps}\n                    />\n                )}\n            />\n\n            <Route path={ROUTE_PATHS.notFound} exact component={PageNotFound} />\n        </Switch>\n    );\n};\n\nexport default Routes;\n","import React, { useEffect, useRef, useState } from 'react';\nimport LoadingBar from 'react-top-loading-bar';\n\nimport Layout from './layout/Layout';\nimport Sidebar from './layout/Sidebar';\nimport Content from './layout/Content';\nimport Routes from './routes';\nimport { auth } from './signupLogin/auth';\nimport { useMeQuery } from './rootUseQuery';\nimport { Spin } from 'antd';\nimport { useUserData } from './signupLogin/login/useUserDataMutations';\nimport { useCustomizerQueryClient } from './translateStack/customizer/useQueries';\nimport { browserHistory } from './browserHistory';\nimport { useCustomizerMutationClient } from './translateStack/customizer/useMutations';\n\nconst token = auth.getAccessToken();\n\nconst App = () => {\n    const ref = useRef(null);\n\n    const { loading, data, error } = useMeQuery();\n    const [userRole, setUserRole] = useState(undefined);\n    const { data: customizerData, loading: customizerLoading } = useCustomizerQueryClient();\n    const [updateCustomizerClient] = useCustomizerMutationClient();\n\n    const [setUserData] = useUserData();\n\n    async function setUserDataAsync() {\n        if (!loading) {\n            const { id, fullName, email, role, isNew } = data.me;\n            setUserRole(role);\n            await setUserData({ variables: { id, fullName, email, role, isNew } });\n        }\n    }\n\n    async function updateCustomizerData(isOpen) {\n        await updateCustomizerClient({ variables: { isOpen } });\n    }\n\n    useEffect(() => {\n        if (\n            !customizerLoading &&\n            browserHistory.location.pathname.includes('/customizer') &&\n            customizerData &&\n            customizerData.customizer &&\n            customizerData.customizer.isOpen === false\n        ) {\n            updateCustomizerData(true);\n        }\n    }, []);\n    if (loading || customizerLoading) {\n        return <></>;\n    }\n\n    if (userRole === undefined && data && data.me) {\n        setUserDataAsync();\n    }\n\n    const isNew = data && data.me ? data.me.isNew : false;\n    const skippedOnboarding = data && data.me ? data.me.skippedOnboarding : false;\n    const isOpenCustomizer =\n        customizerData && customizerData.customizer ? customizerData.customizer.isOpen : false;\n\n    const openLanguagesComponent =\n        customizerData && customizerData.customizer\n            ? customizerData.customizer.openLanguagesComponent\n            : false;\n\n    if (token) {\n        return (\n            <>\n                <Layout\n                    style={{\n                        marginLeft:\n                            (isNew && !skippedOnboarding && browserHistory.location.pathname.includes('onboarding') ) || isOpenCustomizer ? '323px' : '205px',\n                        backgroundColor: 'rgba(247, 250, 252, 0.5)',\n                    }}\n                >\n                    <Sidebar userRole={userRole} isOpenCustomizer={isOpenCustomizer} openLanguagesComponent={openLanguagesComponent}/>\n                    <Content className=\"app-page-wrapper\" id=\"app-page-wrapper-id\">\n                        <Routes\n                            userRole={userRole}\n                            isNew={isNew}\n                            skippedOnboarding={skippedOnboarding}\n                            isOpenCustomizer={isOpenCustomizer}\n                        />\n                    </Content>\n                </Layout>\n            </>\n        );\n    } else {\n        return <Routes />;\n    }\n};\nexport default App;\n","import { useMutation } from '@apollo/react-hooks'\nimport { setUserDataMutation } from './gql'\n\nexport const useUserData = () => useMutation(setUserDataMutation)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport { ApolloProvider } from 'react-apollo';\nimport { ApolloProvider as ApolloHooksProvider } from '@apollo/react-hooks';\nimport { apolloClient } from './apollo/apolloClient';\nimport './assets/styles/_main.scss';\n\nimport App from './App';\nimport { browserHistory } from './browserHistory';\n// todod https://reacttraining.com/react-router/web/guides/code-splitting\n\nReactDOM.render(\n\t<ApolloProvider client={apolloClient}>\n\t\t<ApolloHooksProvider client={apolloClient}>\n\t\t\t<Router history={browserHistory}>\n\t\t\t\t<App />\n\t\t\t</Router>\n\t\t</ApolloHooksProvider>\n\t</ApolloProvider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}